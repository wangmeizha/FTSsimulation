//
// File generated by rootcint at Wed Oct 14 11:42:44 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl64_gcc482dIobjdIStarVMCdIGeometrydIGeometry_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Geometry_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Geom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Geom_t(void *p = 0);
   static void *newArray_Geom_t(Long_t size, void *p);
   static void delete_Geom_t(void *p);
   static void deleteArray_Geom_t(void *p);
   static void destruct_Geom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Geom_t*)
   {
      ::Geom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Geom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Geom_t", ::Geom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 14,
                  typeid(::Geom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Geom_t::Dictionary, isa_proxy, 4,
                  sizeof(::Geom_t) );
      instance.SetNew(&new_Geom_t);
      instance.SetNewArray(&newArray_Geom_t);
      instance.SetDelete(&delete_Geom_t);
      instance.SetDeleteArray(&deleteArray_Geom_t);
      instance.SetDestructor(&destruct_Geom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Geom_t*)
   {
      return GenerateInitInstanceLocal((::Geom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Geom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BbcmGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BbcmGeom_t(void *p = 0);
   static void *newArray_BbcmGeom_t(Long_t size, void *p);
   static void delete_BbcmGeom_t(void *p);
   static void deleteArray_BbcmGeom_t(void *p);
   static void destruct_BbcmGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BbcmGeom_t*)
   {
      ::BbcmGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BbcmGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BbcmGeom_t", ::BbcmGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 106,
                  typeid(::BbcmGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BbcmGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::BbcmGeom_t) );
      instance.SetNew(&new_BbcmGeom_t);
      instance.SetNewArray(&newArray_BbcmGeom_t);
      instance.SetDelete(&delete_BbcmGeom_t);
      instance.SetDeleteArray(&deleteArray_BbcmGeom_t);
      instance.SetDestructor(&destruct_BbcmGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BbcmGeom_t*)
   {
      return GenerateInitInstanceLocal((::BbcmGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BbcmGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CalbGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CalbGeom_t(void *p = 0);
   static void *newArray_CalbGeom_t(Long_t size, void *p);
   static void delete_CalbGeom_t(void *p);
   static void deleteArray_CalbGeom_t(void *p);
   static void destruct_CalbGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CalbGeom_t*)
   {
      ::CalbGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalbGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalbGeom_t", ::CalbGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 121,
                  typeid(::CalbGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CalbGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::CalbGeom_t) );
      instance.SetNew(&new_CalbGeom_t);
      instance.SetNewArray(&newArray_CalbGeom_t);
      instance.SetDelete(&delete_CalbGeom_t);
      instance.SetDeleteArray(&deleteArray_CalbGeom_t);
      instance.SetDestructor(&destruct_CalbGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CalbGeom_t*)
   {
      return GenerateInitInstanceLocal((::CalbGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CalbGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CaveGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CaveGeom_t(void *p = 0);
   static void *newArray_CaveGeom_t(Long_t size, void *p);
   static void delete_CaveGeom_t(void *p);
   static void deleteArray_CaveGeom_t(void *p);
   static void destruct_CaveGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CaveGeom_t*)
   {
      ::CaveGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CaveGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CaveGeom_t", ::CaveGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 142,
                  typeid(::CaveGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CaveGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::CaveGeom_t) );
      instance.SetNew(&new_CaveGeom_t);
      instance.SetNewArray(&newArray_CaveGeom_t);
      instance.SetDelete(&delete_CaveGeom_t);
      instance.SetDeleteArray(&deleteArray_CaveGeom_t);
      instance.SetDestructor(&destruct_CaveGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CaveGeom_t*)
   {
      return GenerateInitInstanceLocal((::CaveGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CaveGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EcalGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EcalGeom_t(void *p = 0);
   static void *newArray_EcalGeom_t(Long_t size, void *p);
   static void delete_EcalGeom_t(void *p);
   static void deleteArray_EcalGeom_t(void *p);
   static void destruct_EcalGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EcalGeom_t*)
   {
      ::EcalGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EcalGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EcalGeom_t", ::EcalGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 156,
                  typeid(::EcalGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EcalGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::EcalGeom_t) );
      instance.SetNew(&new_EcalGeom_t);
      instance.SetNewArray(&newArray_EcalGeom_t);
      instance.SetDelete(&delete_EcalGeom_t);
      instance.SetDeleteArray(&deleteArray_EcalGeom_t);
      instance.SetDestructor(&destruct_EcalGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EcalGeom_t*)
   {
      return GenerateInitInstanceLocal((::EcalGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EcalGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FpdmGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FpdmGeom_t(void *p = 0);
   static void *newArray_FpdmGeom_t(Long_t size, void *p);
   static void delete_FpdmGeom_t(void *p);
   static void deleteArray_FpdmGeom_t(void *p);
   static void destruct_FpdmGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FpdmGeom_t*)
   {
      ::FpdmGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FpdmGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FpdmGeom_t", ::FpdmGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 171,
                  typeid(::FpdmGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FpdmGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::FpdmGeom_t) );
      instance.SetNew(&new_FpdmGeom_t);
      instance.SetNewArray(&newArray_FpdmGeom_t);
      instance.SetDelete(&delete_FpdmGeom_t);
      instance.SetDeleteArray(&deleteArray_FpdmGeom_t);
      instance.SetDestructor(&destruct_FpdmGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FpdmGeom_t*)
   {
      return GenerateInitInstanceLocal((::FpdmGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FpdmGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FsceGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FsceGeom_t(void *p = 0);
   static void *newArray_FsceGeom_t(Long_t size, void *p);
   static void delete_FsceGeom_t(void *p);
   static void deleteArray_FsceGeom_t(void *p);
   static void destruct_FsceGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FsceGeom_t*)
   {
      ::FsceGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FsceGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FsceGeom_t", ::FsceGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 185,
                  typeid(::FsceGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FsceGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::FsceGeom_t) );
      instance.SetNew(&new_FsceGeom_t);
      instance.SetNewArray(&newArray_FsceGeom_t);
      instance.SetDelete(&delete_FsceGeom_t);
      instance.SetDeleteArray(&deleteArray_FsceGeom_t);
      instance.SetDestructor(&destruct_FsceGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FsceGeom_t*)
   {
      return GenerateInitInstanceLocal((::FsceGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FsceGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HcalGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HcalGeom_t(void *p = 0);
   static void *newArray_HcalGeom_t(Long_t size, void *p);
   static void delete_HcalGeom_t(void *p);
   static void deleteArray_HcalGeom_t(void *p);
   static void destruct_HcalGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HcalGeom_t*)
   {
      ::HcalGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HcalGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HcalGeom_t", ::HcalGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 197,
                  typeid(::HcalGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HcalGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::HcalGeom_t) );
      instance.SetNew(&new_HcalGeom_t);
      instance.SetNewArray(&newArray_HcalGeom_t);
      instance.SetDelete(&delete_HcalGeom_t);
      instance.SetDeleteArray(&deleteArray_HcalGeom_t);
      instance.SetDestructor(&destruct_HcalGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HcalGeom_t*)
   {
      return GenerateInitInstanceLocal((::HcalGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HcalGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EiddGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EiddGeom_t(void *p = 0);
   static void *newArray_EiddGeom_t(Long_t size, void *p);
   static void delete_EiddGeom_t(void *p);
   static void deleteArray_EiddGeom_t(void *p);
   static void destruct_EiddGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EiddGeom_t*)
   {
      ::EiddGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EiddGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EiddGeom_t", ::EiddGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 209,
                  typeid(::EiddGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EiddGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::EiddGeom_t) );
      instance.SetNew(&new_EiddGeom_t);
      instance.SetNewArray(&newArray_EiddGeom_t);
      instance.SetDelete(&delete_EiddGeom_t);
      instance.SetDeleteArray(&deleteArray_EiddGeom_t);
      instance.SetDestructor(&destruct_EiddGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EiddGeom_t*)
   {
      return GenerateInitInstanceLocal((::EiddGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EiddGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FtpcGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FtpcGeom_t(void *p = 0);
   static void *newArray_FtpcGeom_t(Long_t size, void *p);
   static void delete_FtpcGeom_t(void *p);
   static void deleteArray_FtpcGeom_t(void *p);
   static void destruct_FtpcGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FtpcGeom_t*)
   {
      ::FtpcGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FtpcGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FtpcGeom_t", ::FtpcGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 222,
                  typeid(::FtpcGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FtpcGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::FtpcGeom_t) );
      instance.SetNew(&new_FtpcGeom_t);
      instance.SetNewArray(&newArray_FtpcGeom_t);
      instance.SetDelete(&delete_FtpcGeom_t);
      instance.SetDeleteArray(&deleteArray_FtpcGeom_t);
      instance.SetDestructor(&destruct_FtpcGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FtpcGeom_t*)
   {
      return GenerateInitInstanceLocal((::FtpcGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FtpcGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FtsdGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FtsdGeom_t(void *p = 0);
   static void *newArray_FtsdGeom_t(Long_t size, void *p);
   static void delete_FtsdGeom_t(void *p);
   static void deleteArray_FtsdGeom_t(void *p);
   static void destruct_FtsdGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FtsdGeom_t*)
   {
      ::FtsdGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FtsdGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FtsdGeom_t", ::FtsdGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 237,
                  typeid(::FtsdGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FtsdGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::FtsdGeom_t) );
      instance.SetNew(&new_FtsdGeom_t);
      instance.SetNewArray(&newArray_FtsdGeom_t);
      instance.SetDelete(&delete_FtsdGeom_t);
      instance.SetDeleteArray(&deleteArray_FtsdGeom_t);
      instance.SetDestructor(&destruct_FtsdGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FtsdGeom_t*)
   {
      return GenerateInitInstanceLocal((::FtsdGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FtsdGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MagpGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MagpGeom_t(void *p = 0);
   static void *newArray_MagpGeom_t(Long_t size, void *p);
   static void delete_MagpGeom_t(void *p);
   static void deleteArray_MagpGeom_t(void *p);
   static void destruct_MagpGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MagpGeom_t*)
   {
      ::MagpGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MagpGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MagpGeom_t", ::MagpGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 250,
                  typeid(::MagpGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MagpGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::MagpGeom_t) );
      instance.SetNew(&new_MagpGeom_t);
      instance.SetNewArray(&newArray_MagpGeom_t);
      instance.SetDelete(&delete_MagpGeom_t);
      instance.SetDeleteArray(&deleteArray_MagpGeom_t);
      instance.SetDestructor(&destruct_MagpGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MagpGeom_t*)
   {
      return GenerateInitInstanceLocal((::MagpGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MagpGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MfldGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MfldGeom_t(void *p = 0);
   static void *newArray_MfldGeom_t(Long_t size, void *p);
   static void delete_MfldGeom_t(void *p);
   static void deleteArray_MfldGeom_t(void *p);
   static void destruct_MfldGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MfldGeom_t*)
   {
      ::MfldGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MfldGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MfldGeom_t", ::MfldGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 266,
                  typeid(::MfldGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MfldGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::MfldGeom_t) );
      instance.SetNew(&new_MfldGeom_t);
      instance.SetNewArray(&newArray_MfldGeom_t);
      instance.SetDelete(&delete_MfldGeom_t);
      instance.SetDeleteArray(&deleteArray_MfldGeom_t);
      instance.SetDestructor(&destruct_MfldGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MfldGeom_t*)
   {
      return GenerateInitInstanceLocal((::MfldGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MfldGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MutdGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MutdGeom_t(void *p = 0);
   static void *newArray_MutdGeom_t(Long_t size, void *p);
   static void delete_MutdGeom_t(void *p);
   static void deleteArray_MutdGeom_t(void *p);
   static void destruct_MutdGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MutdGeom_t*)
   {
      ::MutdGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MutdGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MutdGeom_t", ::MutdGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 282,
                  typeid(::MutdGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MutdGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::MutdGeom_t) );
      instance.SetNew(&new_MutdGeom_t);
      instance.SetNewArray(&newArray_MutdGeom_t);
      instance.SetDelete(&delete_MutdGeom_t);
      instance.SetDeleteArray(&deleteArray_MutdGeom_t);
      instance.SetDestructor(&destruct_MutdGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MutdGeom_t*)
   {
      return GenerateInitInstanceLocal((::MutdGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MutdGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PhmdGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PhmdGeom_t(void *p = 0);
   static void *newArray_PhmdGeom_t(Long_t size, void *p);
   static void delete_PhmdGeom_t(void *p);
   static void deleteArray_PhmdGeom_t(void *p);
   static void destruct_PhmdGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PhmdGeom_t*)
   {
      ::PhmdGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PhmdGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PhmdGeom_t", ::PhmdGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 296,
                  typeid(::PhmdGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PhmdGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::PhmdGeom_t) );
      instance.SetNew(&new_PhmdGeom_t);
      instance.SetNewArray(&newArray_PhmdGeom_t);
      instance.SetDelete(&delete_PhmdGeom_t);
      instance.SetDeleteArray(&deleteArray_PhmdGeom_t);
      instance.SetDestructor(&destruct_PhmdGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PhmdGeom_t*)
   {
      return GenerateInitInstanceLocal((::PhmdGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PhmdGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PipeGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PipeGeom_t(void *p = 0);
   static void *newArray_PipeGeom_t(Long_t size, void *p);
   static void delete_PipeGeom_t(void *p);
   static void deleteArray_PipeGeom_t(void *p);
   static void destruct_PipeGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PipeGeom_t*)
   {
      ::PipeGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PipeGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PipeGeom_t", ::PipeGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 310,
                  typeid(::PipeGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PipeGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::PipeGeom_t) );
      instance.SetNew(&new_PipeGeom_t);
      instance.SetNewArray(&newArray_PipeGeom_t);
      instance.SetDelete(&delete_PipeGeom_t);
      instance.SetDeleteArray(&deleteArray_PipeGeom_t);
      instance.SetDestructor(&destruct_PipeGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PipeGeom_t*)
   {
      return GenerateInitInstanceLocal((::PipeGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PipeGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PixlGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PixlGeom_t(void *p = 0);
   static void *newArray_PixlGeom_t(Long_t size, void *p);
   static void delete_PixlGeom_t(void *p);
   static void deleteArray_PixlGeom_t(void *p);
   static void destruct_PixlGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PixlGeom_t*)
   {
      ::PixlGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PixlGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PixlGeom_t", ::PixlGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 325,
                  typeid(::PixlGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PixlGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::PixlGeom_t) );
      instance.SetNew(&new_PixlGeom_t);
      instance.SetNewArray(&newArray_PixlGeom_t);
      instance.SetDelete(&delete_PixlGeom_t);
      instance.SetDeleteArray(&deleteArray_PixlGeom_t);
      instance.SetDestructor(&destruct_PixlGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PixlGeom_t*)
   {
      return GenerateInitInstanceLocal((::PixlGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PixlGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DtubGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_DtubGeom_t(void *p = 0);
   static void *newArray_DtubGeom_t(Long_t size, void *p);
   static void delete_DtubGeom_t(void *p);
   static void deleteArray_DtubGeom_t(void *p);
   static void destruct_DtubGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DtubGeom_t*)
   {
      ::DtubGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DtubGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DtubGeom_t", ::DtubGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 342,
                  typeid(::DtubGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DtubGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::DtubGeom_t) );
      instance.SetNew(&new_DtubGeom_t);
      instance.SetNewArray(&newArray_DtubGeom_t);
      instance.SetDelete(&delete_DtubGeom_t);
      instance.SetDeleteArray(&deleteArray_DtubGeom_t);
      instance.SetDestructor(&destruct_DtubGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DtubGeom_t*)
   {
      return GenerateInitInstanceLocal((::DtubGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DtubGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SconGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SconGeom_t(void *p = 0);
   static void *newArray_SconGeom_t(Long_t size, void *p);
   static void delete_SconGeom_t(void *p);
   static void deleteArray_SconGeom_t(void *p);
   static void destruct_SconGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SconGeom_t*)
   {
      ::SconGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SconGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SconGeom_t", ::SconGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 356,
                  typeid(::SconGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SconGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::SconGeom_t) );
      instance.SetNew(&new_SconGeom_t);
      instance.SetNewArray(&newArray_SconGeom_t);
      instance.SetDelete(&delete_SconGeom_t);
      instance.SetDeleteArray(&deleteArray_SconGeom_t);
      instance.SetDestructor(&destruct_SconGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SconGeom_t*)
   {
      return GenerateInitInstanceLocal((::SconGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SconGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SisdGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SisdGeom_t(void *p = 0);
   static void *newArray_SisdGeom_t(Long_t size, void *p);
   static void delete_SisdGeom_t(void *p);
   static void deleteArray_SisdGeom_t(void *p);
   static void destruct_SisdGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SisdGeom_t*)
   {
      ::SisdGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SisdGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SisdGeom_t", ::SisdGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 370,
                  typeid(::SisdGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SisdGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::SisdGeom_t) );
      instance.SetNew(&new_SisdGeom_t);
      instance.SetNewArray(&newArray_SisdGeom_t);
      instance.SetDelete(&delete_SisdGeom_t);
      instance.SetDeleteArray(&deleteArray_SisdGeom_t);
      instance.SetDestructor(&destruct_SisdGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SisdGeom_t*)
   {
      return GenerateInitInstanceLocal((::SisdGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SisdGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SvttGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SvttGeom_t(void *p = 0);
   static void *newArray_SvttGeom_t(Long_t size, void *p);
   static void delete_SvttGeom_t(void *p);
   static void deleteArray_SvttGeom_t(void *p);
   static void destruct_SvttGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SvttGeom_t*)
   {
      ::SvttGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SvttGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SvttGeom_t", ::SvttGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 384,
                  typeid(::SvttGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SvttGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::SvttGeom_t) );
      instance.SetNew(&new_SvttGeom_t);
      instance.SetNewArray(&newArray_SvttGeom_t);
      instance.SetDelete(&delete_SvttGeom_t);
      instance.SetDeleteArray(&deleteArray_SvttGeom_t);
      instance.SetDestructor(&destruct_SvttGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SvttGeom_t*)
   {
      return GenerateInitInstanceLocal((::SvttGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SvttGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BtofGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BtofGeom_t(void *p = 0);
   static void *newArray_BtofGeom_t(Long_t size, void *p);
   static void delete_BtofGeom_t(void *p);
   static void deleteArray_BtofGeom_t(void *p);
   static void destruct_BtofGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BtofGeom_t*)
   {
      ::BtofGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BtofGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BtofGeom_t", ::BtofGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 405,
                  typeid(::BtofGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BtofGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::BtofGeom_t) );
      instance.SetNew(&new_BtofGeom_t);
      instance.SetNewArray(&newArray_BtofGeom_t);
      instance.SetDelete(&delete_BtofGeom_t);
      instance.SetDeleteArray(&deleteArray_BtofGeom_t);
      instance.SetDestructor(&destruct_BtofGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BtofGeom_t*)
   {
      return GenerateInitInstanceLocal((::BtofGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BtofGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TpceGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TpceGeom_t(void *p = 0);
   static void *newArray_TpceGeom_t(Long_t size, void *p);
   static void delete_TpceGeom_t(void *p);
   static void deleteArray_TpceGeom_t(void *p);
   static void destruct_TpceGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TpceGeom_t*)
   {
      ::TpceGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TpceGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TpceGeom_t", ::TpceGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 422,
                  typeid(::TpceGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TpceGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::TpceGeom_t) );
      instance.SetNew(&new_TpceGeom_t);
      instance.SetNewArray(&newArray_TpceGeom_t);
      instance.SetDelete(&delete_TpceGeom_t);
      instance.SetDeleteArray(&deleteArray_TpceGeom_t);
      instance.SetDestructor(&destruct_TpceGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TpceGeom_t*)
   {
      return GenerateInitInstanceLocal((::TpceGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TpceGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TpcxGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TpcxGeom_t(void *p = 0);
   static void *newArray_TpcxGeom_t(Long_t size, void *p);
   static void delete_TpcxGeom_t(void *p);
   static void deleteArray_TpcxGeom_t(void *p);
   static void destruct_TpcxGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TpcxGeom_t*)
   {
      ::TpcxGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TpcxGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TpcxGeom_t", ::TpcxGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 438,
                  typeid(::TpcxGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TpcxGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::TpcxGeom_t) );
      instance.SetNew(&new_TpcxGeom_t);
      instance.SetNewArray(&newArray_TpcxGeom_t);
      instance.SetDelete(&delete_TpcxGeom_t);
      instance.SetDeleteArray(&deleteArray_TpcxGeom_t);
      instance.SetDestructor(&destruct_TpcxGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TpcxGeom_t*)
   {
      return GenerateInitInstanceLocal((::TpcxGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TpcxGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void VpddGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_VpddGeom_t(void *p = 0);
   static void *newArray_VpddGeom_t(Long_t size, void *p);
   static void delete_VpddGeom_t(void *p);
   static void deleteArray_VpddGeom_t(void *p);
   static void destruct_VpddGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::VpddGeom_t*)
   {
      ::VpddGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::VpddGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("VpddGeom_t", ::VpddGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 455,
                  typeid(::VpddGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::VpddGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::VpddGeom_t) );
      instance.SetNew(&new_VpddGeom_t);
      instance.SetNewArray(&newArray_VpddGeom_t);
      instance.SetDelete(&delete_VpddGeom_t);
      instance.SetDeleteArray(&deleteArray_VpddGeom_t);
      instance.SetDestructor(&destruct_VpddGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::VpddGeom_t*)
   {
      return GenerateInitInstanceLocal((::VpddGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::VpddGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void UpstGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_UpstGeom_t(void *p = 0);
   static void *newArray_UpstGeom_t(Long_t size, void *p);
   static void delete_UpstGeom_t(void *p);
   static void deleteArray_UpstGeom_t(void *p);
   static void destruct_UpstGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::UpstGeom_t*)
   {
      ::UpstGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::UpstGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("UpstGeom_t", ::UpstGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 469,
                  typeid(::UpstGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::UpstGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::UpstGeom_t) );
      instance.SetNew(&new_UpstGeom_t);
      instance.SetNewArray(&newArray_UpstGeom_t);
      instance.SetDelete(&delete_UpstGeom_t);
      instance.SetDeleteArray(&deleteArray_UpstGeom_t);
      instance.SetDestructor(&destruct_UpstGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::UpstGeom_t*)
   {
      return GenerateInitInstanceLocal((::UpstGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::UpstGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ZcalGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ZcalGeom_t(void *p = 0);
   static void *newArray_ZcalGeom_t(Long_t size, void *p);
   static void delete_ZcalGeom_t(void *p);
   static void deleteArray_ZcalGeom_t(void *p);
   static void destruct_ZcalGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ZcalGeom_t*)
   {
      ::ZcalGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ZcalGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ZcalGeom_t", ::ZcalGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 483,
                  typeid(::ZcalGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ZcalGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::ZcalGeom_t) );
      instance.SetNew(&new_ZcalGeom_t);
      instance.SetNewArray(&newArray_ZcalGeom_t);
      instance.SetDelete(&delete_ZcalGeom_t);
      instance.SetDeleteArray(&deleteArray_ZcalGeom_t);
      instance.SetDestructor(&destruct_ZcalGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ZcalGeom_t*)
   {
      return GenerateInitInstanceLocal((::ZcalGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ZcalGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FtroGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FtroGeom_t(void *p = 0);
   static void *newArray_FtroGeom_t(Long_t size, void *p);
   static void delete_FtroGeom_t(void *p);
   static void deleteArray_FtroGeom_t(void *p);
   static void destruct_FtroGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FtroGeom_t*)
   {
      ::FtroGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FtroGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FtroGeom_t", ::FtroGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 497,
                  typeid(::FtroGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FtroGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::FtroGeom_t) );
      instance.SetNew(&new_FtroGeom_t);
      instance.SetNewArray(&newArray_FtroGeom_t);
      instance.SetDelete(&delete_FtroGeom_t);
      instance.SetDeleteArray(&deleteArray_FtroGeom_t);
      instance.SetDestructor(&destruct_FtroGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FtroGeom_t*)
   {
      return GenerateInitInstanceLocal((::FtroGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FtroGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RichGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RichGeom_t(void *p = 0);
   static void *newArray_RichGeom_t(Long_t size, void *p);
   static void delete_RichGeom_t(void *p);
   static void deleteArray_RichGeom_t(void *p);
   static void destruct_RichGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RichGeom_t*)
   {
      ::RichGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RichGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RichGeom_t", ::RichGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 511,
                  typeid(::RichGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RichGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::RichGeom_t) );
      instance.SetNew(&new_RichGeom_t);
      instance.SetNewArray(&newArray_RichGeom_t);
      instance.SetDelete(&delete_RichGeom_t);
      instance.SetDeleteArray(&deleteArray_RichGeom_t);
      instance.SetDestructor(&destruct_RichGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RichGeom_t*)
   {
      return GenerateInitInstanceLocal((::RichGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RichGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FgtdGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FgtdGeom_t(void *p = 0);
   static void *newArray_FgtdGeom_t(Long_t size, void *p);
   static void delete_FgtdGeom_t(void *p);
   static void deleteArray_FgtdGeom_t(void *p);
   static void destruct_FgtdGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FgtdGeom_t*)
   {
      ::FgtdGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FgtdGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FgtdGeom_t", ::FgtdGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 524,
                  typeid(::FgtdGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FgtdGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::FgtdGeom_t) );
      instance.SetNew(&new_FgtdGeom_t);
      instance.SetNewArray(&newArray_FgtdGeom_t);
      instance.SetDelete(&delete_FgtdGeom_t);
      instance.SetDeleteArray(&deleteArray_FgtdGeom_t);
      instance.SetDestructor(&destruct_FgtdGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FgtdGeom_t*)
   {
      return GenerateInitInstanceLocal((::FgtdGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FgtdGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void IdsmGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_IdsmGeom_t(void *p = 0);
   static void *newArray_IdsmGeom_t(Long_t size, void *p);
   static void delete_IdsmGeom_t(void *p);
   static void deleteArray_IdsmGeom_t(void *p);
   static void destruct_IdsmGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::IdsmGeom_t*)
   {
      ::IdsmGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::IdsmGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("IdsmGeom_t", ::IdsmGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 536,
                  typeid(::IdsmGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::IdsmGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::IdsmGeom_t) );
      instance.SetNew(&new_IdsmGeom_t);
      instance.SetNewArray(&newArray_IdsmGeom_t);
      instance.SetDelete(&delete_IdsmGeom_t);
      instance.SetDeleteArray(&deleteArray_IdsmGeom_t);
      instance.SetDestructor(&destruct_IdsmGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::IdsmGeom_t*)
   {
      return GenerateInitInstanceLocal((::IdsmGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::IdsmGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void IstdGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_IstdGeom_t(void *p = 0);
   static void *newArray_IstdGeom_t(Long_t size, void *p);
   static void delete_IstdGeom_t(void *p);
   static void deleteArray_IstdGeom_t(void *p);
   static void destruct_IstdGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::IstdGeom_t*)
   {
      ::IstdGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::IstdGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("IstdGeom_t", ::IstdGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 548,
                  typeid(::IstdGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::IstdGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::IstdGeom_t) );
      instance.SetNew(&new_IstdGeom_t);
      instance.SetNewArray(&newArray_IstdGeom_t);
      instance.SetDelete(&delete_IstdGeom_t);
      instance.SetDeleteArray(&deleteArray_IstdGeom_t);
      instance.SetDestructor(&destruct_IstdGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::IstdGeom_t*)
   {
      return GenerateInitInstanceLocal((::IstdGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::IstdGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PxstGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PxstGeom_t(void *p = 0);
   static void *newArray_PxstGeom_t(Long_t size, void *p);
   static void delete_PxstGeom_t(void *p);
   static void deleteArray_PxstGeom_t(void *p);
   static void destruct_PxstGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PxstGeom_t*)
   {
      ::PxstGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PxstGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PxstGeom_t", ::PxstGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 560,
                  typeid(::PxstGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PxstGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::PxstGeom_t) );
      instance.SetNew(&new_PxstGeom_t);
      instance.SetNewArray(&newArray_PxstGeom_t);
      instance.SetDelete(&delete_PxstGeom_t);
      instance.SetDeleteArray(&deleteArray_PxstGeom_t);
      instance.SetDestructor(&destruct_PxstGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PxstGeom_t*)
   {
      return GenerateInitInstanceLocal((::PxstGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PxstGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PsupGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PsupGeom_t(void *p = 0);
   static void *newArray_PsupGeom_t(Long_t size, void *p);
   static void delete_PsupGeom_t(void *p);
   static void deleteArray_PsupGeom_t(void *p);
   static void destruct_PsupGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PsupGeom_t*)
   {
      ::PsupGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PsupGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PsupGeom_t", ::PsupGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 572,
                  typeid(::PsupGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PsupGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::PsupGeom_t) );
      instance.SetNew(&new_PsupGeom_t);
      instance.SetNewArray(&newArray_PsupGeom_t);
      instance.SetDelete(&delete_PsupGeom_t);
      instance.SetDeleteArray(&deleteArray_PsupGeom_t);
      instance.SetDestructor(&destruct_PsupGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PsupGeom_t*)
   {
      return GenerateInitInstanceLocal((::PsupGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PsupGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PxldGeom_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PxldGeom_t(void *p = 0);
   static void *newArray_PxldGeom_t(Long_t size, void *p);
   static void delete_PxldGeom_t(void *p);
   static void deleteArray_PxldGeom_t(void *p);
   static void destruct_PxldGeom_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PxldGeom_t*)
   {
      ::PxldGeom_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PxldGeom_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PxldGeom_t", ::PxldGeom_t::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 585,
                  typeid(::PxldGeom_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PxldGeom_t::Dictionary, isa_proxy, 4,
                  sizeof(::PxldGeom_t) );
      instance.SetNew(&new_PxldGeom_t);
      instance.SetNewArray(&newArray_PxldGeom_t);
      instance.SetDelete(&delete_PxldGeom_t);
      instance.SetDeleteArray(&deleteArray_PxldGeom_t);
      instance.SetDestructor(&destruct_PxldGeom_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PxldGeom_t*)
   {
      return GenerateInitInstanceLocal((::PxldGeom_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PxldGeom_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Geometry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Geometry(void *p = 0);
   static void *newArray_Geometry(Long_t size, void *p);
   static void delete_Geometry(void *p);
   static void deleteArray_Geometry(void *p);
   static void destruct_Geometry(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Geometry*)
   {
      ::Geometry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Geometry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Geometry", ::Geometry::Class_Version(), ".sl64_gcc482/obj/StarVMC/Geometry/Geometry.h", 599,
                  typeid(::Geometry), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Geometry::Dictionary, isa_proxy, 4,
                  sizeof(::Geometry) );
      instance.SetNew(&new_Geometry);
      instance.SetNewArray(&newArray_Geometry);
      instance.SetDelete(&delete_Geometry);
      instance.SetDeleteArray(&deleteArray_Geometry);
      instance.SetDestructor(&destruct_Geometry);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Geometry*)
   {
      return GenerateInitInstanceLocal((::Geometry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Geometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Geom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Geom_t::Class_Name()
{
   return "Geom_t";
}

//______________________________________________________________________________
const char *Geom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Geom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Geom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Geom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Geom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Geom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Geom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Geom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BbcmGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BbcmGeom_t::Class_Name()
{
   return "BbcmGeom_t";
}

//______________________________________________________________________________
const char *BbcmGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BbcmGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BbcmGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BbcmGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BbcmGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BbcmGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BbcmGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BbcmGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CalbGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CalbGeom_t::Class_Name()
{
   return "CalbGeom_t";
}

//______________________________________________________________________________
const char *CalbGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CalbGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalbGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CalbGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalbGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CalbGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalbGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CalbGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CaveGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CaveGeom_t::Class_Name()
{
   return "CaveGeom_t";
}

//______________________________________________________________________________
const char *CaveGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CaveGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CaveGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CaveGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CaveGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CaveGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CaveGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CaveGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EcalGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EcalGeom_t::Class_Name()
{
   return "EcalGeom_t";
}

//______________________________________________________________________________
const char *EcalGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EcalGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EcalGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EcalGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EcalGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EcalGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EcalGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EcalGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FpdmGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FpdmGeom_t::Class_Name()
{
   return "FpdmGeom_t";
}

//______________________________________________________________________________
const char *FpdmGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FpdmGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FpdmGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FpdmGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FpdmGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FpdmGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FpdmGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FpdmGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FsceGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FsceGeom_t::Class_Name()
{
   return "FsceGeom_t";
}

//______________________________________________________________________________
const char *FsceGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FsceGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FsceGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FsceGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FsceGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FsceGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FsceGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FsceGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HcalGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HcalGeom_t::Class_Name()
{
   return "HcalGeom_t";
}

//______________________________________________________________________________
const char *HcalGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HcalGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HcalGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HcalGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HcalGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HcalGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HcalGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HcalGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EiddGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EiddGeom_t::Class_Name()
{
   return "EiddGeom_t";
}

//______________________________________________________________________________
const char *EiddGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EiddGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EiddGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EiddGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EiddGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EiddGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EiddGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EiddGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FtpcGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FtpcGeom_t::Class_Name()
{
   return "FtpcGeom_t";
}

//______________________________________________________________________________
const char *FtpcGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FtpcGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FtpcGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FtpcGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FtpcGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FtpcGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FtpcGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FtpcGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FtsdGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FtsdGeom_t::Class_Name()
{
   return "FtsdGeom_t";
}

//______________________________________________________________________________
const char *FtsdGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FtsdGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FtsdGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FtsdGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FtsdGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FtsdGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FtsdGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FtsdGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MagpGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MagpGeom_t::Class_Name()
{
   return "MagpGeom_t";
}

//______________________________________________________________________________
const char *MagpGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MagpGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MagpGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MagpGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MagpGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MagpGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MagpGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MagpGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MfldGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MfldGeom_t::Class_Name()
{
   return "MfldGeom_t";
}

//______________________________________________________________________________
const char *MfldGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MfldGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MfldGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MfldGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MfldGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MfldGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MfldGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MfldGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MutdGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MutdGeom_t::Class_Name()
{
   return "MutdGeom_t";
}

//______________________________________________________________________________
const char *MutdGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MutdGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MutdGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MutdGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MutdGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MutdGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MutdGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MutdGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PhmdGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PhmdGeom_t::Class_Name()
{
   return "PhmdGeom_t";
}

//______________________________________________________________________________
const char *PhmdGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PhmdGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PhmdGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PhmdGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PhmdGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PhmdGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PhmdGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PhmdGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PipeGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PipeGeom_t::Class_Name()
{
   return "PipeGeom_t";
}

//______________________________________________________________________________
const char *PipeGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PipeGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PipeGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PipeGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PipeGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PipeGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PipeGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PipeGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PixlGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PixlGeom_t::Class_Name()
{
   return "PixlGeom_t";
}

//______________________________________________________________________________
const char *PixlGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PixlGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PixlGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PixlGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PixlGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PixlGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PixlGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PixlGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DtubGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DtubGeom_t::Class_Name()
{
   return "DtubGeom_t";
}

//______________________________________________________________________________
const char *DtubGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DtubGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DtubGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DtubGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DtubGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DtubGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DtubGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DtubGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SconGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SconGeom_t::Class_Name()
{
   return "SconGeom_t";
}

//______________________________________________________________________________
const char *SconGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SconGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SconGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SconGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SconGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SconGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SconGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SconGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SisdGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SisdGeom_t::Class_Name()
{
   return "SisdGeom_t";
}

//______________________________________________________________________________
const char *SisdGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SisdGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SisdGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SisdGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SisdGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SisdGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SisdGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SisdGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SvttGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SvttGeom_t::Class_Name()
{
   return "SvttGeom_t";
}

//______________________________________________________________________________
const char *SvttGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SvttGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SvttGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SvttGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SvttGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SvttGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SvttGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SvttGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BtofGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BtofGeom_t::Class_Name()
{
   return "BtofGeom_t";
}

//______________________________________________________________________________
const char *BtofGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BtofGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BtofGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BtofGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BtofGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BtofGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BtofGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BtofGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TpceGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TpceGeom_t::Class_Name()
{
   return "TpceGeom_t";
}

//______________________________________________________________________________
const char *TpceGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TpceGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TpceGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TpceGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TpceGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TpceGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TpceGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TpceGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TpcxGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TpcxGeom_t::Class_Name()
{
   return "TpcxGeom_t";
}

//______________________________________________________________________________
const char *TpcxGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TpcxGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TpcxGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TpcxGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TpcxGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TpcxGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TpcxGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TpcxGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr VpddGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VpddGeom_t::Class_Name()
{
   return "VpddGeom_t";
}

//______________________________________________________________________________
const char *VpddGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VpddGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VpddGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VpddGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VpddGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VpddGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VpddGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VpddGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr UpstGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *UpstGeom_t::Class_Name()
{
   return "UpstGeom_t";
}

//______________________________________________________________________________
const char *UpstGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UpstGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int UpstGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UpstGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void UpstGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UpstGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *UpstGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UpstGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ZcalGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ZcalGeom_t::Class_Name()
{
   return "ZcalGeom_t";
}

//______________________________________________________________________________
const char *ZcalGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ZcalGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ZcalGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ZcalGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ZcalGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ZcalGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ZcalGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ZcalGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FtroGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FtroGeom_t::Class_Name()
{
   return "FtroGeom_t";
}

//______________________________________________________________________________
const char *FtroGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FtroGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FtroGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FtroGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FtroGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FtroGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FtroGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FtroGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RichGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RichGeom_t::Class_Name()
{
   return "RichGeom_t";
}

//______________________________________________________________________________
const char *RichGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RichGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RichGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RichGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RichGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RichGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RichGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RichGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FgtdGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FgtdGeom_t::Class_Name()
{
   return "FgtdGeom_t";
}

//______________________________________________________________________________
const char *FgtdGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FgtdGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FgtdGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FgtdGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FgtdGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FgtdGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FgtdGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FgtdGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr IdsmGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *IdsmGeom_t::Class_Name()
{
   return "IdsmGeom_t";
}

//______________________________________________________________________________
const char *IdsmGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IdsmGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IdsmGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IdsmGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IdsmGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IdsmGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IdsmGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IdsmGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr IstdGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *IstdGeom_t::Class_Name()
{
   return "IstdGeom_t";
}

//______________________________________________________________________________
const char *IstdGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IstdGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int IstdGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::IstdGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void IstdGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IstdGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *IstdGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::IstdGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PxstGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PxstGeom_t::Class_Name()
{
   return "PxstGeom_t";
}

//______________________________________________________________________________
const char *PxstGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PxstGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PxstGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PxstGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PxstGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PxstGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PxstGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PxstGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PsupGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PsupGeom_t::Class_Name()
{
   return "PsupGeom_t";
}

//______________________________________________________________________________
const char *PsupGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PsupGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PsupGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PsupGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PsupGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PsupGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PsupGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PsupGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PxldGeom_t::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PxldGeom_t::Class_Name()
{
   return "PxldGeom_t";
}

//______________________________________________________________________________
const char *PxldGeom_t::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PxldGeom_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PxldGeom_t::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PxldGeom_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PxldGeom_t::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PxldGeom_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PxldGeom_t::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PxldGeom_t*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Geometry::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Geometry::Class_Name()
{
   return "Geometry";
}

//______________________________________________________________________________
const char *Geometry::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Geometry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Geometry::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Geometry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Geometry::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Geometry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Geometry::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Geometry*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Geom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class Geom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Geom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(Geom_t::Class(),this);
   }
}

//______________________________________________________________________________
void Geom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Geom_t.
      TClass *R__cl = ::Geom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalFlag", &ecalFlag);
      R__insp.InspectMember(ecalFlag, "ecalFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalStat", &ecalStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_ecal", &nvolumes_ecal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_ecal", &nnodes_ecal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_ecal", &success_ecal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pipeFlag", &pipeFlag);
      R__insp.InspectMember(pipeFlag, "pipeFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pipeStat", &pipeStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_pipe", &nvolumes_pipe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_pipe", &nnodes_pipe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_pipe", &success_pipe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpdmFlag", &fpdmFlag);
      R__insp.InspectMember(fpdmFlag, "fpdmFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpdmStat", &fpdmStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_fpdm", &nvolumes_fpdm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_fpdm", &nnodes_fpdm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_fpdm", &success_fpdm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btofFlag", &btofFlag);
      R__insp.InspectMember(btofFlag, "btofFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "btofStat", &btofStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_btof", &nvolumes_btof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_btof", &nnodes_btof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_btof", &success_btof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vpddFlag", &vpddFlag);
      R__insp.InspectMember(vpddFlag, "vpddFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vpddStat", &vpddStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_vpdd", &nvolumes_vpdd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_vpdd", &nnodes_vpdd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_vpdd", &success_vpdd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftpcFlag", &ftpcFlag);
      R__insp.InspectMember(ftpcFlag, "ftpcFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftpcStat", &ftpcStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_ftpc", &nvolumes_ftpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_ftpc", &nnodes_ftpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_ftpc", &success_ftpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftroFlag", &ftroFlag);
      R__insp.InspectMember(ftroFlag, "ftroFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftroStat", &ftroStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_ftro", &nvolumes_ftro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_ftro", &nnodes_ftro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_ftro", &success_ftro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mutdFlag", &mutdFlag);
      R__insp.InspectMember(mutdFlag, "mutdFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mutdStat", &mutdStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_mutd", &nvolumes_mutd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_mutd", &nnodes_mutd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_mutd", &success_mutd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpceFlag", &tpceFlag);
      R__insp.InspectMember(tpceFlag, "tpceFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpceStat", &tpceStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_tpce", &nvolumes_tpce);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_tpce", &nnodes_tpce);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_tpce", &success_tpce);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calbFlag", &calbFlag);
      R__insp.InspectMember(calbFlag, "calbFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calbStat", &calbStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_calb", &nvolumes_calb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_calb", &nnodes_calb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_calb", &success_calb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sconFlag", &sconFlag);
      R__insp.InspectMember(sconFlag, "sconFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sconStat", &sconStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_scon", &nvolumes_scon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_scon", &nnodes_scon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_scon", &success_scon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "svttFlag", &svttFlag);
      R__insp.InspectMember(svttFlag, "svttFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "svttStat", &svttStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_svtt", &nvolumes_svtt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_svtt", &nnodes_svtt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_svtt", &success_svtt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phmdFlag", &phmdFlag);
      R__insp.InspectMember(phmdFlag, "phmdFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phmdStat", &phmdStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_phmd", &nvolumes_phmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_phmd", &nnodes_phmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_phmd", &success_phmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "upstFlag", &upstFlag);
      R__insp.InspectMember(upstFlag, "upstFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "upstStat", &upstStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_upst", &nvolumes_upst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_upst", &nnodes_upst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_upst", &success_upst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcalFlag", &zcalFlag);
      R__insp.InspectMember(zcalFlag, "zcalFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zcalStat", &zcalStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_zcal", &nvolumes_zcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_zcal", &nnodes_zcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_zcal", &success_zcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caveFlag", &caveFlag);
      R__insp.InspectMember(caveFlag, "caveFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caveStat", &caveStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_cave", &nvolumes_cave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_cave", &nnodes_cave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_cave", &success_cave);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "magpFlag", &magpFlag);
      R__insp.InspectMember(magpFlag, "magpFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "magpStat", &magpStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_magp", &nvolumes_magp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_magp", &nnodes_magp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_magp", &success_magp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bbcmFlag", &bbcmFlag);
      R__insp.InspectMember(bbcmFlag, "bbcmFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bbcmStat", &bbcmStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_bbcm", &nvolumes_bbcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_bbcm", &nnodes_bbcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_bbcm", &success_bbcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sisdFlag", &sisdFlag);
      R__insp.InspectMember(sisdFlag, "sisdFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sisdStat", &sisdStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_sisd", &nvolumes_sisd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_sisd", &nnodes_sisd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_sisd", &success_sisd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "richFlag", &richFlag);
      R__insp.InspectMember(richFlag, "richFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "richStat", &richStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_rich", &nvolumes_rich);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_rich", &nnodes_rich);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_rich", &success_rich);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mfldFlag", &mfldFlag);
      R__insp.InspectMember(mfldFlag, "mfldFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mfldStat", &mfldStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_mfld", &nvolumes_mfld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_mfld", &nnodes_mfld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_mfld", &success_mfld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgtdFlag", &fgtdFlag);
      R__insp.InspectMember(fgtdFlag, "fgtdFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgtdStat", &fgtdStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_fgtd", &nvolumes_fgtd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_fgtd", &nnodes_fgtd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_fgtd", &success_fgtd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idsmFlag", &idsmFlag);
      R__insp.InspectMember(idsmFlag, "idsmFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idsmStat", &idsmStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_idsm", &nvolumes_idsm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_idsm", &nnodes_idsm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_idsm", &success_idsm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixlFlag", &pixlFlag);
      R__insp.InspectMember(pixlFlag, "pixlFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixlStat", &pixlStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_pixl", &nvolumes_pixl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_pixl", &nnodes_pixl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_pixl", &success_pixl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istdFlag", &istdFlag);
      R__insp.InspectMember(istdFlag, "istdFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istdStat", &istdStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_istd", &nvolumes_istd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_istd", &nnodes_istd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_istd", &success_istd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxldFlag", &pxldFlag);
      R__insp.InspectMember(pxldFlag, "pxldFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxldStat", &pxldStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_pxld", &nvolumes_pxld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_pxld", &nnodes_pxld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_pxld", &success_pxld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsceFlag", &fsceFlag);
      R__insp.InspectMember(fsceFlag, "fsceFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsceStat", &fsceStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_fsce", &nvolumes_fsce);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_fsce", &nnodes_fsce);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_fsce", &success_fsce);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eiddFlag", &eiddFlag);
      R__insp.InspectMember(eiddFlag, "eiddFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eiddStat", &eiddStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_eidd", &nvolumes_eidd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_eidd", &nnodes_eidd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_eidd", &success_eidd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpcxFlag", &tpcxFlag);
      R__insp.InspectMember(tpcxFlag, "tpcxFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpcxStat", &tpcxStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_tpcx", &nvolumes_tpcx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_tpcx", &nnodes_tpcx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_tpcx", &success_tpcx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxstFlag", &pxstFlag);
      R__insp.InspectMember(pxstFlag, "pxstFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxstStat", &pxstStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_pxst", &nvolumes_pxst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_pxst", &nnodes_pxst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_pxst", &success_pxst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "psupFlag", &psupFlag);
      R__insp.InspectMember(psupFlag, "psupFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "psupStat", &psupStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_psup", &nvolumes_psup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_psup", &nnodes_psup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_psup", &success_psup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtubFlag", &dtubFlag);
      R__insp.InspectMember(dtubFlag, "dtubFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dtubStat", &dtubStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_dtub", &nvolumes_dtub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_dtub", &nnodes_dtub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_dtub", &success_dtub);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalFlag", &hcalFlag);
      R__insp.InspectMember(hcalFlag, "hcalFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalStat", &hcalStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_hcal", &nvolumes_hcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_hcal", &nnodes_hcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_hcal", &success_hcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftsdFlag", &ftsdFlag);
      R__insp.InspectMember(ftsdFlag, "ftsdFlag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftsdStat", &ftsdStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvolumes_ftsd", &nvolumes_ftsd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nnodes_ftsd", &nnodes_ftsd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "success_ftsd", &success_ftsd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalCuts", &ecalCuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calbCuts", &calbCuts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpcRefSys", &tpcRefSys);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "closeGeometry", &closeGeometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectors", (void*)&detectors);
      R__insp.InspectMember("vector<TString>", (void*)&detectors, "detectors.", false);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Geom_t(void *p) {
      return  p ? new(p) ::Geom_t : new ::Geom_t;
   }
   static void *newArray_Geom_t(Long_t nElements, void *p) {
      return p ? new(p) ::Geom_t[nElements] : new ::Geom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_Geom_t(void *p) {
      delete ((::Geom_t*)p);
   }
   static void deleteArray_Geom_t(void *p) {
      delete [] ((::Geom_t*)p);
   }
   static void destruct_Geom_t(void *p) {
      typedef ::Geom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Geom_t

//______________________________________________________________________________
void BbcmGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class BbcmGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BbcmGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(BbcmGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void BbcmGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BbcmGeom_t.
      TClass *R__cl = ::BbcmGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BbcmGeom_t(void *p) {
      return  p ? new(p) ::BbcmGeom_t : new ::BbcmGeom_t;
   }
   static void *newArray_BbcmGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::BbcmGeom_t[nElements] : new ::BbcmGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_BbcmGeom_t(void *p) {
      delete ((::BbcmGeom_t*)p);
   }
   static void deleteArray_BbcmGeom_t(void *p) {
      delete [] ((::BbcmGeom_t*)p);
   }
   static void destruct_BbcmGeom_t(void *p) {
      typedef ::BbcmGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BbcmGeom_t

//______________________________________________________________________________
void CalbGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalbGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CalbGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(CalbGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void CalbGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CalbGeom_t.
      TClass *R__cl = ::CalbGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emsedit", &emsedit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nmod", &nmod);
      R__insp.InspectMember(nmod, "nmod.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "shift", &shift);
      R__insp.InspectMember(shift, "shift.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emcuts", &emcuts);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CalbGeom_t(void *p) {
      return  p ? new(p) ::CalbGeom_t : new ::CalbGeom_t;
   }
   static void *newArray_CalbGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::CalbGeom_t[nElements] : new ::CalbGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalbGeom_t(void *p) {
      delete ((::CalbGeom_t*)p);
   }
   static void deleteArray_CalbGeom_t(void *p) {
      delete [] ((::CalbGeom_t*)p);
   }
   static void destruct_CalbGeom_t(void *p) {
      typedef ::CalbGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CalbGeom_t

//______________________________________________________________________________
void CaveGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class CaveGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CaveGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(CaveGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void CaveGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CaveGeom_t.
      TClass *R__cl = ::CaveGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CaveGeom_t(void *p) {
      return  p ? new(p) ::CaveGeom_t : new ::CaveGeom_t;
   }
   static void *newArray_CaveGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::CaveGeom_t[nElements] : new ::CaveGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_CaveGeom_t(void *p) {
      delete ((::CaveGeom_t*)p);
   }
   static void deleteArray_CaveGeom_t(void *p) {
      delete [] ((::CaveGeom_t*)p);
   }
   static void destruct_CaveGeom_t(void *p) {
      typedef ::CaveGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CaveGeom_t

//______________________________________________________________________________
void EcalGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class EcalGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EcalGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(EcalGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void EcalGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EcalGeom_t.
      TClass *R__cl = ::EcalGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "efill", &efill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "geometry", &geometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emcuts", &emcuts);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EcalGeom_t(void *p) {
      return  p ? new(p) ::EcalGeom_t : new ::EcalGeom_t;
   }
   static void *newArray_EcalGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::EcalGeom_t[nElements] : new ::EcalGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_EcalGeom_t(void *p) {
      delete ((::EcalGeom_t*)p);
   }
   static void deleteArray_EcalGeom_t(void *p) {
      delete [] ((::EcalGeom_t*)p);
   }
   static void destruct_EcalGeom_t(void *p) {
      typedef ::EcalGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EcalGeom_t

//______________________________________________________________________________
void FpdmGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class FpdmGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FpdmGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(FpdmGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void FpdmGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FpdmGeom_t.
      TClass *R__cl = ::FpdmGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position", &position);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FpdmGeom_t(void *p) {
      return  p ? new(p) ::FpdmGeom_t : new ::FpdmGeom_t;
   }
   static void *newArray_FpdmGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::FpdmGeom_t[nElements] : new ::FpdmGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_FpdmGeom_t(void *p) {
      delete ((::FpdmGeom_t*)p);
   }
   static void deleteArray_FpdmGeom_t(void *p) {
      delete [] ((::FpdmGeom_t*)p);
   }
   static void destruct_FpdmGeom_t(void *p) {
      typedef ::FpdmGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FpdmGeom_t

//______________________________________________________________________________
void FsceGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class FsceGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FsceGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(FsceGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void FsceGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FsceGeom_t.
      TClass *R__cl = ::FsceGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FsceGeom_t(void *p) {
      return  p ? new(p) ::FsceGeom_t : new ::FsceGeom_t;
   }
   static void *newArray_FsceGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::FsceGeom_t[nElements] : new ::FsceGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_FsceGeom_t(void *p) {
      delete ((::FsceGeom_t*)p);
   }
   static void deleteArray_FsceGeom_t(void *p) {
      delete [] ((::FsceGeom_t*)p);
   }
   static void destruct_FsceGeom_t(void *p) {
      typedef ::FsceGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FsceGeom_t

//______________________________________________________________________________
void HcalGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class HcalGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HcalGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(HcalGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void HcalGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HcalGeom_t.
      TClass *R__cl = ::HcalGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HcalGeom_t(void *p) {
      return  p ? new(p) ::HcalGeom_t : new ::HcalGeom_t;
   }
   static void *newArray_HcalGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::HcalGeom_t[nElements] : new ::HcalGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_HcalGeom_t(void *p) {
      delete ((::HcalGeom_t*)p);
   }
   static void deleteArray_HcalGeom_t(void *p) {
      delete [] ((::HcalGeom_t*)p);
   }
   static void destruct_HcalGeom_t(void *p) {
      typedef ::HcalGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::HcalGeom_t

//______________________________________________________________________________
void EiddGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class EiddGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EiddGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(EiddGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void EiddGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EiddGeom_t.
      TClass *R__cl = ::EiddGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EiddGeom_t(void *p) {
      return  p ? new(p) ::EiddGeom_t : new ::EiddGeom_t;
   }
   static void *newArray_EiddGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::EiddGeom_t[nElements] : new ::EiddGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_EiddGeom_t(void *p) {
      delete ((::EiddGeom_t*)p);
   }
   static void deleteArray_EiddGeom_t(void *p) {
      delete [] ((::EiddGeom_t*)p);
   }
   static void destruct_EiddGeom_t(void *p) {
      typedef ::EiddGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EiddGeom_t

//______________________________________________________________________________
void FtpcGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class FtpcGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FtpcGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(FtpcGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void FtpcGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FtpcGeom_t.
      TClass *R__cl = ::FtpcGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "supportModule", &supportModule);
      R__insp.InspectMember(supportModule, "supportModule.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "supo", &supo);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FtpcGeom_t(void *p) {
      return  p ? new(p) ::FtpcGeom_t : new ::FtpcGeom_t;
   }
   static void *newArray_FtpcGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::FtpcGeom_t[nElements] : new ::FtpcGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_FtpcGeom_t(void *p) {
      delete ((::FtpcGeom_t*)p);
   }
   static void deleteArray_FtpcGeom_t(void *p) {
      delete [] ((::FtpcGeom_t*)p);
   }
   static void destruct_FtpcGeom_t(void *p) {
      typedef ::FtpcGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FtpcGeom_t

//______________________________________________________________________________
void FtsdGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class FtsdGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FtsdGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(FtsdGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void FtsdGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FtsdGeom_t.
      TClass *R__cl = ::FtsdGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FtsdGeom_t(void *p) {
      return  p ? new(p) ::FtsdGeom_t : new ::FtsdGeom_t;
   }
   static void *newArray_FtsdGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::FtsdGeom_t[nElements] : new ::FtsdGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_FtsdGeom_t(void *p) {
      delete ((::FtsdGeom_t*)p);
   }
   static void deleteArray_FtsdGeom_t(void *p) {
      delete [] ((::FtsdGeom_t*)p);
   }
   static void destruct_FtsdGeom_t(void *p) {
      typedef ::FtsdGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FtsdGeom_t

//______________________________________________________________________________
void MagpGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class MagpGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MagpGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(MagpGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void MagpGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MagpGeom_t.
      TClass *R__cl = ::MagpGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MagpGeom_t(void *p) {
      return  p ? new(p) ::MagpGeom_t : new ::MagpGeom_t;
   }
   static void *newArray_MagpGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::MagpGeom_t[nElements] : new ::MagpGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_MagpGeom_t(void *p) {
      delete ((::MagpGeom_t*)p);
   }
   static void deleteArray_MagpGeom_t(void *p) {
      delete [] ((::MagpGeom_t*)p);
   }
   static void destruct_MagpGeom_t(void *p) {
      typedef ::MagpGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MagpGeom_t

//______________________________________________________________________________
void MfldGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class MfldGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MfldGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(MfldGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void MfldGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MfldGeom_t.
      TClass *R__cl = ::MfldGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "field", &field);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MfldGeom_t(void *p) {
      return  p ? new(p) ::MfldGeom_t : new ::MfldGeom_t;
   }
   static void *newArray_MfldGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::MfldGeom_t[nElements] : new ::MfldGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_MfldGeom_t(void *p) {
      delete ((::MfldGeom_t*)p);
   }
   static void deleteArray_MfldGeom_t(void *p) {
      delete [] ((::MfldGeom_t*)p);
   }
   static void destruct_MfldGeom_t(void *p) {
      typedef ::MfldGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MfldGeom_t

//______________________________________________________________________________
void MutdGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class MutdGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MutdGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(MutdGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void MutdGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MutdGeom_t.
      TClass *R__cl = ::MutdGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MutdGeom_t(void *p) {
      return  p ? new(p) ::MutdGeom_t : new ::MutdGeom_t;
   }
   static void *newArray_MutdGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::MutdGeom_t[nElements] : new ::MutdGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_MutdGeom_t(void *p) {
      delete ((::MutdGeom_t*)p);
   }
   static void deleteArray_MutdGeom_t(void *p) {
      delete [] ((::MutdGeom_t*)p);
   }
   static void destruct_MutdGeom_t(void *p) {
      typedef ::MutdGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MutdGeom_t

//______________________________________________________________________________
void PhmdGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class PhmdGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PhmdGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(PhmdGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void PhmdGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PhmdGeom_t.
      TClass *R__cl = ::PhmdGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PhmdGeom_t(void *p) {
      return  p ? new(p) ::PhmdGeom_t : new ::PhmdGeom_t;
   }
   static void *newArray_PhmdGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::PhmdGeom_t[nElements] : new ::PhmdGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_PhmdGeom_t(void *p) {
      delete ((::PhmdGeom_t*)p);
   }
   static void deleteArray_PhmdGeom_t(void *p) {
      delete [] ((::PhmdGeom_t*)p);
   }
   static void destruct_PhmdGeom_t(void *p) {
      typedef ::PhmdGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PhmdGeom_t

//______________________________________________________________________________
void PipeGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class PipeGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PipeGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(PipeGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void PipeGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PipeGeom_t.
      TClass *R__cl = ::PipeGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag", &flag);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PipeGeom_t(void *p) {
      return  p ? new(p) ::PipeGeom_t : new ::PipeGeom_t;
   }
   static void *newArray_PipeGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::PipeGeom_t[nElements] : new ::PipeGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_PipeGeom_t(void *p) {
      delete ((::PipeGeom_t*)p);
   }
   static void deleteArray_PipeGeom_t(void *p) {
      delete [] ((::PipeGeom_t*)p);
   }
   static void destruct_PipeGeom_t(void *p) {
      typedef ::PipeGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PipeGeom_t

//______________________________________________________________________________
void PixlGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class PixlGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PixlGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(PixlGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void PixlGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PixlGeom_t.
      TClass *R__cl = ::PixlGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "location", &location);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ladrconfig", &ladrconfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "secversion", &secversion);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PixlGeom_t(void *p) {
      return  p ? new(p) ::PixlGeom_t : new ::PixlGeom_t;
   }
   static void *newArray_PixlGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::PixlGeom_t[nElements] : new ::PixlGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_PixlGeom_t(void *p) {
      delete ((::PixlGeom_t*)p);
   }
   static void deleteArray_PixlGeom_t(void *p) {
      delete [] ((::PixlGeom_t*)p);
   }
   static void destruct_PixlGeom_t(void *p) {
      typedef ::PixlGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PixlGeom_t

//______________________________________________________________________________
void DtubGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class DtubGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DtubGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(DtubGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void DtubGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DtubGeom_t.
      TClass *R__cl = ::DtubGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "location", &location);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_DtubGeom_t(void *p) {
      return  p ? new(p) ::DtubGeom_t : new ::DtubGeom_t;
   }
   static void *newArray_DtubGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::DtubGeom_t[nElements] : new ::DtubGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_DtubGeom_t(void *p) {
      delete ((::DtubGeom_t*)p);
   }
   static void deleteArray_DtubGeom_t(void *p) {
      delete [] ((::DtubGeom_t*)p);
   }
   static void destruct_DtubGeom_t(void *p) {
      typedef ::DtubGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DtubGeom_t

//______________________________________________________________________________
void SconGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class SconGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SconGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(SconGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void SconGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SconGeom_t.
      TClass *R__cl = ::SconGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SconGeom_t(void *p) {
      return  p ? new(p) ::SconGeom_t : new ::SconGeom_t;
   }
   static void *newArray_SconGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::SconGeom_t[nElements] : new ::SconGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_SconGeom_t(void *p) {
      delete ((::SconGeom_t*)p);
   }
   static void deleteArray_SconGeom_t(void *p) {
      delete [] ((::SconGeom_t*)p);
   }
   static void destruct_SconGeom_t(void *p) {
      typedef ::SconGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SconGeom_t

//______________________________________________________________________________
void SisdGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class SisdGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SisdGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(SisdGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void SisdGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SisdGeom_t.
      TClass *R__cl = ::SisdGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SisdGeom_t(void *p) {
      return  p ? new(p) ::SisdGeom_t : new ::SisdGeom_t;
   }
   static void *newArray_SisdGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::SisdGeom_t[nElements] : new ::SisdGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_SisdGeom_t(void *p) {
      delete ((::SisdGeom_t*)p);
   }
   static void deleteArray_SisdGeom_t(void *p) {
      delete [] ((::SisdGeom_t*)p);
   }
   static void destruct_SisdGeom_t(void *p) {
      typedef ::SisdGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SisdGeom_t

//______________________________________________________________________________
void SvttGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class SvttGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SvttGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(SvttGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void SvttGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SvttGeom_t.
      TClass *R__cl = ::SvttGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coneconfig", &coneconfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "water", &water);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nwafer", &nwafer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlayer", &nlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n1stlayer", &n1stlayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "waferdim", &waferdim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "svshconfig", &svshconfig);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SvttGeom_t(void *p) {
      return  p ? new(p) ::SvttGeom_t : new ::SvttGeom_t;
   }
   static void *newArray_SvttGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::SvttGeom_t[nElements] : new ::SvttGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_SvttGeom_t(void *p) {
      delete ((::SvttGeom_t*)p);
   }
   static void deleteArray_SvttGeom_t(void *p) {
      delete [] ((::SvttGeom_t*)p);
   }
   static void destruct_SvttGeom_t(void *p) {
      typedef ::SvttGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SvttGeom_t

//______________________________________________________________________________
void BtofGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class BtofGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BtofGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(BtofGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void BtofGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BtofGeom_t.
      TClass *R__cl = ::BtofGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itof", &itof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofX0", &tofX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofZ0", &tofZ0);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BtofGeom_t(void *p) {
      return  p ? new(p) ::BtofGeom_t : new ::BtofGeom_t;
   }
   static void *newArray_BtofGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::BtofGeom_t[nElements] : new ::BtofGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_BtofGeom_t(void *p) {
      delete ((::BtofGeom_t*)p);
   }
   static void deleteArray_BtofGeom_t(void *p) {
      delete [] ((::BtofGeom_t*)p);
   }
   static void destruct_BtofGeom_t(void *p) {
      typedef ::BtofGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BtofGeom_t

//______________________________________________________________________________
void TpceGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class TpceGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TpceGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(TpceGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void TpceGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TpceGeom_t.
      TClass *R__cl = ::TpceGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dens", &dens);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rmax", &rmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subversion", &subversion);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TpceGeom_t(void *p) {
      return  p ? new(p) ::TpceGeom_t : new ::TpceGeom_t;
   }
   static void *newArray_TpceGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::TpceGeom_t[nElements] : new ::TpceGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TpceGeom_t(void *p) {
      delete ((::TpceGeom_t*)p);
   }
   static void deleteArray_TpceGeom_t(void *p) {
      delete [] ((::TpceGeom_t*)p);
   }
   static void destruct_TpceGeom_t(void *p) {
      typedef ::TpceGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TpceGeom_t

//______________________________________________________________________________
void TpcxGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class TpcxGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TpcxGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(TpcxGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void TpcxGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TpcxGeom_t.
      TClass *R__cl = ::TpcxGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "padconfig", &padconfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dens", &dens);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rmax", &rmax);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TpcxGeom_t(void *p) {
      return  p ? new(p) ::TpcxGeom_t : new ::TpcxGeom_t;
   }
   static void *newArray_TpcxGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::TpcxGeom_t[nElements] : new ::TpcxGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TpcxGeom_t(void *p) {
      delete ((::TpcxGeom_t*)p);
   }
   static void deleteArray_TpcxGeom_t(void *p) {
      delete [] ((::TpcxGeom_t*)p);
   }
   static void destruct_TpcxGeom_t(void *p) {
      typedef ::TpcxGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TpcxGeom_t

//______________________________________________________________________________
void VpddGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class VpddGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(VpddGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(VpddGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void VpddGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class VpddGeom_t.
      TClass *R__cl = ::VpddGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_VpddGeom_t(void *p) {
      return  p ? new(p) ::VpddGeom_t : new ::VpddGeom_t;
   }
   static void *newArray_VpddGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::VpddGeom_t[nElements] : new ::VpddGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_VpddGeom_t(void *p) {
      delete ((::VpddGeom_t*)p);
   }
   static void deleteArray_VpddGeom_t(void *p) {
      delete [] ((::VpddGeom_t*)p);
   }
   static void destruct_VpddGeom_t(void *p) {
      typedef ::VpddGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::VpddGeom_t

//______________________________________________________________________________
void UpstGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class UpstGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(UpstGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(UpstGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void UpstGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class UpstGeom_t.
      TClass *R__cl = ::UpstGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_UpstGeom_t(void *p) {
      return  p ? new(p) ::UpstGeom_t : new ::UpstGeom_t;
   }
   static void *newArray_UpstGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::UpstGeom_t[nElements] : new ::UpstGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_UpstGeom_t(void *p) {
      delete ((::UpstGeom_t*)p);
   }
   static void deleteArray_UpstGeom_t(void *p) {
      delete [] ((::UpstGeom_t*)p);
   }
   static void destruct_UpstGeom_t(void *p) {
      typedef ::UpstGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::UpstGeom_t

//______________________________________________________________________________
void ZcalGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class ZcalGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ZcalGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(ZcalGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void ZcalGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ZcalGeom_t.
      TClass *R__cl = ::ZcalGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ZcalGeom_t(void *p) {
      return  p ? new(p) ::ZcalGeom_t : new ::ZcalGeom_t;
   }
   static void *newArray_ZcalGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::ZcalGeom_t[nElements] : new ::ZcalGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_ZcalGeom_t(void *p) {
      delete ((::ZcalGeom_t*)p);
   }
   static void deleteArray_ZcalGeom_t(void *p) {
      delete [] ((::ZcalGeom_t*)p);
   }
   static void destruct_ZcalGeom_t(void *p) {
      typedef ::ZcalGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ZcalGeom_t

//______________________________________________________________________________
void FtroGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class FtroGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FtroGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(FtroGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void FtroGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FtroGeom_t.
      TClass *R__cl = ::FtroGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FtroGeom_t(void *p) {
      return  p ? new(p) ::FtroGeom_t : new ::FtroGeom_t;
   }
   static void *newArray_FtroGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::FtroGeom_t[nElements] : new ::FtroGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_FtroGeom_t(void *p) {
      delete ((::FtroGeom_t*)p);
   }
   static void deleteArray_FtroGeom_t(void *p) {
      delete [] ((::FtroGeom_t*)p);
   }
   static void destruct_FtroGeom_t(void *p) {
      typedef ::FtroGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FtroGeom_t

//______________________________________________________________________________
void RichGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class RichGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RichGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(RichGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void RichGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RichGeom_t.
      TClass *R__cl = ::RichGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RichGeom_t(void *p) {
      return  p ? new(p) ::RichGeom_t : new ::RichGeom_t;
   }
   static void *newArray_RichGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::RichGeom_t[nElements] : new ::RichGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_RichGeom_t(void *p) {
      delete ((::RichGeom_t*)p);
   }
   static void deleteArray_RichGeom_t(void *p) {
      delete [] ((::RichGeom_t*)p);
   }
   static void destruct_RichGeom_t(void *p) {
      typedef ::RichGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RichGeom_t

//______________________________________________________________________________
void FgtdGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class FgtdGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FgtdGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(FgtdGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void FgtdGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FgtdGeom_t.
      TClass *R__cl = ::FgtdGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FgtdGeom_t(void *p) {
      return  p ? new(p) ::FgtdGeom_t : new ::FgtdGeom_t;
   }
   static void *newArray_FgtdGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::FgtdGeom_t[nElements] : new ::FgtdGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_FgtdGeom_t(void *p) {
      delete ((::FgtdGeom_t*)p);
   }
   static void deleteArray_FgtdGeom_t(void *p) {
      delete [] ((::FgtdGeom_t*)p);
   }
   static void destruct_FgtdGeom_t(void *p) {
      typedef ::FgtdGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FgtdGeom_t

//______________________________________________________________________________
void IdsmGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class IdsmGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(IdsmGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(IdsmGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void IdsmGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class IdsmGeom_t.
      TClass *R__cl = ::IdsmGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_IdsmGeom_t(void *p) {
      return  p ? new(p) ::IdsmGeom_t : new ::IdsmGeom_t;
   }
   static void *newArray_IdsmGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::IdsmGeom_t[nElements] : new ::IdsmGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_IdsmGeom_t(void *p) {
      delete ((::IdsmGeom_t*)p);
   }
   static void deleteArray_IdsmGeom_t(void *p) {
      delete [] ((::IdsmGeom_t*)p);
   }
   static void destruct_IdsmGeom_t(void *p) {
      typedef ::IdsmGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::IdsmGeom_t

//______________________________________________________________________________
void IstdGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class IstdGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(IstdGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(IstdGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void IstdGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class IstdGeom_t.
      TClass *R__cl = ::IstdGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_IstdGeom_t(void *p) {
      return  p ? new(p) ::IstdGeom_t : new ::IstdGeom_t;
   }
   static void *newArray_IstdGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::IstdGeom_t[nElements] : new ::IstdGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_IstdGeom_t(void *p) {
      delete ((::IstdGeom_t*)p);
   }
   static void deleteArray_IstdGeom_t(void *p) {
      delete [] ((::IstdGeom_t*)p);
   }
   static void destruct_IstdGeom_t(void *p) {
      typedef ::IstdGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::IstdGeom_t

//______________________________________________________________________________
void PxstGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class PxstGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PxstGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(PxstGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void PxstGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PxstGeom_t.
      TClass *R__cl = ::PxstGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PxstGeom_t(void *p) {
      return  p ? new(p) ::PxstGeom_t : new ::PxstGeom_t;
   }
   static void *newArray_PxstGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::PxstGeom_t[nElements] : new ::PxstGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_PxstGeom_t(void *p) {
      delete ((::PxstGeom_t*)p);
   }
   static void deleteArray_PxstGeom_t(void *p) {
      delete [] ((::PxstGeom_t*)p);
   }
   static void destruct_PxstGeom_t(void *p) {
      typedef ::PxstGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PxstGeom_t

//______________________________________________________________________________
void PsupGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class PsupGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PsupGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(PsupGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void PsupGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PsupGeom_t.
      TClass *R__cl = ::PsupGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PsupGeom_t(void *p) {
      return  p ? new(p) ::PsupGeom_t : new ::PsupGeom_t;
   }
   static void *newArray_PsupGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::PsupGeom_t[nElements] : new ::PsupGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_PsupGeom_t(void *p) {
      delete ((::PsupGeom_t*)p);
   }
   static void deleteArray_PsupGeom_t(void *p) {
      delete [] ((::PsupGeom_t*)p);
   }
   static void destruct_PsupGeom_t(void *p) {
      typedef ::PsupGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PsupGeom_t

//______________________________________________________________________________
void PxldGeom_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class PxldGeom_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PxldGeom_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(PxldGeom_t::Class(),this);
   }
}

//______________________________________________________________________________
void PxldGeom_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PxldGeom_t.
      TClass *R__cl = ::PxldGeom_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "select", &select);
      R__insp.InspectMember(select, "select.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.InspectMember(module, "module.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      AgStructure::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PxldGeom_t(void *p) {
      return  p ? new(p) ::PxldGeom_t : new ::PxldGeom_t;
   }
   static void *newArray_PxldGeom_t(Long_t nElements, void *p) {
      return p ? new(p) ::PxldGeom_t[nElements] : new ::PxldGeom_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_PxldGeom_t(void *p) {
      delete ((::PxldGeom_t*)p);
   }
   static void deleteArray_PxldGeom_t(void *p) {
      delete [] ((::PxldGeom_t*)p);
   }
   static void destruct_PxldGeom_t(void *p) {
      typedef ::PxldGeom_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PxldGeom_t

//______________________________________________________________________________
void Geometry::Streamer(TBuffer &R__b)
{
   // Stream an object of class Geometry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Geometry::Class(),this);
   } else {
      R__b.WriteClassBuffer(Geometry::Class(),this);
   }
}

//______________________________________________________________________________
void Geometry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Geometry.
      TClass *R__cl = ::Geometry::IsA();
      if (R__cl || R__insp.IsA()) { }
      AgModule::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Geometry(void *p) {
      return  p ? new(p) ::Geometry : new ::Geometry;
   }
   static void *newArray_Geometry(Long_t nElements, void *p) {
      return p ? new(p) ::Geometry[nElements] : new ::Geometry[nElements];
   }
   // Wrapper around operator delete
   static void delete_Geometry(void *p) {
      delete ((::Geometry*)p);
   }
   static void deleteArray_Geometry(void *p) {
      delete [] ((::Geometry*)p);
   }
   static void destruct_Geometry(void *p) {
      typedef ::Geometry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Geometry

namespace ROOTDict {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "prec_stl/vector", 49,
                  typeid(vector<TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TString>

/********************************************************
* .sl64_gcc482/obj/StarVMC/Geometry/Geometry_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGeometry_Cint();

extern "C" void G__set_cpp_environmentGeometry_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Geometry.h");
  G__cpp_reset_tagtableGeometry_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevGeometry_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Geom_t */
static int G__Geometry_Cint_682_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Geom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Geom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Geom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Geom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Geom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Geom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Geom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Geom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Geom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_682_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Geom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Geom_t[n];
     } else {
       p = new((void*) gvp) Geom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Geom_t;
     } else {
       p = new((void*) gvp) Geom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Geom_t G__TGeom_t;
static int G__Geometry_Cint_682_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Geom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Geom_t*) (soff+(sizeof(Geom_t)*i)))->~G__TGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Geom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Geom_t*) (soff))->~G__TGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BbcmGeom_t */
static int G__Geometry_Cint_683_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BbcmGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BbcmGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BbcmGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BbcmGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BbcmGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BbcmGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BbcmGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BbcmGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BbcmGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_683_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BbcmGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BbcmGeom_t[n];
     } else {
       p = new((void*) gvp) BbcmGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BbcmGeom_t;
     } else {
       p = new((void*) gvp) BbcmGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BbcmGeom_t G__TBbcmGeom_t;
static int G__Geometry_Cint_683_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BbcmGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BbcmGeom_t*) (soff+(sizeof(BbcmGeom_t)*i)))->~G__TBbcmGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BbcmGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BbcmGeom_t*) (soff))->~G__TBbcmGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalbGeom_t */
static int G__Geometry_Cint_684_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalbGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalbGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalbGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalbGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalbGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalbGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalbGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalbGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalbGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_684_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalbGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalbGeom_t[n];
     } else {
       p = new((void*) gvp) CalbGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalbGeom_t;
     } else {
       p = new((void*) gvp) CalbGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalbGeom_t G__TCalbGeom_t;
static int G__Geometry_Cint_684_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CalbGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalbGeom_t*) (soff+(sizeof(CalbGeom_t)*i)))->~G__TCalbGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CalbGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CalbGeom_t*) (soff))->~G__TCalbGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CaveGeom_t */
static int G__Geometry_Cint_685_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CaveGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CaveGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CaveGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CaveGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CaveGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CaveGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CaveGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CaveGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CaveGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_685_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CaveGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaveGeom_t[n];
     } else {
       p = new((void*) gvp) CaveGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CaveGeom_t;
     } else {
       p = new((void*) gvp) CaveGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CaveGeom_t G__TCaveGeom_t;
static int G__Geometry_Cint_685_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CaveGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CaveGeom_t*) (soff+(sizeof(CaveGeom_t)*i)))->~G__TCaveGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CaveGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CaveGeom_t*) (soff))->~G__TCaveGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EcalGeom_t */
static int G__Geometry_Cint_686_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EcalGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EcalGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EcalGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EcalGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EcalGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EcalGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EcalGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EcalGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EcalGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_686_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EcalGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EcalGeom_t[n];
     } else {
       p = new((void*) gvp) EcalGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EcalGeom_t;
     } else {
       p = new((void*) gvp) EcalGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EcalGeom_t G__TEcalGeom_t;
static int G__Geometry_Cint_686_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EcalGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EcalGeom_t*) (soff+(sizeof(EcalGeom_t)*i)))->~G__TEcalGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EcalGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EcalGeom_t*) (soff))->~G__TEcalGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FpdmGeom_t */
static int G__Geometry_Cint_687_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FpdmGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FpdmGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FpdmGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FpdmGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FpdmGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FpdmGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FpdmGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FpdmGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FpdmGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_687_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FpdmGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FpdmGeom_t[n];
     } else {
       p = new((void*) gvp) FpdmGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FpdmGeom_t;
     } else {
       p = new((void*) gvp) FpdmGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FpdmGeom_t G__TFpdmGeom_t;
static int G__Geometry_Cint_687_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FpdmGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FpdmGeom_t*) (soff+(sizeof(FpdmGeom_t)*i)))->~G__TFpdmGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FpdmGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FpdmGeom_t*) (soff))->~G__TFpdmGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FsceGeom_t */
static int G__Geometry_Cint_688_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FsceGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FsceGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FsceGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FsceGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FsceGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FsceGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FsceGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FsceGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FsceGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_688_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FsceGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FsceGeom_t[n];
     } else {
       p = new((void*) gvp) FsceGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FsceGeom_t;
     } else {
       p = new((void*) gvp) FsceGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FsceGeom_t G__TFsceGeom_t;
static int G__Geometry_Cint_688_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FsceGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FsceGeom_t*) (soff+(sizeof(FsceGeom_t)*i)))->~G__TFsceGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FsceGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FsceGeom_t*) (soff))->~G__TFsceGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HcalGeom_t */
static int G__Geometry_Cint_689_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HcalGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HcalGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HcalGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HcalGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HcalGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HcalGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HcalGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_689_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HcalGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalGeom_t[n];
     } else {
       p = new((void*) gvp) HcalGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HcalGeom_t;
     } else {
       p = new((void*) gvp) HcalGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HcalGeom_t G__THcalGeom_t;
static int G__Geometry_Cint_689_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HcalGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HcalGeom_t*) (soff+(sizeof(HcalGeom_t)*i)))->~G__THcalGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HcalGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HcalGeom_t*) (soff))->~G__THcalGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EiddGeom_t */
static int G__Geometry_Cint_690_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EiddGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EiddGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EiddGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EiddGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EiddGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EiddGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EiddGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EiddGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EiddGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_690_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EiddGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EiddGeom_t[n];
     } else {
       p = new((void*) gvp) EiddGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EiddGeom_t;
     } else {
       p = new((void*) gvp) EiddGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EiddGeom_t G__TEiddGeom_t;
static int G__Geometry_Cint_690_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EiddGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EiddGeom_t*) (soff+(sizeof(EiddGeom_t)*i)))->~G__TEiddGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EiddGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EiddGeom_t*) (soff))->~G__TEiddGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FtpcGeom_t */
static int G__Geometry_Cint_691_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FtpcGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtpcGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FtpcGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FtpcGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FtpcGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtpcGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FtpcGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtpcGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FtpcGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_691_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FtpcGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FtpcGeom_t[n];
     } else {
       p = new((void*) gvp) FtpcGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FtpcGeom_t;
     } else {
       p = new((void*) gvp) FtpcGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FtpcGeom_t G__TFtpcGeom_t;
static int G__Geometry_Cint_691_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FtpcGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FtpcGeom_t*) (soff+(sizeof(FtpcGeom_t)*i)))->~G__TFtpcGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FtpcGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FtpcGeom_t*) (soff))->~G__TFtpcGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FtsdGeom_t */
static int G__Geometry_Cint_692_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FtsdGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtsdGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FtsdGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FtsdGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FtsdGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtsdGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FtsdGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtsdGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FtsdGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_692_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FtsdGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FtsdGeom_t[n];
     } else {
       p = new((void*) gvp) FtsdGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FtsdGeom_t;
     } else {
       p = new((void*) gvp) FtsdGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FtsdGeom_t G__TFtsdGeom_t;
static int G__Geometry_Cint_692_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FtsdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FtsdGeom_t*) (soff+(sizeof(FtsdGeom_t)*i)))->~G__TFtsdGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FtsdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FtsdGeom_t*) (soff))->~G__TFtsdGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MagpGeom_t */
static int G__Geometry_Cint_693_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MagpGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MagpGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MagpGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MagpGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MagpGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MagpGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MagpGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MagpGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MagpGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_693_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MagpGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MagpGeom_t[n];
     } else {
       p = new((void*) gvp) MagpGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MagpGeom_t;
     } else {
       p = new((void*) gvp) MagpGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MagpGeom_t G__TMagpGeom_t;
static int G__Geometry_Cint_693_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MagpGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MagpGeom_t*) (soff+(sizeof(MagpGeom_t)*i)))->~G__TMagpGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MagpGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MagpGeom_t*) (soff))->~G__TMagpGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MfldGeom_t */
static int G__Geometry_Cint_694_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MfldGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MfldGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MfldGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MfldGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MfldGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MfldGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MfldGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MfldGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MfldGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_694_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MfldGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MfldGeom_t[n];
     } else {
       p = new((void*) gvp) MfldGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MfldGeom_t;
     } else {
       p = new((void*) gvp) MfldGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MfldGeom_t G__TMfldGeom_t;
static int G__Geometry_Cint_694_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MfldGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MfldGeom_t*) (soff+(sizeof(MfldGeom_t)*i)))->~G__TMfldGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MfldGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MfldGeom_t*) (soff))->~G__TMfldGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MutdGeom_t */
static int G__Geometry_Cint_695_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MutdGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MutdGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MutdGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MutdGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MutdGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MutdGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MutdGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MutdGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MutdGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_695_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MutdGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MutdGeom_t[n];
     } else {
       p = new((void*) gvp) MutdGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MutdGeom_t;
     } else {
       p = new((void*) gvp) MutdGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MutdGeom_t G__TMutdGeom_t;
static int G__Geometry_Cint_695_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MutdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MutdGeom_t*) (soff+(sizeof(MutdGeom_t)*i)))->~G__TMutdGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MutdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MutdGeom_t*) (soff))->~G__TMutdGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PhmdGeom_t */
static int G__Geometry_Cint_696_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PhmdGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PhmdGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PhmdGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PhmdGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PhmdGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PhmdGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PhmdGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PhmdGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PhmdGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_696_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PhmdGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PhmdGeom_t[n];
     } else {
       p = new((void*) gvp) PhmdGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PhmdGeom_t;
     } else {
       p = new((void*) gvp) PhmdGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PhmdGeom_t G__TPhmdGeom_t;
static int G__Geometry_Cint_696_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PhmdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PhmdGeom_t*) (soff+(sizeof(PhmdGeom_t)*i)))->~G__TPhmdGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PhmdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PhmdGeom_t*) (soff))->~G__TPhmdGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PipeGeom_t */
static int G__Geometry_Cint_697_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PipeGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PipeGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PipeGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PipeGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PipeGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PipeGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PipeGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PipeGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PipeGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_697_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PipeGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PipeGeom_t[n];
     } else {
       p = new((void*) gvp) PipeGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PipeGeom_t;
     } else {
       p = new((void*) gvp) PipeGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PipeGeom_t G__TPipeGeom_t;
static int G__Geometry_Cint_697_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PipeGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PipeGeom_t*) (soff+(sizeof(PipeGeom_t)*i)))->~G__TPipeGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PipeGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PipeGeom_t*) (soff))->~G__TPipeGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PixlGeom_t */
static int G__Geometry_Cint_698_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PixlGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PixlGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PixlGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PixlGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PixlGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PixlGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PixlGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PixlGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PixlGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_698_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PixlGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PixlGeom_t[n];
     } else {
       p = new((void*) gvp) PixlGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PixlGeom_t;
     } else {
       p = new((void*) gvp) PixlGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PixlGeom_t G__TPixlGeom_t;
static int G__Geometry_Cint_698_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PixlGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PixlGeom_t*) (soff+(sizeof(PixlGeom_t)*i)))->~G__TPixlGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PixlGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PixlGeom_t*) (soff))->~G__TPixlGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DtubGeom_t */
static int G__Geometry_Cint_699_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DtubGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DtubGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DtubGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DtubGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DtubGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DtubGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DtubGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DtubGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DtubGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_699_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DtubGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DtubGeom_t[n];
     } else {
       p = new((void*) gvp) DtubGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DtubGeom_t;
     } else {
       p = new((void*) gvp) DtubGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DtubGeom_t G__TDtubGeom_t;
static int G__Geometry_Cint_699_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DtubGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DtubGeom_t*) (soff+(sizeof(DtubGeom_t)*i)))->~G__TDtubGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DtubGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DtubGeom_t*) (soff))->~G__TDtubGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SconGeom_t */
static int G__Geometry_Cint_700_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SconGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SconGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SconGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SconGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SconGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SconGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SconGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SconGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SconGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_700_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SconGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SconGeom_t[n];
     } else {
       p = new((void*) gvp) SconGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SconGeom_t;
     } else {
       p = new((void*) gvp) SconGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SconGeom_t G__TSconGeom_t;
static int G__Geometry_Cint_700_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SconGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SconGeom_t*) (soff+(sizeof(SconGeom_t)*i)))->~G__TSconGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SconGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SconGeom_t*) (soff))->~G__TSconGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SisdGeom_t */
static int G__Geometry_Cint_701_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SisdGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SisdGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SisdGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SisdGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SisdGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SisdGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SisdGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SisdGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SisdGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_701_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SisdGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SisdGeom_t[n];
     } else {
       p = new((void*) gvp) SisdGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SisdGeom_t;
     } else {
       p = new((void*) gvp) SisdGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SisdGeom_t G__TSisdGeom_t;
static int G__Geometry_Cint_701_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SisdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SisdGeom_t*) (soff+(sizeof(SisdGeom_t)*i)))->~G__TSisdGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SisdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SisdGeom_t*) (soff))->~G__TSisdGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SvttGeom_t */
static int G__Geometry_Cint_702_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SvttGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SvttGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SvttGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SvttGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SvttGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SvttGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SvttGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SvttGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SvttGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_702_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SvttGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SvttGeom_t[n];
     } else {
       p = new((void*) gvp) SvttGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SvttGeom_t;
     } else {
       p = new((void*) gvp) SvttGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SvttGeom_t G__TSvttGeom_t;
static int G__Geometry_Cint_702_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SvttGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SvttGeom_t*) (soff+(sizeof(SvttGeom_t)*i)))->~G__TSvttGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SvttGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SvttGeom_t*) (soff))->~G__TSvttGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BtofGeom_t */
static int G__Geometry_Cint_703_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BtofGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BtofGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BtofGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BtofGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BtofGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BtofGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BtofGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BtofGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BtofGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_703_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BtofGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BtofGeom_t[n];
     } else {
       p = new((void*) gvp) BtofGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BtofGeom_t;
     } else {
       p = new((void*) gvp) BtofGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BtofGeom_t G__TBtofGeom_t;
static int G__Geometry_Cint_703_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BtofGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BtofGeom_t*) (soff+(sizeof(BtofGeom_t)*i)))->~G__TBtofGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BtofGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BtofGeom_t*) (soff))->~G__TBtofGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TpceGeom_t */
static int G__Geometry_Cint_704_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TpceGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TpceGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TpceGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TpceGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TpceGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TpceGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TpceGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TpceGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TpceGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_704_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TpceGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TpceGeom_t[n];
     } else {
       p = new((void*) gvp) TpceGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TpceGeom_t;
     } else {
       p = new((void*) gvp) TpceGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TpceGeom_t G__TTpceGeom_t;
static int G__Geometry_Cint_704_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TpceGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TpceGeom_t*) (soff+(sizeof(TpceGeom_t)*i)))->~G__TTpceGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TpceGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TpceGeom_t*) (soff))->~G__TTpceGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TpcxGeom_t */
static int G__Geometry_Cint_705_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TpcxGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TpcxGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TpcxGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TpcxGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TpcxGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TpcxGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TpcxGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TpcxGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TpcxGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_705_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TpcxGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TpcxGeom_t[n];
     } else {
       p = new((void*) gvp) TpcxGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TpcxGeom_t;
     } else {
       p = new((void*) gvp) TpcxGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TpcxGeom_t G__TTpcxGeom_t;
static int G__Geometry_Cint_705_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TpcxGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TpcxGeom_t*) (soff+(sizeof(TpcxGeom_t)*i)))->~G__TTpcxGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TpcxGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TpcxGeom_t*) (soff))->~G__TTpcxGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* VpddGeom_t */
static int G__Geometry_Cint_706_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) VpddGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VpddGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) VpddGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      VpddGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VpddGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VpddGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VpddGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VpddGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VpddGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VpddGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VpddGeom_t[n];
     } else {
       p = new((void*) gvp) VpddGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VpddGeom_t;
     } else {
       p = new((void*) gvp) VpddGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef VpddGeom_t G__TVpddGeom_t;
static int G__Geometry_Cint_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (VpddGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((VpddGeom_t*) (soff+(sizeof(VpddGeom_t)*i)))->~G__TVpddGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (VpddGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((VpddGeom_t*) (soff))->~G__TVpddGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UpstGeom_t */
static int G__Geometry_Cint_707_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) UpstGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UpstGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) UpstGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      UpstGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UpstGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UpstGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UpstGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UpstGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UpstGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_707_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UpstGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UpstGeom_t[n];
     } else {
       p = new((void*) gvp) UpstGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UpstGeom_t;
     } else {
       p = new((void*) gvp) UpstGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UpstGeom_t G__TUpstGeom_t;
static int G__Geometry_Cint_707_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (UpstGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((UpstGeom_t*) (soff+(sizeof(UpstGeom_t)*i)))->~G__TUpstGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (UpstGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((UpstGeom_t*) (soff))->~G__TUpstGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ZcalGeom_t */
static int G__Geometry_Cint_708_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ZcalGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ZcalGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ZcalGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ZcalGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZcalGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ZcalGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ZcalGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ZcalGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ZcalGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_708_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ZcalGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ZcalGeom_t[n];
     } else {
       p = new((void*) gvp) ZcalGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ZcalGeom_t;
     } else {
       p = new((void*) gvp) ZcalGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ZcalGeom_t G__TZcalGeom_t;
static int G__Geometry_Cint_708_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ZcalGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ZcalGeom_t*) (soff+(sizeof(ZcalGeom_t)*i)))->~G__TZcalGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ZcalGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ZcalGeom_t*) (soff))->~G__TZcalGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FtroGeom_t */
static int G__Geometry_Cint_709_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FtroGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtroGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FtroGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FtroGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FtroGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtroGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FtroGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FtroGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FtroGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_709_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FtroGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FtroGeom_t[n];
     } else {
       p = new((void*) gvp) FtroGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FtroGeom_t;
     } else {
       p = new((void*) gvp) FtroGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FtroGeom_t G__TFtroGeom_t;
static int G__Geometry_Cint_709_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FtroGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FtroGeom_t*) (soff+(sizeof(FtroGeom_t)*i)))->~G__TFtroGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FtroGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FtroGeom_t*) (soff))->~G__TFtroGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RichGeom_t */
static int G__Geometry_Cint_710_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RichGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RichGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RichGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RichGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RichGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RichGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RichGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RichGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RichGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_710_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RichGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RichGeom_t[n];
     } else {
       p = new((void*) gvp) RichGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RichGeom_t;
     } else {
       p = new((void*) gvp) RichGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RichGeom_t G__TRichGeom_t;
static int G__Geometry_Cint_710_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RichGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RichGeom_t*) (soff+(sizeof(RichGeom_t)*i)))->~G__TRichGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RichGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RichGeom_t*) (soff))->~G__TRichGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FgtdGeom_t */
static int G__Geometry_Cint_711_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FgtdGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FgtdGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FgtdGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FgtdGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FgtdGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FgtdGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FgtdGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FgtdGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FgtdGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_711_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FgtdGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FgtdGeom_t[n];
     } else {
       p = new((void*) gvp) FgtdGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FgtdGeom_t;
     } else {
       p = new((void*) gvp) FgtdGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FgtdGeom_t G__TFgtdGeom_t;
static int G__Geometry_Cint_711_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FgtdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FgtdGeom_t*) (soff+(sizeof(FgtdGeom_t)*i)))->~G__TFgtdGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FgtdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FgtdGeom_t*) (soff))->~G__TFgtdGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* IdsmGeom_t */
static int G__Geometry_Cint_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) IdsmGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IdsmGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) IdsmGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      IdsmGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IdsmGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IdsmGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IdsmGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IdsmGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IdsmGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_712_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IdsmGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IdsmGeom_t[n];
     } else {
       p = new((void*) gvp) IdsmGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IdsmGeom_t;
     } else {
       p = new((void*) gvp) IdsmGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef IdsmGeom_t G__TIdsmGeom_t;
static int G__Geometry_Cint_712_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (IdsmGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((IdsmGeom_t*) (soff+(sizeof(IdsmGeom_t)*i)))->~G__TIdsmGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (IdsmGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((IdsmGeom_t*) (soff))->~G__TIdsmGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* IstdGeom_t */
static int G__Geometry_Cint_713_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) IstdGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IstdGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) IstdGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      IstdGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((IstdGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IstdGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IstdGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) IstdGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) IstdGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_713_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   IstdGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IstdGeom_t[n];
     } else {
       p = new((void*) gvp) IstdGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new IstdGeom_t;
     } else {
       p = new((void*) gvp) IstdGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef IstdGeom_t G__TIstdGeom_t;
static int G__Geometry_Cint_713_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (IstdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((IstdGeom_t*) (soff+(sizeof(IstdGeom_t)*i)))->~G__TIstdGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (IstdGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((IstdGeom_t*) (soff))->~G__TIstdGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PxstGeom_t */
static int G__Geometry_Cint_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PxstGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PxstGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PxstGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PxstGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PxstGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PxstGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PxstGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PxstGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PxstGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PxstGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PxstGeom_t[n];
     } else {
       p = new((void*) gvp) PxstGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PxstGeom_t;
     } else {
       p = new((void*) gvp) PxstGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PxstGeom_t G__TPxstGeom_t;
static int G__Geometry_Cint_714_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PxstGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PxstGeom_t*) (soff+(sizeof(PxstGeom_t)*i)))->~G__TPxstGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PxstGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PxstGeom_t*) (soff))->~G__TPxstGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PsupGeom_t */
static int G__Geometry_Cint_715_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PsupGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PsupGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PsupGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PsupGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PsupGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PsupGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PsupGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PsupGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PsupGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_715_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PsupGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PsupGeom_t[n];
     } else {
       p = new((void*) gvp) PsupGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PsupGeom_t;
     } else {
       p = new((void*) gvp) PsupGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PsupGeom_t G__TPsupGeom_t;
static int G__Geometry_Cint_715_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PsupGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PsupGeom_t*) (soff+(sizeof(PsupGeom_t)*i)))->~G__TPsupGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PsupGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PsupGeom_t*) (soff))->~G__TPsupGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PxldGeom_t */
static int G__Geometry_Cint_716_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PxldGeom_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PxldGeom_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PxldGeom_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PxldGeom_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PxldGeom_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PxldGeom_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PxldGeom_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PxldGeom_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PxldGeom_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_716_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PxldGeom_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PxldGeom_t[n];
     } else {
       p = new((void*) gvp) PxldGeom_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PxldGeom_t;
     } else {
       p = new((void*) gvp) PxldGeom_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PxldGeom_t G__TPxldGeom_t;
static int G__Geometry_Cint_716_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PxldGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PxldGeom_t*) (soff+(sizeof(PxldGeom_t)*i)))->~G__TPxldGeom_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PxldGeom_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PxldGeom_t*) (soff))->~G__TPxldGeom_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Geometry */
static int G__Geometry_Cint_717_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Geometry* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Geometry[n];
     } else {
       p = new((void*) gvp) Geometry[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Geometry;
     } else {
       p = new((void*) gvp) Geometry;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_Geometry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Geometry*) G__getstructoffset())->StarsimGeometry((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((Geometry*) G__getstructoffset())->numberOfNodes((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((Geometry*) G__getstructoffset())->numberOfNodes());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((Geometry*) G__getstructoffset())->numberOfVolumes((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((Geometry*) G__getstructoffset())->numberOfVolumes());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((Geometry*) G__getstructoffset())->CreateModule((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((Geometry*) G__getstructoffset())->CreateModule((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Geometry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Geometry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Geometry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Geometry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Geometry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Geometry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Geometry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Geometry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Geometry_Cint_717_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Geometry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Geometry_Cint_717_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Geometry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Geometry(*(Geometry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Geometry_CintLN_Geometry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Geometry G__TGeometry;
static int G__Geometry_Cint_717_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Geometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Geometry*) (soff+(sizeof(Geometry)*i)))->~G__TGeometry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Geometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Geometry*) (soff))->~G__TGeometry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Geometry_Cint_717_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Geometry* dest = (Geometry*) G__getstructoffset();
   *dest = *(Geometry*) libp->para[0].ref;
   const Geometry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Geom_t */

/* BbcmGeom_t */

/* CalbGeom_t */

/* CaveGeom_t */

/* EcalGeom_t */

/* FpdmGeom_t */

/* FsceGeom_t */

/* HcalGeom_t */

/* EiddGeom_t */

/* FtpcGeom_t */

/* FtsdGeom_t */

/* MagpGeom_t */

/* MfldGeom_t */

/* MutdGeom_t */

/* PhmdGeom_t */

/* PipeGeom_t */

/* PixlGeom_t */

/* DtubGeom_t */

/* SconGeom_t */

/* SisdGeom_t */

/* SvttGeom_t */

/* BtofGeom_t */

/* TpceGeom_t */

/* TpcxGeom_t */

/* VpddGeom_t */

/* UpstGeom_t */

/* ZcalGeom_t */

/* FtroGeom_t */

/* RichGeom_t */

/* FgtdGeom_t */

/* IdsmGeom_t */

/* IstdGeom_t */

/* PxstGeom_t */

/* PsupGeom_t */

/* PxldGeom_t */

/* Geometry */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGeometry_Cint {
 public:
  G__Sizep2memfuncGeometry_Cint(): p(&G__Sizep2memfuncGeometry_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGeometry_Cint::*p)();
};

size_t G__get_sizep2memfuncGeometry_Cint()
{
  G__Sizep2memfuncGeometry_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGeometry_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t))) {
     Geom_t *G__Lderived;
     G__Lderived=(Geom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t))) {
     BbcmGeom_t *G__Lderived;
     G__Lderived=(BbcmGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t))) {
     CalbGeom_t *G__Lderived;
     G__Lderived=(CalbGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t))) {
     CaveGeom_t *G__Lderived;
     G__Lderived=(CaveGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t))) {
     EcalGeom_t *G__Lderived;
     G__Lderived=(EcalGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t))) {
     FpdmGeom_t *G__Lderived;
     G__Lderived=(FpdmGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t))) {
     FsceGeom_t *G__Lderived;
     G__Lderived=(FsceGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t))) {
     HcalGeom_t *G__Lderived;
     G__Lderived=(HcalGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t))) {
     EiddGeom_t *G__Lderived;
     G__Lderived=(EiddGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t))) {
     FtpcGeom_t *G__Lderived;
     G__Lderived=(FtpcGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t))) {
     FtsdGeom_t *G__Lderived;
     G__Lderived=(FtsdGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t))) {
     MagpGeom_t *G__Lderived;
     G__Lderived=(MagpGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t))) {
     MfldGeom_t *G__Lderived;
     G__Lderived=(MfldGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t))) {
     MutdGeom_t *G__Lderived;
     G__Lderived=(MutdGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t))) {
     PhmdGeom_t *G__Lderived;
     G__Lderived=(PhmdGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t))) {
     PipeGeom_t *G__Lderived;
     G__Lderived=(PipeGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t))) {
     PixlGeom_t *G__Lderived;
     G__Lderived=(PixlGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t))) {
     DtubGeom_t *G__Lderived;
     G__Lderived=(DtubGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t))) {
     SconGeom_t *G__Lderived;
     G__Lderived=(SconGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t))) {
     SisdGeom_t *G__Lderived;
     G__Lderived=(SisdGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t))) {
     SvttGeom_t *G__Lderived;
     G__Lderived=(SvttGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t))) {
     BtofGeom_t *G__Lderived;
     G__Lderived=(BtofGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t))) {
     TpceGeom_t *G__Lderived;
     G__Lderived=(TpceGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t))) {
     TpcxGeom_t *G__Lderived;
     G__Lderived=(TpcxGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t))) {
     VpddGeom_t *G__Lderived;
     G__Lderived=(VpddGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t))) {
     UpstGeom_t *G__Lderived;
     G__Lderived=(UpstGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t))) {
     ZcalGeom_t *G__Lderived;
     G__Lderived=(ZcalGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t))) {
     FtroGeom_t *G__Lderived;
     G__Lderived=(FtroGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t))) {
     RichGeom_t *G__Lderived;
     G__Lderived=(RichGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t))) {
     FgtdGeom_t *G__Lderived;
     G__Lderived=(FgtdGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t))) {
     IdsmGeom_t *G__Lderived;
     G__Lderived=(IdsmGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t))) {
     IstdGeom_t *G__Lderived;
     G__Lderived=(IstdGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t))) {
     PxstGeom_t *G__Lderived;
     G__Lderived=(PxstGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t))) {
     PsupGeom_t *G__Lderived;
     G__Lderived=(PsupGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t))) {
     PxldGeom_t *G__Lderived;
     G__Lderived=(PxldGeom_t*)0x1000;
     {
       AgStructure *G__Lpbase=(AgStructure*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_AgStructure),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Geometry_CintLN_Geometry))) {
     Geometry *G__Lderived;
     G__Lderived=(Geometry*)0x1000;
     {
       AgModule *G__Lpbase=(AgModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geometry),G__get_linked_tagnum(&G__Geometry_CintLN_AgModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       AgBlock *G__Lpbase=(AgBlock*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geometry),G__get_linked_tagnum(&G__Geometry_CintLN_AgBlock),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geometry),G__get_linked_tagnum(&G__Geometry_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geometry),G__get_linked_tagnum(&G__Geometry_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGeometry_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Double_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,double>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,double,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,std::vector<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TString,allocator<TString> > >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<TString,allocator<TString> >,less<int> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,Int_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,int,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TString>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TString>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TString,less<int> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoShape*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::map<TString,Double_t> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<map<TString,Double_t> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<map<TString,double,less<TString>,allocator<pair<const TString,double> > > >",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,MyComponent>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgMaterialcLcLMyComponentcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialcLcLMyComponentgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgMaterial::MyComponent>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgMaterialcLcLMyComponentcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialcLcLMyComponentgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgMaterial::MyComponent,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgMaterialcLcLMyComponentcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialcLcLMyComponentgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgMaterial*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgMaterialmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgMaterial*,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgMaterialmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgMedium*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgMediummUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMediummUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgMedium*,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgMediummUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMediummUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Rotation>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AgPlacement::Rotation>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AgPower<Int_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_AgPowerlEintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AgPower<Float_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_AgPowerlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolume*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TGeoVolume*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOTGeoVolumemUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTGeoVolumemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TGeoVolume*,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOTGeoVolumemUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTGeoVolumemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::vector<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<TString,allocator<TString> > >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,vector<TString,allocator<TString> >,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AgBlock*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Geometry_CintLN_reverse_iteratorlEvectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgBlock*>",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgBlockmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgBlockmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,AgBlock*,less<TString> >",117,G__get_linked_tagnum(&G__Geometry_CintLN_maplETStringcOAgBlockmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgBlockmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Array_t<Int_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_Array_tlEintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Array_t<Float_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_Array_tlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Array_t<Double_t>",117,G__get_linked_tagnum(&G__Geometry_CintLN_Array_tlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Meh_t",105,-1,0,G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Geom_t */
static void G__setup_memvarGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t));
   { Geom_t *p; p=(Geom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,"Geometry tag");
   G__memvar_setup((void*)((long)(&p->ecalFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"ecalFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ecalStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_ecal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_ecal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_ecal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_ecal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_ecal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_ecal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pipeFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"pipeFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pipeStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pipeStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_pipe)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_pipe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_pipe)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_pipe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_pipe)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_pipe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fpdmFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"fpdmFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fpdmStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fpdmStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_fpdm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_fpdm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_fpdm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_fpdm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_fpdm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_fpdm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->btofFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"btofFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->btofStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"btofStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_btof)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_btof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_btof)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_btof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_btof)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_btof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vpddFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"vpddFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vpddStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"vpddStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_vpdd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_vpdd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_vpdd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_vpdd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_vpdd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_vpdd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ftpcFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"ftpcFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ftpcStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ftpcStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_ftpc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_ftpc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_ftpc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_ftpc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_ftpc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_ftpc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ftroFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"ftroFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ftroStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ftroStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_ftro)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_ftro=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_ftro)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_ftro=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_ftro)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_ftro=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mutdFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"mutdFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mutdStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mutdStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_mutd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_mutd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_mutd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_mutd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_mutd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_mutd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpceFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"tpceFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpceStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tpceStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_tpce)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_tpce=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_tpce)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_tpce=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_tpce)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_tpce=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->calbFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"calbFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->calbStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"calbStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_calb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_calb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_calb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_calb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_calb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_calb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sconFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"sconFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sconStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sconStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_scon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_scon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_scon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_scon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_scon)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_scon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->svttFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"svttFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->svttStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"svttStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_svtt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_svtt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_svtt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_svtt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_svtt)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_svtt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phmdFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"phmdFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phmdStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"phmdStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_phmd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_phmd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_phmd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_phmd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_phmd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_phmd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->upstFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"upstFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->upstStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"upstStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_upst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_upst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_upst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_upst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_upst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_upst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zcalFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"zcalFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zcalStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"zcalStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_zcal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_zcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_zcal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_zcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_zcal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_zcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->caveFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"caveFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->caveStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"caveStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_cave)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_cave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_cave)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_cave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_cave)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_cave=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->magpFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"magpFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->magpStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"magpStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_magp)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_magp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_magp)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_magp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_magp)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_magp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bbcmFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"bbcmFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bbcmStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"bbcmStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_bbcm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_bbcm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_bbcm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_bbcm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_bbcm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_bbcm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sisdFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"sisdFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sisdStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"sisdStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_sisd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_sisd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_sisd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_sisd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_sisd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_sisd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->richFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"richFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->richStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"richStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_rich)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_rich=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_rich)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_rich=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_rich)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_rich=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mfldFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"mfldFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mfldStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"mfldStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_mfld)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_mfld=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_mfld)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_mfld=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_mfld)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_mfld=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgtdFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"fgtdFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fgtdStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fgtdStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_fgtd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_fgtd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_fgtd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_fgtd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_fgtd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_fgtd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->idsmFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"idsmFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->idsmStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"idsmStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_idsm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_idsm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_idsm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_idsm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_idsm)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_idsm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pixlFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"pixlFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pixlStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pixlStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_pixl)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_pixl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_pixl)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_pixl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_pixl)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_pixl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->istdFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"istdFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->istdStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"istdStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_istd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_istd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_istd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_istd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_istd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_istd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pxldFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"pxldFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pxldStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pxldStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_pxld)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_pxld=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_pxld)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_pxld=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_pxld)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_pxld=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fsceFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"fsceFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fsceStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fsceStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_fsce)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_fsce=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_fsce)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_fsce=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_fsce)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_fsce=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eiddFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"eiddFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eiddStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eiddStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_eidd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_eidd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_eidd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_eidd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_eidd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_eidd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpcxFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"tpcxFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpcxStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tpcxStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_tpcx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_tpcx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_tpcx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_tpcx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_tpcx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_tpcx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pxstFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"pxstFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pxstStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pxstStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_pxst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_pxst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_pxst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_pxst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_pxst)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_pxst=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->psupFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"psupFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->psupStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"psupStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_psup)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_psup=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_psup)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_psup=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_psup)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_psup=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtubFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"dtubFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dtubStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dtubStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_dtub)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_dtub=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_dtub)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_dtub=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_dtub)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_dtub=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"hcalFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"hcalStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_hcal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_hcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_hcal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_hcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_hcal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_hcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ftsdFlag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"ftsdFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ftsdStat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ftsdStat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvolumes_ftsd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nvolumes_ftsd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nnodes_ftsd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nnodes_ftsd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->success_ftsd)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"success_ftsd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalCuts)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ecalCuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->calbCuts)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"calbCuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpcRefSys)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"tpcRefSys=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->closeGeometry)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"closeGeometry=",0,"Flag which closes the geometry at end of construct.  If set false, the user is responsible for closing the geometry before drawing, simulation, etc...");
   G__memvar_setup((void*)((long)(&p->detectors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,1,"detectors=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BbcmGeom_t */
static void G__setup_memvarBbcmGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t));
   { BbcmGeom_t *p; p=(BbcmGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalbGeom_t */
static void G__setup_memvarCalbGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t));
   { CalbGeom_t *p; p=(CalbGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,"Selects BEMC options");
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,"Which module to load (which AgSTAR subroutine to call)");
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,"Master configuration switch");
   G__memvar_setup((void*)((long)(&p->emsedit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"emsedit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nmod)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_Array_tlEintgR),G__defined_typename("Array_t<Int_t>"),-1,1,"nmod=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->shift)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_Array_tlEintgR),G__defined_typename("Array_t<Int_t>"),-1,1,"shift=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->emcuts)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"emcuts=",0,"EM cut level");
   }
   G__tag_memvar_reset();
}


   /* CaveGeom_t */
static void G__setup_memvarCaveGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t));
   { CaveGeom_t *p; p=(CaveGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EcalGeom_t */
static void G__setup_memvarEcalGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t));
   { EcalGeom_t *p; p=(EcalGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->efill)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"efill=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->geometry)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"geometry=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->emcuts)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"emcuts=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FpdmGeom_t */
static void G__setup_memvarFpdmGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t));
   { FpdmGeom_t *p; p=(FpdmGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->position)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"position=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FsceGeom_t */
static void G__setup_memvarFsceGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t));
   { FsceGeom_t *p; p=(FsceGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HcalGeom_t */
static void G__setup_memvarHcalGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t));
   { HcalGeom_t *p; p=(HcalGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EiddGeom_t */
static void G__setup_memvarEiddGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t));
   { EiddGeom_t *p; p=(EiddGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FtpcGeom_t */
static void G__setup_memvarFtpcGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t));
   { FtpcGeom_t *p; p=(FtpcGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->supportModule)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"supportModule=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->supo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"supo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FtsdGeom_t */
static void G__setup_memvarFtsdGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t));
   { FtsdGeom_t *p; p=(FtsdGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MagpGeom_t */
static void G__setup_memvarMagpGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t));
   { MagpGeom_t *p; p=(MagpGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->version)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"version=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MfldGeom_t */
static void G__setup_memvarMfldGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t));
   { MfldGeom_t *p; p=(MfldGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->field)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"field=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MutdGeom_t */
static void G__setup_memvarMutdGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t));
   { MutdGeom_t *p; p=(MutdGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PhmdGeom_t */
static void G__setup_memvarPhmdGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t));
   { PhmdGeom_t *p; p=(PhmdGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PipeGeom_t */
static void G__setup_memvarPipeGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t));
   { PipeGeom_t *p; p=(PipeGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"flag=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PixlGeom_t */
static void G__setup_memvarPixlGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t));
   { PixlGeom_t *p; p=(PixlGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,"Geometry module");
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,"Geometry module configuration");
   G__memvar_setup((void*)((long)(&p->location)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"location=",0,"used in earlier geometries");
   G__memvar_setup((void*)((long)(&p->ladrconfig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ladrconfig=",0,"Cable type");
   G__memvar_setup((void*)((long)(&p->secversion)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"secversion=",0,"sectors populated");
   }
   G__tag_memvar_reset();
}


   /* DtubGeom_t */
static void G__setup_memvarDtubGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t));
   { DtubGeom_t *p; p=(DtubGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->location)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"location=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SconGeom_t */
static void G__setup_memvarSconGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t));
   { SconGeom_t *p; p=(SconGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SisdGeom_t */
static void G__setup_memvarSisdGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t));
   { SisdGeom_t *p; p=(SisdGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SvttGeom_t */
static void G__setup_memvarSvttGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t));
   { SvttGeom_t *p; p=(SvttGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->coneconfig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"coneconfig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->water)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"water=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nwafer)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nwafer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nlayer)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nlayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->n1stlayer)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"n1stlayer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->waferdim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"waferdim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->svshconfig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"svshconfig=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BtofGeom_t */
static void G__setup_memvarBtofGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t));
   { BtofGeom_t *p; p=(BtofGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->itof)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"itof=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tofX0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tofX0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tofZ0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tofZ0=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TpceGeom_t */
static void G__setup_memvarTpceGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t));
   { TpceGeom_t *p; p=(TpceGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dens)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dens=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rmax)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"rmax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->subversion)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"subversion=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TpcxGeom_t */
static void G__setup_memvarTpcxGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t));
   { TpcxGeom_t *p; p=(TpcxGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->padconfig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"padconfig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dens)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dens=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rmax)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"rmax=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* VpddGeom_t */
static void G__setup_memvarVpddGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t));
   { VpddGeom_t *p; p=(VpddGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UpstGeom_t */
static void G__setup_memvarUpstGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t));
   { UpstGeom_t *p; p=(UpstGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ZcalGeom_t */
static void G__setup_memvarZcalGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t));
   { ZcalGeom_t *p; p=(ZcalGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FtroGeom_t */
static void G__setup_memvarFtroGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t));
   { FtroGeom_t *p; p=(FtroGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RichGeom_t */
static void G__setup_memvarRichGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t));
   { RichGeom_t *p; p=(RichGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FgtdGeom_t */
static void G__setup_memvarFgtdGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t));
   { FgtdGeom_t *p; p=(FgtdGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* IdsmGeom_t */
static void G__setup_memvarIdsmGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t));
   { IdsmGeom_t *p; p=(IdsmGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* IstdGeom_t */
static void G__setup_memvarIstdGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t));
   { IstdGeom_t *p; p=(IstdGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PxstGeom_t */
static void G__setup_memvarPxstGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t));
   { PxstGeom_t *p; p=(PxstGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PsupGeom_t */
static void G__setup_memvarPsupGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t));
   { PsupGeom_t *p; p=(PsupGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PxldGeom_t */
static void G__setup_memvarPxldGeom_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t));
   { PxldGeom_t *p; p=(PxldGeom_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->select)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"select=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->module)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TString),-1,-1,1,"module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"config=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Geometry */
static void G__setup_memvarGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geometry));
   { Geometry *p; p=(Geometry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Geometry_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGeometry_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGeom_t(void) {
   /* Geom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_682_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Geom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_682_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Geom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_682_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Geom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_682_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Geom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_682_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_682_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Geom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_682_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Geom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_682_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Geom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_682_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Geom_t::DeclFileLine) ), 0);
   G__memfunc_setup("Geom_t",603,G__Geometry_Cint_682_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_Geom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opts", "*MENU*", (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~Geom_t", 729, G__Geometry_Cint_682_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBbcmGeom_t(void) {
   /* BbcmGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_683_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BbcmGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_683_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BbcmGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_683_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BbcmGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_683_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BbcmGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_683_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_683_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BbcmGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_683_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BbcmGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_683_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BbcmGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_683_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BbcmGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("BbcmGeom_t",975,G__Geometry_Cint_683_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_BbcmGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BbcmGeom_t", 1101, G__Geometry_Cint_683_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalbGeom_t(void) {
   /* CalbGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_684_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CalbGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_684_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CalbGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_684_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CalbGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_684_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CalbGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_684_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_684_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CalbGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_684_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CalbGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_684_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CalbGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_684_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CalbGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("CalbGeom_t",973,G__Geometry_Cint_684_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_CalbGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalbGeom_t", 1099, G__Geometry_Cint_684_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCaveGeom_t(void) {
   /* CaveGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_685_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CaveGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_685_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CaveGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_685_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CaveGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_685_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CaveGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_685_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_685_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CaveGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_685_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CaveGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_685_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CaveGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_685_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CaveGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("CaveGeom_t",986,G__Geometry_Cint_685_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_CaveGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CaveGeom_t", 1112, G__Geometry_Cint_685_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEcalGeom_t(void) {
   /* EcalGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_686_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EcalGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_686_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EcalGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_686_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EcalGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_686_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EcalGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_686_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_686_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EcalGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_686_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EcalGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_686_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EcalGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_686_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EcalGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("EcalGeom_t",976,G__Geometry_Cint_686_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_EcalGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EcalGeom_t", 1102, G__Geometry_Cint_686_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFpdmGeom_t(void) {
   /* FpdmGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_687_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FpdmGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_687_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FpdmGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_687_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FpdmGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_687_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FpdmGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_687_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_687_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FpdmGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_687_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FpdmGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_687_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FpdmGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_687_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FpdmGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("FpdmGeom_t",994,G__Geometry_Cint_687_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_FpdmGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FpdmGeom_t", 1120, G__Geometry_Cint_687_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFsceGeom_t(void) {
   /* FsceGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_688_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FsceGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_688_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FsceGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_688_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FsceGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_688_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FsceGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_688_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_688_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FsceGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_688_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FsceGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_688_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FsceGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_688_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FsceGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("FsceGeom_t",988,G__Geometry_Cint_688_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_FsceGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FsceGeom_t", 1114, G__Geometry_Cint_688_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHcalGeom_t(void) {
   /* HcalGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_689_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HcalGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_689_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_689_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HcalGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_689_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HcalGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_689_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_689_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_689_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HcalGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_689_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HcalGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_689_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HcalGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("HcalGeom_t",979,G__Geometry_Cint_689_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_HcalGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HcalGeom_t", 1105, G__Geometry_Cint_689_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEiddGeom_t(void) {
   /* EiddGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_690_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EiddGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_690_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EiddGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_690_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EiddGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_690_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EiddGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_690_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_690_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EiddGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_690_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EiddGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_690_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EiddGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_690_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EiddGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("EiddGeom_t",977,G__Geometry_Cint_690_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_EiddGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EiddGeom_t", 1103, G__Geometry_Cint_690_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFtpcGeom_t(void) {
   /* FtpcGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_691_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FtpcGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_691_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtpcGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_691_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FtpcGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_691_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FtpcGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_691_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_691_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtpcGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_691_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FtpcGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_691_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtpcGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_691_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FtpcGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("FtpcGeom_t",1000,G__Geometry_Cint_691_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_FtpcGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FtpcGeom_t", 1126, G__Geometry_Cint_691_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFtsdGeom_t(void) {
   /* FtsdGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_692_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FtsdGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_692_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtsdGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_692_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FtsdGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_692_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FtsdGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_692_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_692_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtsdGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_692_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FtsdGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_692_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtsdGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_692_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FtsdGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("FtsdGeom_t",1004,G__Geometry_Cint_692_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_FtsdGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FtsdGeom_t", 1130, G__Geometry_Cint_692_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMagpGeom_t(void) {
   /* MagpGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_693_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MagpGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_693_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MagpGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_693_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MagpGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_693_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MagpGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_693_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_693_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MagpGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_693_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MagpGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_693_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MagpGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_693_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MagpGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("MagpGeom_t",992,G__Geometry_Cint_693_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_MagpGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MagpGeom_t", 1118, G__Geometry_Cint_693_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMfldGeom_t(void) {
   /* MfldGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_694_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MfldGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_694_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MfldGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_694_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MfldGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_694_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MfldGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_694_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_694_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MfldGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_694_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MfldGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_694_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MfldGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_694_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MfldGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("MfldGeom_t",990,G__Geometry_Cint_694_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_MfldGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MfldGeom_t", 1116, G__Geometry_Cint_694_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMutdGeom_t(void) {
   /* MutdGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_695_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MutdGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_695_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MutdGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_695_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MutdGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_695_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MutdGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_695_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_695_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MutdGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_695_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MutdGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_695_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MutdGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_695_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MutdGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("MutdGeom_t",1013,G__Geometry_Cint_695_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_MutdGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MutdGeom_t", 1139, G__Geometry_Cint_695_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPhmdGeom_t(void) {
   /* PhmdGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_696_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PhmdGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_696_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PhmdGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_696_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PhmdGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_696_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PhmdGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_696_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_696_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PhmdGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_696_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PhmdGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_696_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PhmdGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_696_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PhmdGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("PhmdGeom_t",996,G__Geometry_Cint_696_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_PhmdGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PhmdGeom_t", 1122, G__Geometry_Cint_696_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPipeGeom_t(void) {
   /* PipeGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_697_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PipeGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_697_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PipeGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_697_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PipeGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_697_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PipeGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_697_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_697_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PipeGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_697_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PipeGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_697_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PipeGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_697_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PipeGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("PipeGeom_t",1001,G__Geometry_Cint_697_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_PipeGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PipeGeom_t", 1127, G__Geometry_Cint_697_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPixlGeom_t(void) {
   /* PixlGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_698_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PixlGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_698_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PixlGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_698_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PixlGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_698_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PixlGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_698_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_698_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PixlGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_698_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PixlGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_698_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PixlGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_698_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PixlGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("PixlGeom_t",1016,G__Geometry_Cint_698_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_PixlGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PixlGeom_t", 1142, G__Geometry_Cint_698_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDtubGeom_t(void) {
   /* DtubGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_699_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DtubGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_699_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DtubGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_699_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DtubGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_699_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DtubGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_699_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_699_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DtubGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_699_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DtubGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_699_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DtubGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_699_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DtubGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("DtubGeom_t",1002,G__Geometry_Cint_699_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_DtubGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DtubGeom_t", 1128, G__Geometry_Cint_699_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSconGeom_t(void) {
   /* SconGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_700_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SconGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_700_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SconGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_700_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SconGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_700_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SconGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_700_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_700_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SconGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_700_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SconGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_700_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SconGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_700_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SconGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("SconGeom_t",1006,G__Geometry_Cint_700_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_SconGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SconGeom_t", 1132, G__Geometry_Cint_700_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSisdGeom_t(void) {
   /* SisdGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_701_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SisdGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_701_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SisdGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_701_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SisdGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_701_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SisdGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_701_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_701_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SisdGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_701_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SisdGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_701_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SisdGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_701_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SisdGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("SisdGeom_t",1006,G__Geometry_Cint_701_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_SisdGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SisdGeom_t", 1132, G__Geometry_Cint_701_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSvttGeom_t(void) {
   /* SvttGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_702_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SvttGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_702_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SvttGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_702_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SvttGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_702_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SvttGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_702_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_702_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SvttGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_702_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SvttGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_702_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SvttGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_702_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SvttGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("SvttGeom_t",1036,G__Geometry_Cint_702_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_SvttGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SvttGeom_t", 1162, G__Geometry_Cint_702_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBtofGeom_t(void) {
   /* BtofGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_703_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BtofGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_703_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BtofGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_703_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BtofGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_703_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BtofGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_703_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_703_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BtofGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_703_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BtofGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_703_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BtofGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_703_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BtofGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("BtofGeom_t",998,G__Geometry_Cint_703_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_BtofGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BtofGeom_t", 1124, G__Geometry_Cint_703_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTpceGeom_t(void) {
   /* TpceGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_704_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TpceGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_704_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TpceGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_704_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TpceGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_704_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TpceGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_704_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_704_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TpceGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_704_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TpceGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_704_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TpceGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_704_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TpceGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("TpceGeom_t",999,G__Geometry_Cint_704_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_TpceGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TpceGeom_t", 1125, G__Geometry_Cint_704_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTpcxGeom_t(void) {
   /* TpcxGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_705_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TpcxGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_705_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TpcxGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_705_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TpcxGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_705_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TpcxGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_705_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_705_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TpcxGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_705_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TpcxGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_705_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TpcxGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_705_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TpcxGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("TpcxGeom_t",1018,G__Geometry_Cint_705_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_TpcxGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TpcxGeom_t", 1144, G__Geometry_Cint_705_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncVpddGeom_t(void) {
   /* VpddGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_706_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&VpddGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_706_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VpddGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_706_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&VpddGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_706_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&VpddGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_706_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_706_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VpddGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_706_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VpddGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_706_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VpddGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_706_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VpddGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("VpddGeom_t",1001,G__Geometry_Cint_706_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_VpddGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VpddGeom_t", 1127, G__Geometry_Cint_706_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUpstGeom_t(void) {
   /* UpstGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_707_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&UpstGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_707_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UpstGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_707_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&UpstGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_707_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&UpstGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_707_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_707_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UpstGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_707_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UpstGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_707_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UpstGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_707_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UpstGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("UpstGeom_t",1031,G__Geometry_Cint_707_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_UpstGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UpstGeom_t", 1157, G__Geometry_Cint_707_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncZcalGeom_t(void) {
   /* ZcalGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_708_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ZcalGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_708_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ZcalGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_708_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ZcalGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_708_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ZcalGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_708_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_708_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ZcalGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_708_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ZcalGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_708_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ZcalGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_708_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ZcalGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("ZcalGeom_t",997,G__Geometry_Cint_708_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_ZcalGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ZcalGeom_t", 1123, G__Geometry_Cint_708_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFtroGeom_t(void) {
   /* FtroGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_709_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FtroGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_709_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtroGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_709_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FtroGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_709_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FtroGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_709_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_709_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtroGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_709_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FtroGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_709_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FtroGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_709_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FtroGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("FtroGeom_t",1014,G__Geometry_Cint_709_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_FtroGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FtroGeom_t", 1140, G__Geometry_Cint_709_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRichGeom_t(void) {
   /* RichGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_710_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RichGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_710_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RichGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_710_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RichGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_710_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RichGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_710_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_710_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RichGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_710_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RichGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_710_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RichGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_710_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RichGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("RichGeom_t",993,G__Geometry_Cint_710_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_RichGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RichGeom_t", 1119, G__Geometry_Cint_710_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFgtdGeom_t(void) {
   /* FgtdGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_711_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FgtdGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_711_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FgtdGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_711_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FgtdGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_711_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FgtdGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_711_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_711_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FgtdGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_711_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FgtdGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_711_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FgtdGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_711_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FgtdGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("FgtdGeom_t",992,G__Geometry_Cint_711_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_FgtdGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FgtdGeom_t", 1118, G__Geometry_Cint_711_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncIdsmGeom_t(void) {
   /* IdsmGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_712_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&IdsmGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_712_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IdsmGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_712_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&IdsmGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_712_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&IdsmGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_712_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_712_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IdsmGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_712_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IdsmGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_712_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IdsmGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_712_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IdsmGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("IdsmGeom_t",1000,G__Geometry_Cint_712_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_IdsmGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IdsmGeom_t", 1126, G__Geometry_Cint_712_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncIstdGeom_t(void) {
   /* IstdGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_713_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&IstdGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_713_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IstdGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_713_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&IstdGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_713_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&IstdGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_713_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_713_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IstdGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_713_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IstdGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_713_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&IstdGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_713_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&IstdGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("IstdGeom_t",1007,G__Geometry_Cint_713_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_IstdGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IstdGeom_t", 1133, G__Geometry_Cint_713_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPxstGeom_t(void) {
   /* PxstGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_714_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PxstGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_714_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PxstGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_714_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PxstGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_714_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PxstGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_714_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_714_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PxstGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_714_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PxstGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_714_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PxstGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_714_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PxstGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("PxstGeom_t",1034,G__Geometry_Cint_714_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_PxstGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PxstGeom_t", 1160, G__Geometry_Cint_714_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPsupGeom_t(void) {
   /* PsupGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_715_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PsupGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_715_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PsupGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_715_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PsupGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_715_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PsupGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_715_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_715_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PsupGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_715_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PsupGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_715_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PsupGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_715_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PsupGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("PsupGeom_t",1027,G__Geometry_Cint_715_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_PsupGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PsupGeom_t", 1153, G__Geometry_Cint_715_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPxldGeom_t(void) {
   /* PxldGeom_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t));
   G__memfunc_setup("Class",502,G__Geometry_Cint_716_0_1, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PxldGeom_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_716_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PxldGeom_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_716_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PxldGeom_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_716_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PxldGeom_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_716_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_716_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PxldGeom_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_716_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PxldGeom_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_716_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PxldGeom_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_716_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PxldGeom_t::DeclFileLine) ), 0);
   G__memfunc_setup("PxldGeom_t",1011,G__Geometry_Cint_716_0_13, 105, G__get_linked_tagnum(&G__Geometry_CintLN_PxldGeom_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PxldGeom_t", 1137, G__Geometry_Cint_716_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGeometry(void) {
   /* Geometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Geometry_CintLN_Geometry));
   G__memfunc_setup("Geometry",844,G__Geometry_Cint_717_0_1, 105, G__get_linked_tagnum(&G__Geometry_CintLN_Geometry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructGeometry",1809,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - tag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StarsimGeometry",1583,G__Geometry_Cint_717_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfNodes",1335,G__Geometry_Cint_717_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"CAVE\"' volume", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfVolumes",1577,G__Geometry_Cint_717_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"CAVE\"' volume", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatistics",1355,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - volume", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BbcmInit",776,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalbInit",774,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EcalInit",777,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CaveInit",787,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FpdmInit",795,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FtpcInit",801,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MfldInit",791,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MutdInit",814,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhmdInit",797,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PipeInit",802,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PixlInit",817,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SconInit",807,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SisdInit",807,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SvttInit",837,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BtofInit",799,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TpceInit",800,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VpddInit",802,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MagpInit",793,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpstInit",832,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZcalInit",798,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FtroInit",815,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RichInit",794,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FgtdInit",793,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IdsmInit",801,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FsceInit",789,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EiddInit",778,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TpcxInit",819,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HcalInit",780,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IstdInit",808,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PxldInit",812,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PxstInit",835,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PsupInit",828,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FtsdInit",805,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeomInit",796,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructBbcm",1337,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructEcal",1338,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructPipe",1363,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructFpdm",1356,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructTpce",1361,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructCalb",1335,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructBtof",1360,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructVpdd",1363,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructFtpc",1362,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructMutd",1375,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructFtro",1376,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructSvtt",1398,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructSisd",1368,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructMagp",1354,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructScon",1368,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructCave",1348,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructPhmd",1358,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructUpst",1393,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructZcal",1359,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructRich",1355,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'false' go", "RICH is deprecated", (void*) NULL, 0);
   G__memfunc_setup("ConstructPixl",1378,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructDtub",1364,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructFgtd",1354,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructIdsm",1362,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructPxst",1396,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'false' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructIstd",1369,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'false' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructPxld",1373,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'false' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructPsup",1389,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'false' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructFsce",1350,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructEidd",1339,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructHcal",1341,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructFtsd",1366,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructTpcx",1380,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - flag g - 'Bool_t' 0 'true' go", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateModule",1210,G__Geometry_Cint_717_0_74, 85, G__get_linked_tagnum(&G__Geometry_CintLN_AgModule), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 'NULL' top", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Geometry_Cint_717_0_75, 85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Geometry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Geometry_Cint_717_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Geometry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Geometry_Cint_717_0_77, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Geometry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Geometry_Cint_717_0_78, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Geometry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Geometry_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Geometry_Cint_717_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Geometry_Cint_717_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Geometry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Geometry_Cint_717_0_84, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Geometry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Geometry_Cint_717_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Geometry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Geometry_Cint_717_0_86, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Geometry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Geometry", 844, G__Geometry_Cint_717_0_87, (int) ('i'), G__get_linked_tagnum(&G__Geometry_CintLN_Geometry), -1, 0, 1, 1, 1, 0, "u 'Geometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Geometry", 970, G__Geometry_Cint_717_0_88, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Geometry_Cint_717_0_89, (int) ('u'), G__get_linked_tagnum(&G__Geometry_CintLN_Geometry), -1, 1, 1, 1, 1, 0, "u 'Geometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGeometry_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGeometry_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGeometry_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Geometry_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_AgBlock = { "AgBlock" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_AgModule = { "AgModule" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR = { "map<TString,double,less<TString>,allocator<pair<const TString,double> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplEintcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR = { "map<int,vector<TString,allocator<TString> >,less<int>,allocator<pair<const int,vector<TString,allocator<TString> > > > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR = { "map<TString,int,less<TString>,allocator<pair<const TString,int> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR = { "map<int,TString,less<int>,allocator<pair<const int,TString> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR = { "vector<TGeoShape*,allocator<TGeoShape*> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoShape*,allocator<TGeoShape*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR = { "vector<map<TString,double,less<TString>,allocator<pair<const TString,double> > >,allocator<map<TString,double,less<TString>,allocator<pair<const TString,double> > > > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<map<TString,double,less<TString>,allocator<pair<const TString,double> > >,allocator<map<TString,double,less<TString>,allocator<pair<const TString,double> > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOAgMaterialcLcLMyComponentcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialcLcLMyComponentgRsPgRsPgR = { "map<TString,AgMaterial::MyComponent,less<TString>,allocator<pair<const TString,AgMaterial::MyComponent> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOAgMaterialmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialmUgRsPgRsPgR = { "map<TString,AgMaterial*,less<TString>,allocator<pair<const TString,AgMaterial*> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOAgMediummUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMediummUgRsPgRsPgR = { "map<TString,AgMedium*,less<TString>,allocator<pair<const TString,AgMedium*> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgR = { "vector<AgPlacement::Rotation,allocator<AgPlacement::Rotation> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AgPlacement::Rotation,allocator<AgPlacement::Rotation> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_AgPowerlEintgR = { "AgPower<int>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_AgPowerlEfloatgR = { "AgPower<float>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgR = { "vector<TGeoVolume*,allocator<TGeoVolume*> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolume*,allocator<TGeoVolume*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOTGeoVolumemUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTGeoVolumemUgRsPgRsPgR = { "map<TString,TGeoVolume*,less<TString>,allocator<pair<const TString,TGeoVolume*> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR = { "map<TString,vector<TString,allocator<TString> >,less<TString>,allocator<pair<const TString,vector<TString,allocator<TString> > > > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_vectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgR = { "vector<AgBlock*,allocator<AgBlock*> >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_reverse_iteratorlEvectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AgBlock*,allocator<AgBlock*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_maplETStringcOAgBlockmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgBlockmUgRsPgRsPgR = { "map<TString,AgBlock*,less<TString>,allocator<pair<const TString,AgBlock*> > >" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_AgStructure = { "AgStructure" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_Array_tlEintgR = { "Array_t<int>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_Array_tlEfloatgR = { "Array_t<float>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_Array_tlEdoublegR = { "Array_t<double>" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_Geom_t = { "Geom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_BbcmGeom_t = { "BbcmGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_CalbGeom_t = { "CalbGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_CaveGeom_t = { "CaveGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_EcalGeom_t = { "EcalGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_FpdmGeom_t = { "FpdmGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_FsceGeom_t = { "FsceGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_HcalGeom_t = { "HcalGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_EiddGeom_t = { "EiddGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_FtpcGeom_t = { "FtpcGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_FtsdGeom_t = { "FtsdGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_MagpGeom_t = { "MagpGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_MfldGeom_t = { "MfldGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_MutdGeom_t = { "MutdGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_PhmdGeom_t = { "PhmdGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_PipeGeom_t = { "PipeGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_PixlGeom_t = { "PixlGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_DtubGeom_t = { "DtubGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_SconGeom_t = { "SconGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_SisdGeom_t = { "SisdGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_SvttGeom_t = { "SvttGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_BtofGeom_t = { "BtofGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_TpceGeom_t = { "TpceGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_TpcxGeom_t = { "TpcxGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_VpddGeom_t = { "VpddGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_UpstGeom_t = { "UpstGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_ZcalGeom_t = { "ZcalGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_FtroGeom_t = { "FtroGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_RichGeom_t = { "RichGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_FgtdGeom_t = { "FgtdGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_IdsmGeom_t = { "IdsmGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_IstdGeom_t = { "IstdGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_PxstGeom_t = { "PxstGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_PsupGeom_t = { "PsupGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_PxldGeom_t = { "PxldGeom_t" , 99 , -1 };
G__linked_taginfo G__Geometry_CintLN_Geometry = { "Geometry" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGeometry_Cint() {
  G__Geometry_CintLN_TClass.tagnum = -1 ;
  G__Geometry_CintLN_TBuffer.tagnum = -1 ;
  G__Geometry_CintLN_TMemberInspector.tagnum = -1 ;
  G__Geometry_CintLN_TObject.tagnum = -1 ;
  G__Geometry_CintLN_TNamed.tagnum = -1 ;
  G__Geometry_CintLN_TString.tagnum = -1 ;
  G__Geometry_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_AgBlock.tagnum = -1 ;
  G__Geometry_CintLN_AgModule.tagnum = -1 ;
  G__Geometry_CintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_maplEintcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOAgMaterialcLcLMyComponentcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialcLcLMyComponentgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOAgMaterialmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialmUgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOAgMediummUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMediummUgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_AgPowerlEintgR.tagnum = -1 ;
  G__Geometry_CintLN_AgPowerlEfloatgR.tagnum = -1 ;
  G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__Geometry_CintLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOTGeoVolumemUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTGeoVolumemUgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_vectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_reverse_iteratorlEvectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Geometry_CintLN_maplETStringcOAgBlockmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgBlockmUgRsPgRsPgR.tagnum = -1 ;
  G__Geometry_CintLN_AgStructure.tagnum = -1 ;
  G__Geometry_CintLN_Array_tlEintgR.tagnum = -1 ;
  G__Geometry_CintLN_Array_tlEfloatgR.tagnum = -1 ;
  G__Geometry_CintLN_Array_tlEdoublegR.tagnum = -1 ;
  G__Geometry_CintLN_Geom_t.tagnum = -1 ;
  G__Geometry_CintLN_BbcmGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_CalbGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_CaveGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_EcalGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_FpdmGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_FsceGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_HcalGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_EiddGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_FtpcGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_FtsdGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_MagpGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_MfldGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_MutdGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_PhmdGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_PipeGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_PixlGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_DtubGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_SconGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_SisdGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_SvttGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_BtofGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_TpceGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_TpcxGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_VpddGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_UpstGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_ZcalGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_FtroGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_RichGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_FgtdGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_IdsmGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_IstdGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_PxstGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_PsupGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_PxldGeom_t.tagnum = -1 ;
  G__Geometry_CintLN_Geometry.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGeometry_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_AgBlock);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_AgModule);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplEintcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOintcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoShapemUcOallocatorlETGeoShapemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRcOallocatorlEmaplETStringcOdoublecOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOdoublegRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOAgMaterialcLcLMyComponentcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialcLcLMyComponentgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOAgMaterialmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMaterialmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOAgMediummUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgMediummUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlEAgPlacementcLcLRotationcOallocatorlEAgPlacementcLcLRotationgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_AgPowerlEintgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_AgPowerlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlETGeoVolumemUcOallocatorlETGeoVolumemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOTGeoVolumemUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTGeoVolumemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOvectorlETStringcOallocatorlETStringgRsPgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOvectorlETStringcOallocatorlETStringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_vectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_reverse_iteratorlEvectorlEAgBlockmUcOallocatorlEAgBlockmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_maplETStringcOAgBlockmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOAgBlockmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_AgStructure);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_Array_tlEintgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_Array_tlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Geometry_CintLN_Array_tlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_Geom_t),sizeof(Geom_t),-1,324864,(char*)NULL,G__setup_memvarGeom_t,G__setup_memfuncGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_BbcmGeom_t),sizeof(BbcmGeom_t),-1,324864,(char*)NULL,G__setup_memvarBbcmGeom_t,G__setup_memfuncBbcmGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_CalbGeom_t),sizeof(CalbGeom_t),-1,324864,(char*)NULL,G__setup_memvarCalbGeom_t,G__setup_memfuncCalbGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_CaveGeom_t),sizeof(CaveGeom_t),-1,324864,(char*)NULL,G__setup_memvarCaveGeom_t,G__setup_memfuncCaveGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_EcalGeom_t),sizeof(EcalGeom_t),-1,324864,(char*)NULL,G__setup_memvarEcalGeom_t,G__setup_memfuncEcalGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_FpdmGeom_t),sizeof(FpdmGeom_t),-1,324864,(char*)NULL,G__setup_memvarFpdmGeom_t,G__setup_memfuncFpdmGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_FsceGeom_t),sizeof(FsceGeom_t),-1,324864,(char*)NULL,G__setup_memvarFsceGeom_t,G__setup_memfuncFsceGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_HcalGeom_t),sizeof(HcalGeom_t),-1,324864,(char*)NULL,G__setup_memvarHcalGeom_t,G__setup_memfuncHcalGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_EiddGeom_t),sizeof(EiddGeom_t),-1,324864,(char*)NULL,G__setup_memvarEiddGeom_t,G__setup_memfuncEiddGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_FtpcGeom_t),sizeof(FtpcGeom_t),-1,324864,(char*)NULL,G__setup_memvarFtpcGeom_t,G__setup_memfuncFtpcGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_FtsdGeom_t),sizeof(FtsdGeom_t),-1,324864,(char*)NULL,G__setup_memvarFtsdGeom_t,G__setup_memfuncFtsdGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_MagpGeom_t),sizeof(MagpGeom_t),-1,324864,(char*)NULL,G__setup_memvarMagpGeom_t,G__setup_memfuncMagpGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_MfldGeom_t),sizeof(MfldGeom_t),-1,324864,(char*)NULL,G__setup_memvarMfldGeom_t,G__setup_memfuncMfldGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_MutdGeom_t),sizeof(MutdGeom_t),-1,324864,(char*)NULL,G__setup_memvarMutdGeom_t,G__setup_memfuncMutdGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_PhmdGeom_t),sizeof(PhmdGeom_t),-1,324864,(char*)NULL,G__setup_memvarPhmdGeom_t,G__setup_memfuncPhmdGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_PipeGeom_t),sizeof(PipeGeom_t),-1,324864,(char*)NULL,G__setup_memvarPipeGeom_t,G__setup_memfuncPipeGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_PixlGeom_t),sizeof(PixlGeom_t),-1,324864,(char*)NULL,G__setup_memvarPixlGeom_t,G__setup_memfuncPixlGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_DtubGeom_t),sizeof(DtubGeom_t),-1,324864,(char*)NULL,G__setup_memvarDtubGeom_t,G__setup_memfuncDtubGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_SconGeom_t),sizeof(SconGeom_t),-1,324864,(char*)NULL,G__setup_memvarSconGeom_t,G__setup_memfuncSconGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_SisdGeom_t),sizeof(SisdGeom_t),-1,324864,(char*)NULL,G__setup_memvarSisdGeom_t,G__setup_memfuncSisdGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_SvttGeom_t),sizeof(SvttGeom_t),-1,324864,(char*)NULL,G__setup_memvarSvttGeom_t,G__setup_memfuncSvttGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_BtofGeom_t),sizeof(BtofGeom_t),-1,324864,(char*)NULL,G__setup_memvarBtofGeom_t,G__setup_memfuncBtofGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TpceGeom_t),sizeof(TpceGeom_t),-1,324864,(char*)NULL,G__setup_memvarTpceGeom_t,G__setup_memfuncTpceGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_TpcxGeom_t),sizeof(TpcxGeom_t),-1,324864,(char*)NULL,G__setup_memvarTpcxGeom_t,G__setup_memfuncTpcxGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_VpddGeom_t),sizeof(VpddGeom_t),-1,324864,(char*)NULL,G__setup_memvarVpddGeom_t,G__setup_memfuncVpddGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_UpstGeom_t),sizeof(UpstGeom_t),-1,324864,(char*)NULL,G__setup_memvarUpstGeom_t,G__setup_memfuncUpstGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_ZcalGeom_t),sizeof(ZcalGeom_t),-1,324864,(char*)NULL,G__setup_memvarZcalGeom_t,G__setup_memfuncZcalGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_FtroGeom_t),sizeof(FtroGeom_t),-1,324864,(char*)NULL,G__setup_memvarFtroGeom_t,G__setup_memfuncFtroGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_RichGeom_t),sizeof(RichGeom_t),-1,324864,(char*)NULL,G__setup_memvarRichGeom_t,G__setup_memfuncRichGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_FgtdGeom_t),sizeof(FgtdGeom_t),-1,323840,(char*)NULL,G__setup_memvarFgtdGeom_t,G__setup_memfuncFgtdGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_IdsmGeom_t),sizeof(IdsmGeom_t),-1,323840,(char*)NULL,G__setup_memvarIdsmGeom_t,G__setup_memfuncIdsmGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_IstdGeom_t),sizeof(IstdGeom_t),-1,323840,(char*)NULL,G__setup_memvarIstdGeom_t,G__setup_memfuncIstdGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_PxstGeom_t),sizeof(PxstGeom_t),-1,323840,(char*)NULL,G__setup_memvarPxstGeom_t,G__setup_memfuncPxstGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_PsupGeom_t),sizeof(PsupGeom_t),-1,323840,(char*)NULL,G__setup_memvarPsupGeom_t,G__setup_memfuncPsupGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_PxldGeom_t),sizeof(PxldGeom_t),-1,323840,(char*)NULL,G__setup_memvarPxldGeom_t,G__setup_memfuncPxldGeom_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Geometry_CintLN_Geometry),sizeof(Geometry),-1,324864,(char*)NULL,G__setup_memvarGeometry,G__setup_memfuncGeometry);
}
extern "C" void G__cpp_setupGeometry_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupGeometry_Cint()");
  G__set_cpp_environmentGeometry_Cint();
  G__cpp_setup_tagtableGeometry_Cint();

  G__cpp_setup_inheritanceGeometry_Cint();

  G__cpp_setup_typetableGeometry_Cint();

  G__cpp_setup_memvarGeometry_Cint();

  G__cpp_setup_memfuncGeometry_Cint();
  G__cpp_setup_globalGeometry_Cint();
  G__cpp_setup_funcGeometry_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGeometry_Cint();
  return;
}
class G__cpp_setup_initGeometry_Cint {
  public:
    G__cpp_setup_initGeometry_Cint() { G__add_setup_func("Geometry_Cint",(G__incsetup)(&G__cpp_setupGeometry_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGeometry_Cint() { G__remove_setup_func("Geometry_Cint"); }
};
G__cpp_setup_initGeometry_Cint G__cpp_setup_initializerGeometry_Cint;

