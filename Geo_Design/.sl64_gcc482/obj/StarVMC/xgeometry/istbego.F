C: definitions from /afs/rhic.bnl.gov/star/packages/DEV/.sl64_gcc482/bin/../../.sl64_gcc482/obj/asps/Simulation/agetof/../../../../../asps/Simulation/agetof/agetof.def
* $Id: istbgeo.g,v 1.10 2005/04/14 16:24:25 nieuwhzs Exp $
* $Log: istbgeo.g,v $
* Revision 1.10  2005/04/14 16:24:25  nieuwhzs
* Solved problems with the modules/ladders not ending up on the proper radius
* after they were tilted and shifted. Turned out that the first problem was
* that the shift parallel to the module was not done properly. We'd like these
* modules to tilt around a midpoint which is in between the sensors and have
* this same midpoint end up on the proper radius. This is the second problem,
* one can only tilt/rotate around the center of a volume.
* Finally resolved the problems by (re)introducing a shift perpendicular to
* the length of the modules. Together with the parallel shift and the tilt
* this now positions the modules properly.
* +++Gerrit van Nieuwenhuizen, 04/14/2005
*
* Revision 1.9  2005/02/09 15:13:01  nieuwhzs
* Added second water manifold which makes it possible to center the sensor
* assembly in the ladder mother volume, so no need for an extra radial
* displacement (dr) anymore.
* Corrected the size of the AlN substrates, from 1 to 2cm width.
* Corrected the size of the AlN thermal plate, from 2 to 3cm width.
* Adjusted the width of the ladder mother volume and sensor assembly
* mother volume from 6 to 7cm to accomodate the wider substrates and
* thermal plate.
* Corrected the position of the silicon sensors, looked like a wrong
* calculation. Front faces of the silicon sensors are now flush with
* the front faces of the AlN substrates.
* Some cosmetic changes to the code layout, mainly to the coordinate
* definitions of the placements. I don't like one-liners.
* +++Gerrit van Nieuwenhuizen, 02/09/2005
*
* Revision 1.6  2005/01/26 01:13:45  potekhin
* Whoa! Did the complete water manifold shebang.
*
* Revision 1.5  2005/01/18 17:38:10  potekhin
* Removed the separate Active and Passive layers,
* as the sensor is apparently all active. Tested
* the hits structure.
*
* Revision 1.4  2005/01/06 02:02:23  potekhin
* Large addition to the code along the lines
* of Gerrit's design. Segmented silicon, AlN,
* chtips, new volume names
*
* Revision 1.3  2004/12/07 00:44:45  potekhin
* The prior naming convention led to a clash in the name space,
* which was implicit due to automatic volume enumeration and
* reference counting, under certain conditions. This resulted
* in a crash. I modified the names, and created a new structure
* to describe the attributed of the mother volume in a more
* reasonable way.
*
* Revision 1.2  2004/07/22 22:48:24  potekhin
* Corrected a typo in comment
*
* Revision 1.1  2004/07/15 16:27:50  potekhin
* A properly configured version of the outer pixel
* barrel detector with 3 layers, initial cut
*
*****************************************************************
      SUBROUTINE ISTBGEO                                                  60
C ISTBGEO IS THE GEOMETRY OF THE OUTER BARREL PIXEL DETECTOR              60
      IMPLICIT NONE                                                       60
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       60
      DATA MODULE/'ISTBGEO'/, BANK_TITLE/'*'/                             60
      DATA MCOMMENT/'IS THE GEOMETRY OF THE OUTER BARREL PIXEL            60
     *DETECTOR'/                                                          60
      LOGICAL FIRST                                                       60
      DATA FIRST/.TRUE./                                                  60
      SAVE FIRST                                                          60
      INTEGER JUMPAD                                                      60
      EXTERNAL JUMPAD                                                     60
      INTEGER OK                                                          60
      PARAMETER (OK=0)                                                    60
      INTEGER AG_I,AG_J                                                   60
      SAVE AG_I,AG_J                                                      60
C CREATED 07/15/04                                                        60
      DATA AG_I/0/,AG_J/0/                                                61
      CHARACTER*40 CREATED /'07/15/04'/                                   61
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  61
C AUTHOR MAXIM POTEKHIN                                                   61
      CHARACTER*40 AUTHOR /'MAXIM POTEKHIN'/                              62
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  62
*****************************************************************
C - Advanced Geant interface                                              64
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      64
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       64
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         64
     *AG_OPTION,AG_ORT,AG_MARK                                            64
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         64
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     64
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     64
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    64
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          64
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   64
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     64
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        64
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   64
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 64
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     64
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       64
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        64
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       64
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       64
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       64
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         64
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     64
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       64
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   64
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       64
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     64
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          64
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         64
     *-696969,AG_LDETU=250)                                               64
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    64
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  64
     *AG_IMFLD,AG_ISIMU                                                   64
C Inherited variables a: saved during internal calls                      64
C b: reset at the entry in a block and then saved                         64
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        64
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       64
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         64
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     64
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       64
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         64
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           64
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        64
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        64
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            64
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           64
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    64
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      64
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           64
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          64
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                64
C local variables valid inside same block                                 64
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       64
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  64
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         64
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    64
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          64
     *AG_OPTION                                                           64
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        64
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             64
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              64
C temporarly                                                              64
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           64
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    64
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       64
     *AG_HY)                                                              64
      REAL MIL_P,INCH_P                                                   64
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               64
C - GEANT description of logical units                                    64
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            64
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      64
      COMMON/GCMAIL/ CHMAIL                                               64
      CHARACTER*132 CHMAIL                                                64
* ---
      REAL ANGLE, ANGLEPOS, ANGLECORR, TRUER, RADDEG, RLAD                66
      INTEGER NL, LY, NU                                                  67
* ---
      INTEGER BLOCK_IBMO                                                  69
      INTEGER BLOCK_IBLM                                                  69
      INTEGER BLOCK_IBAM                                                  69
      INTEGER BLOCK_IBSS                                                  69
      INTEGER BLOCK_ISTP                                                  69
      INTEGER BLOCK_ISSC                                                  69
      INTEGER BLOCK_ISWD                                                  69
      INTEGER BLOCK_ISVD                                                  69
C -                                                                       71
      REAL ISMG_VERSION                                                   71
      EQUIVALENCE (BANK_ISMG(3),ISMG_VERSION,RE_ISMG_VERSION),            71
     *(NAMES_ISMG(1),NISMG_VERSION)                                       71
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_VERSION),(MAP_ISMG(1,1),          71
     *MISMG_VERSION)                                                      71
      CHARACTER CISMG_VERSION*40/' '/                                     71
      CHARACTER NISMG_VERSION*12/'R.VERSION'/                             71
      INTEGER MISMG_VERSION(2)/1,1/                                       71
      REAL RE_ISMG_VERSION                                                71
C -                                                                       71
      REAL ISMG_RIN                                                       71
      EQUIVALENCE (BANK_ISMG(4),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(2),     71
     *NISMG_RIN)                                                          71
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_RIN),(MAP_ISMG(1,2),MISMG_RIN)    71
      CHARACTER CISMG_RIN*40/' '/                                         71
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     71
      INTEGER MISMG_RIN(2)/1,1/                                           71
      REAL RE_ISMG_RIN                                                    71
C -                                                                       71
      REAL ISMG_ROUT                                                      71
      EQUIVALENCE (BANK_ISMG(5),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(3),   71
     *NISMG_ROUT)                                                         71
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_ROUT),(MAP_ISMG(1,3),             71
     *MISMG_ROUT)                                                         71
      CHARACTER CISMG_ROUT*40/' '/                                        71
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   71
      INTEGER MISMG_ROUT(2)/1,1/                                          71
      REAL RE_ISMG_ROUT                                                   71
C -                                                                       71
      REAL ISMG_TOTALLENGTH                                               71
      EQUIVALENCE (BANK_ISMG(6),ISMG_TOTALLENGTH,RE_ISMG_TOTALLENGTH),    71
     *(NAMES_ISMG(4),NISMG_TOTALLENGTH)                                   71
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_TOTALLENGTH),(MAP_ISMG(1,4),      71
     *MISMG_TOTALLENGTH)                                                  71
      CHARACTER CISMG_TOTALLENGTH*40/' '/                                 71
      CHARACTER NISMG_TOTALLENGTH*12/'R.TOTALLENGTH'/                     71
      INTEGER MISMG_TOTALLENGTH(2)/1,1/                                   71
      REAL RE_ISMG_TOTALLENGTH                                            71
C -                                                                       71
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                71
      PARAMETER (LEN_ISMG=6)                                              71
      PARAMETER (LLEN_ISMG=4)                                             71
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           71
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        71
      DATA IDNUM_ISMG/10*0/                                               71
      REAL BANK_ISMG(LEN_ISMG)                                            71
      CHARACTER*60 BPATH_ISMG/' '/                                        71
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          71
     *BPATH_ISMG                                                          71
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             71
C *                                                                       71
C -                                                                       75
      REAL ISBG_LAYER                                                     75
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                75
     *(NAMES_ISBG(1),NISBG_LAYER)                                         75
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            75
     *MISBG_LAYER)                                                        75
      CHARACTER CISBG_LAYER*40/' '/                                       75
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 75
      INTEGER MISBG_LAYER(2)/1,1/                                         75
      REAL RE_ISBG_LAYER                                                  75
C -                                                                       75
      REAL ISBG_NLADDER                                                   75
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            75
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       75
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          75
     *MISBG_NLADDER)                                                      75
      CHARACTER CISBG_NLADDER*40/' '/                                     75
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             75
      INTEGER MISBG_NLADDER(2)/1,1/                                       75
      REAL RE_ISBG_NLADDER                                                75
C -                                                                       75
      REAL ISBG_NUNIT                                                     75
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                75
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         75
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            75
     *MISBG_NUNIT)                                                        75
      CHARACTER CISBG_NUNIT*40/' '/                                       75
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 75
      INTEGER MISBG_NUNIT(2)/1,1/                                         75
      REAL RE_ISBG_NUNIT                                                  75
C -                                                                       75
      REAL ISBG_LENGTH                                                    75
      EQUIVALENCE (BANK_ISBG(6),ISBG_LENGTH,RE_ISBG_LENGTH),              75
     *(NAMES_ISBG(4),NISBG_LENGTH)                                        75
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_LENGTH),(MAP_ISBG(1,4),           75
     *MISBG_LENGTH)                                                       75
      CHARACTER CISBG_LENGTH*40/' '/                                      75
      CHARACTER NISBG_LENGTH*12/'R.LENGTH'/                               75
      INTEGER MISBG_LENGTH(2)/1,1/                                        75
      REAL RE_ISBG_LENGTH                                                 75
C -                                                                       75
      REAL ISBG_LADDERWIDTH                                               75
      EQUIVALENCE (BANK_ISBG(7),ISBG_LADDERWIDTH,RE_ISBG_LADDERWIDTH),    75
     *(NAMES_ISBG(5),NISBG_LADDERWIDTH)                                   75
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_LADDERWIDTH),(MAP_ISBG(1,5),      75
     *MISBG_LADDERWIDTH)                                                  75
      CHARACTER CISBG_LADDERWIDTH*40/' '/                                 75
      CHARACTER NISBG_LADDERWIDTH*12/'R.LADDERWIDTH'/                     75
      INTEGER MISBG_LADDERWIDTH(2)/1,1/                                   75
      REAL RE_ISBG_LADDERWIDTH                                            75
C -                                                                       75
      REAL ISBG_LADDERTHK                                                 75
      EQUIVALENCE (BANK_ISBG(8),ISBG_LADDERTHK,RE_ISBG_LADDERTHK),        75
     *(NAMES_ISBG(6),NISBG_LADDERTHK)                                     75
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_LADDERTHK),(MAP_ISBG(1,6),        75
     *MISBG_LADDERTHK)                                                    75
      CHARACTER CISBG_LADDERTHK*40/' '/                                   75
      CHARACTER NISBG_LADDERTHK*12/'R.LADDERTHK'/                         75
      INTEGER MISBG_LADDERTHK(2)/1,1/                                     75
      REAL RE_ISBG_LADDERTHK                                              75
C -                                                                       75
      REAL ISBG_SENSATHK                                                  75
      EQUIVALENCE (BANK_ISBG(9),ISBG_SENSATHK,RE_ISBG_SENSATHK),          75
     *(NAMES_ISBG(7),NISBG_SENSATHK)                                      75
      EQUIVALENCE (COMMEN_ISBG(7),CISBG_SENSATHK),(MAP_ISBG(1,7),         75
     *MISBG_SENSATHK)                                                     75
      CHARACTER CISBG_SENSATHK*40/' '/                                    75
      CHARACTER NISBG_SENSATHK*12/'R.SENSATHK'/                           75
      INTEGER MISBG_SENSATHK(2)/1,1/                                      75
      REAL RE_ISBG_SENSATHK                                               75
C -                                                                       75
      REAL ISBG_SPACING                                                   75
      EQUIVALENCE (BANK_ISBG(10),ISBG_SPACING,RE_ISBG_SPACING),           75
     *(NAMES_ISBG(8),NISBG_SPACING)                                       75
      EQUIVALENCE (COMMEN_ISBG(8),CISBG_SPACING),(MAP_ISBG(1,8),          75
     *MISBG_SPACING)                                                      75
      CHARACTER CISBG_SPACING*40/' '/                                     75
      CHARACTER NISBG_SPACING*12/'R.SPACING'/                             75
      INTEGER MISBG_SPACING(2)/1,1/                                       75
      REAL RE_ISBG_SPACING                                                75
C -                                                                       75
      REAL ISBG_SENSORWIDTH                                               75
      EQUIVALENCE (BANK_ISBG(11),ISBG_SENSORWIDTH,RE_ISBG_SENSORWIDTH),   75
     *(NAMES_ISBG(9),NISBG_SENSORWIDTH)                                   75
      EQUIVALENCE (COMMEN_ISBG(9),CISBG_SENSORWIDTH),(MAP_ISBG(1,9),      75
     *MISBG_SENSORWIDTH)                                                  75
      CHARACTER CISBG_SENSORWIDTH*40/' '/                                 75
      CHARACTER NISBG_SENSORWIDTH*12/'R.SENSORWIDTH'/                     75
      INTEGER MISBG_SENSORWIDTH(2)/1,1/                                   75
      REAL RE_ISBG_SENSORWIDTH                                            75
C -                                                                       75
      REAL ISBG_SENSORTHK                                                 75
      EQUIVALENCE (BANK_ISBG(12),ISBG_SENSORTHK,RE_ISBG_SENSORTHK),       75
     *(NAMES_ISBG(10),NISBG_SENSORTHK)                                    75
      EQUIVALENCE (COMMEN_ISBG(10),CISBG_SENSORTHK),(MAP_ISBG(1,10),      75
     *MISBG_SENSORTHK)                                                    75
      CHARACTER CISBG_SENSORTHK*40/' '/                                   75
      CHARACTER NISBG_SENSORTHK*12/'R.SENSORTHK'/                         75
      INTEGER MISBG_SENSORTHK(2)/1,1/                                     75
      REAL RE_ISBG_SENSORTHK                                              75
C -                                                                       75
      REAL ISBG_SENSORLNGTH                                               75
      EQUIVALENCE (BANK_ISBG(13),ISBG_SENSORLNGTH,RE_ISBG_SENSORLNGTH),   75
     *(NAMES_ISBG(11),NISBG_SENSORLNGTH)                                  75
      EQUIVALENCE (COMMEN_ISBG(11),CISBG_SENSORLNGTH),(MAP_ISBG(1,11),    75
     *MISBG_SENSORLNGTH)                                                  75
      CHARACTER CISBG_SENSORLNGTH*40/' '/                                 75
      CHARACTER NISBG_SENSORLNGTH*12/'R.SENSORLNGTH'/                     75
      INTEGER MISBG_SENSORLNGTH(2)/1,1/                                   75
      REAL RE_ISBG_SENSORLNGTH                                            75
C -                                                                       75
      REAL ISBG_R                                                         75
      EQUIVALENCE (BANK_ISBG(14),ISBG_R,RE_ISBG_R),(NAMES_ISBG(12),       75
     *NISBG_R)                                                            75
      EQUIVALENCE (COMMEN_ISBG(12),CISBG_R),(MAP_ISBG(1,12),MISBG_R)      75
      CHARACTER CISBG_R*40/' '/                                           75
      CHARACTER NISBG_R*12/'R.R'/                                         75
      INTEGER MISBG_R(2)/1,1/                                             75
      REAL RE_ISBG_R                                                      75
C -                                                                       75
      REAL ISBG_A                                                         75
      EQUIVALENCE (BANK_ISBG(15),ISBG_A,RE_ISBG_A),(NAMES_ISBG(13),       75
     *NISBG_A)                                                            75
      EQUIVALENCE (COMMEN_ISBG(13),CISBG_A),(MAP_ISBG(1,13),MISBG_A)      75
      CHARACTER CISBG_A*40/' '/                                           75
      CHARACTER NISBG_A*12/'R.A'/                                         75
      INTEGER MISBG_A(2)/1,1/                                             75
      REAL RE_ISBG_A                                                      75
C -                                                                       75
      REAL ISBG_PPAROFFSET                                                75
      EQUIVALENCE (BANK_ISBG(16),ISBG_PPAROFFSET,RE_ISBG_PPAROFFSET),     75
     *(NAMES_ISBG(14),NISBG_PPAROFFSET)                                   75
      EQUIVALENCE (COMMEN_ISBG(14),CISBG_PPAROFFSET),(MAP_ISBG(1,14),     75
     *MISBG_PPAROFFSET)                                                   75
      CHARACTER CISBG_PPAROFFSET*40/' '/                                  75
      CHARACTER NISBG_PPAROFFSET*12/'R.PPAROFFSET'/                       75
      INTEGER MISBG_PPAROFFSET(2)/1,1/                                    75
      REAL RE_ISBG_PPAROFFSET                                             75
C -                                                                       75
      REAL ISBG_PPEROFFSET                                                75
      EQUIVALENCE (BANK_ISBG(17),ISBG_PPEROFFSET,RE_ISBG_PPEROFFSET),     75
     *(NAMES_ISBG(15),NISBG_PPEROFFSET)                                   75
      EQUIVALENCE (COMMEN_ISBG(15),CISBG_PPEROFFSET),(MAP_ISBG(1,15),     75
     *MISBG_PPEROFFSET)                                                   75
      CHARACTER CISBG_PPEROFFSET*40/' '/                                  75
      CHARACTER NISBG_PPEROFFSET*12/'R.PPEROFFSET'/                       75
      INTEGER MISBG_PPEROFFSET(2)/1,1/                                    75
      REAL RE_ISBG_PPEROFFSET                                             75
C -                                                                       75
      REAL ISBG_AOFFSET                                                   75
      EQUIVALENCE (BANK_ISBG(18),ISBG_AOFFSET,RE_ISBG_AOFFSET),           75
     *(NAMES_ISBG(16),NISBG_AOFFSET)                                      75
      EQUIVALENCE (COMMEN_ISBG(16),CISBG_AOFFSET),(MAP_ISBG(1,16),        75
     *MISBG_AOFFSET)                                                      75
      CHARACTER CISBG_AOFFSET*40/' '/                                     75
      CHARACTER NISBG_AOFFSET*12/'R.AOFFSET'/                             75
      INTEGER MISBG_AOFFSET(2)/1,1/                                       75
      REAL RE_ISBG_AOFFSET                                                75
C -                                                                       75
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                75
      PARAMETER (LEN_ISBG=18)                                             75
      PARAMETER (LLEN_ISBG=16)                                            75
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           75
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        75
      DATA IDNUM_ISBG/10*0/                                               75
      REAL BANK_ISBG(LEN_ISBG)                                            75
      CHARACTER*60 BPATH_ISBG/' '/                                        75
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          75
     *BPATH_ISBG                                                          75
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             75
C *                                                                       75
C -                                                                       77
      REAL ISAN_VERSION                                                   77
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            77
     *(NAMES_ISAN(1),NISAN_VERSION)                                       77
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          77
     *MISAN_VERSION)                                                      77
      CHARACTER CISAN_VERSION*40/' '/                                     77
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             77
      INTEGER MISAN_VERSION(2)/1,1/                                       77
      REAL RE_ISAN_VERSION                                                77
C -                                                                       77
      REAL ISAN_THK                                                       77
      EQUIVALENCE (BANK_ISAN(4),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(2),     77
     *NISAN_THK)                                                          77
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_THK),(MAP_ISAN(1,2),MISAN_THK)    77
      CHARACTER CISAN_THK*40/' '/                                         77
      CHARACTER NISAN_THK*12/'R.THK'/                                     77
      INTEGER MISAN_THK(2)/1,1/                                           77
      REAL RE_ISAN_THK                                                    77
C -                                                                       77
      REAL ISAN_LENGTH                                                    77
      EQUIVALENCE (BANK_ISAN(5),ISAN_LENGTH,RE_ISAN_LENGTH),              77
     *(NAMES_ISAN(3),NISAN_LENGTH)                                        77
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_LENGTH),(MAP_ISAN(1,3),           77
     *MISAN_LENGTH)                                                       77
      CHARACTER CISAN_LENGTH*40/' '/                                      77
      CHARACTER NISAN_LENGTH*12/'R.LENGTH'/                               77
      INTEGER MISAN_LENGTH(2)/1,1/                                        77
      REAL RE_ISAN_LENGTH                                                 77
C -                                                                       77
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                77
      PARAMETER (LEN_ISAN=5)                                              77
      PARAMETER (LLEN_ISAN=3)                                             77
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           77
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        77
      DATA IDNUM_ISAN/10*0/                                               77
      REAL BANK_ISAN(LEN_ISAN)                                            77
      CHARACTER*60 BPATH_ISAN/' '/                                        77
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          77
     *BPATH_ISAN                                                          77
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             77
C *                                                                       77
C -                                                                       78
      REAL ISCG_NUMMER                                                    78
      EQUIVALENCE (BANK_ISCG(3),ISCG_NUMMER,RE_ISCG_NUMMER),              78
     *(NAMES_ISCG(1),NISCG_NUMMER)                                        78
      EQUIVALENCE (COMMEN_ISCG(1),CISCG_NUMMER),(MAP_ISCG(1,1),           78
     *MISCG_NUMMER)                                                       78
      CHARACTER CISCG_NUMMER*40/' '/                                      78
      CHARACTER NISCG_NUMMER*12/'R.NUMMER'/                               78
      INTEGER MISCG_NUMMER(2)/1,1/                                        78
      REAL RE_ISCG_NUMMER                                                 78
C -                                                                       78
      REAL ISCG_W                                                         78
      EQUIVALENCE (BANK_ISCG(4),ISCG_W,RE_ISCG_W),(NAMES_ISCG(2),         78
     *NISCG_W)                                                            78
      EQUIVALENCE (COMMEN_ISCG(2),CISCG_W),(MAP_ISCG(1,2),MISCG_W)        78
      CHARACTER CISCG_W*40/' '/                                           78
      CHARACTER NISCG_W*12/'R.W'/                                         78
      INTEGER MISCG_W(2)/1,1/                                             78
      REAL RE_ISCG_W                                                      78
C -                                                                       78
      REAL ISCG_H                                                         78
      EQUIVALENCE (BANK_ISCG(5),ISCG_H,RE_ISCG_H),(NAMES_ISCG(3),         78
     *NISCG_H)                                                            78
      EQUIVALENCE (COMMEN_ISCG(3),CISCG_H),(MAP_ISCG(1,3),MISCG_H)        78
      CHARACTER CISCG_H*40/' '/                                           78
      CHARACTER NISCG_H*12/'R.H'/                                         78
      INTEGER MISCG_H(2)/1,1/                                             78
      REAL RE_ISCG_H                                                      78
C -                                                                       78
      REAL ISCG_THK                                                       78
      EQUIVALENCE (BANK_ISCG(6),ISCG_THK,RE_ISCG_THK),(NAMES_ISCG(4),     78
     *NISCG_THK)                                                          78
      EQUIVALENCE (COMMEN_ISCG(4),CISCG_THK),(MAP_ISCG(1,4),MISCG_THK)    78
      CHARACTER CISCG_THK*40/' '/                                         78
      CHARACTER NISCG_THK*12/'R.THK'/                                     78
      INTEGER MISCG_THK(2)/1,1/                                           78
      REAL RE_ISCG_THK                                                    78
C -                                                                       78
      INTEGER LEN_ISCG,LLEN_ISCG,LINK_ISCG                                78
      PARAMETER (LEN_ISCG=6)                                              78
      PARAMETER (LLEN_ISCG=4)                                             78
      INTEGER FLAG_ISCG/0/,MAP_ISCG(2,LLEN_ISCG),IDNUM_ISCG(10)           78
      CHARACTER NAMES_ISCG(LLEN_ISCG)*12,COMMEN_ISCG(LLEN_ISCG)*40        78
      DATA IDNUM_ISCG/10*0/                                               78
      REAL BANK_ISCG(LEN_ISCG)                                            78
      CHARACTER*60 BPATH_ISCG/' '/                                        78
      SAVE FLAG_ISCG,MAP_ISCG,IDNUM_ISCG,NAMES_ISCG,COMMEN_ISCG,          78
     *BPATH_ISCG                                                          78
      DATA LINK_ISCG/0/,BANK_ISCG/LEN_ISCG*0/                             78
C *                                                                       78
C -                                                                       80
      REAL ISWG_VERSION                                                   80
      EQUIVALENCE (BANK_ISWG(3),ISWG_VERSION,RE_ISWG_VERSION),            80
     *(NAMES_ISWG(1),NISWG_VERSION)                                       80
      EQUIVALENCE (COMMEN_ISWG(1),CISWG_VERSION),(MAP_ISWG(1,1),          80
     *MISWG_VERSION)                                                      80
      CHARACTER CISWG_VERSION*40/' '/                                     80
      CHARACTER NISWG_VERSION*12/'R.VERSION'/                             80
      INTEGER MISWG_VERSION(2)/1,1/                                       80
      REAL RE_ISWG_VERSION                                                80
C -                                                                       80
      REAL ISWG_DX                                                        80
      EQUIVALENCE (BANK_ISWG(4),ISWG_DX,RE_ISWG_DX),(NAMES_ISWG(2),       80
     *NISWG_DX)                                                           80
      EQUIVALENCE (COMMEN_ISWG(2),CISWG_DX),(MAP_ISWG(1,2),MISWG_DX)      80
      CHARACTER CISWG_DX*40/' '/                                          80
      CHARACTER NISWG_DX*12/'R.DX'/                                       80
      INTEGER MISWG_DX(2)/1,1/                                            80
      REAL RE_ISWG_DX                                                     80
C -                                                                       80
      REAL ISWG_DY                                                        80
      EQUIVALENCE (BANK_ISWG(5),ISWG_DY,RE_ISWG_DY),(NAMES_ISWG(3),       80
     *NISWG_DY)                                                           80
      EQUIVALENCE (COMMEN_ISWG(3),CISWG_DY),(MAP_ISWG(1,3),MISWG_DY)      80
      CHARACTER CISWG_DY*40/' '/                                          80
      CHARACTER NISWG_DY*12/'R.DY'/                                       80
      INTEGER MISWG_DY(2)/1,1/                                            80
      REAL RE_ISWG_DY                                                     80
C -                                                                       80
      REAL ISWG_WALLTHK                                                   80
      EQUIVALENCE (BANK_ISWG(6),ISWG_WALLTHK,RE_ISWG_WALLTHK),            80
     *(NAMES_ISWG(4),NISWG_WALLTHK)                                       80
      EQUIVALENCE (COMMEN_ISWG(4),CISWG_WALLTHK),(MAP_ISWG(1,4),          80
     *MISWG_WALLTHK)                                                      80
      CHARACTER CISWG_WALLTHK*40/' '/                                     80
      CHARACTER NISWG_WALLTHK*12/'R.WALLTHK'/                             80
      INTEGER MISWG_WALLTHK(2)/1,1/                                       80
      REAL RE_ISWG_WALLTHK                                                80
C -                                                                       80
      INTEGER LEN_ISWG,LLEN_ISWG,LINK_ISWG                                80
      PARAMETER (LEN_ISWG=6)                                              80
      PARAMETER (LLEN_ISWG=4)                                             80
      INTEGER FLAG_ISWG/0/,MAP_ISWG(2,LLEN_ISWG),IDNUM_ISWG(10)           80
      CHARACTER NAMES_ISWG(LLEN_ISWG)*12,COMMEN_ISWG(LLEN_ISWG)*40        80
      DATA IDNUM_ISWG/10*0/                                               80
      REAL BANK_ISWG(LEN_ISWG)                                            80
      CHARACTER*60 BPATH_ISWG/' '/                                        80
      SAVE FLAG_ISWG,MAP_ISWG,IDNUM_ISWG,NAMES_ISWG,COMMEN_ISWG,          80
     *BPATH_ISWG                                                          80
      DATA LINK_ISWG/0/,BANK_ISWG/LEN_ISWG*0/                             80
C *                                                                       80
* -------------------------------------------------------
C *                                                                       83
      CALL AGSBEGM(MODULE,IPRIN)                                          83
      IF (IPRIN.LT.0) RETURN                                              83
C Filling bank ISMG - MOTHER VOLUME DATA                                  83
      BANK_TITLE='MOTHER VOLUME DATA'                                     83
      BPATH_ISMG='ISMG*'                                                  83
      IDNUM_ISMG(1)=0                                                     84
C VERSION                                                                 84
      ISMG_VERSION=1                                                      84
      CISMG_VERSION='VERSION'                                             84
C INNER RADIUS                                                            85
      ISMG_RIN=6.0                                                        85
      CISMG_RIN='INNER RADIUS'                                            85
C OUTER RADIUS                                                            86
      ISMG_ROUT=20.0                                                      86
      CISMG_ROUT='OUTER RADIUS'                                           86
C OVERAL LENGTH OF THE DETECTOR                                           87
      ISMG_TOTALLENGTH=52.0                                               87
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE DETECTOR'                   87
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    88
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           88
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   88
C *                                                                       88
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    88
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           88
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   88
*--------------------------------------------------------
C *                                                                       90
      CALL AGSBEGM(MODULE,IPRIN)                                          90
      IF (IPRIN.LT.0) RETURN                                              90
C Filling bank ISBG - INNER SILICON TRACKER DATA                          90
      BANK_TITLE='INNER SILICON TRACKER DATA'                             90
      BPATH_ISBG='ISBG*'                                                  90
      IDNUM_ISBG(1)=0                                                     91
C LAYER INDEX                                                             91
      ISBG_LAYER=1                                                        91
      CISBG_LAYER='LAYER INDEX'                                           91
C LADDER COUNT                                                            92
      ISBG_NLADDER=11                                                     92
      CISBG_NLADDER='LADDER COUNT'                                        92
C SENSOR UNITS PER LADDER                                                 93
      ISBG_NUNIT=7                                                        93
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               93
C OVERAL LENGTH OF THE DETECTOR                                           94
      ISBG_LENGTH=28.0                                                    94
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        94
C LADDER WIDTH                                                            96
      ISBG_LADDERWIDTH=7.0                                                96
      CISBG_LADDERWIDTH='LADDER WIDTH'                                    96
C INCLUDES SENSOR ASSEMBLY AND 2 WATER DUCTS                              97
      ISBG_LADDERTHK=1.0762                                               97
      CISBG_LADDERTHK='INCLUDES SENSOR ASSEMBLY AND 2 WATER DUCTS'        97
C INCLUDES TWO LAYERS OF SI, ALN PLATES AND CHIPS                         98
      ISBG_SENSATHK=0.3686                                                98
      CISBG_SENSATHK='INCLUDES TWO LAYERS OF SI, ALN PLATES AND CHIPS'    98
C SPACING BETWEEN THE WAFERS                                              100
      ISBG_SPACING=0.1686                                                 100
      CISBG_SPACING='SPACING BETWEEN THE WAFERS'                          100
C SENSOR WIDTH                                                            102
      ISBG_SENSORWIDTH=4.0                                                102
      CISBG_SENSORWIDTH='SENSOR WIDTH'                                    102
C SENSOR LENGTH                                                           103
      ISBG_SENSORLNGTH=4.0                                                103
      CISBG_SENSORLNGTH='SENSOR LENGTH'                                   103
C SENSOR THICKNESS                                                        104
      ISBG_SENSORTHK=0.0300                                               104
      CISBG_SENSORTHK='SENSOR THICKNESS'                                  104
C 1ST LADDER NOMINAL RADIUS                                               106
      ISBG_R=7.0                                                          106
      CISBG_R='1ST LADDER NOMINAL RADIUS'                                 106
C 1ST LADDER NOMINAL POSITION ANGLE                                       107
      ISBG_A=0.0                                                          107
      CISBG_A='1ST LADDER NOMINAL POSITION ANGLE'                         107
C ANGULAR OFFSET                                                          108
      ISBG_AOFFSET=81.0                                                   108
      CISBG_AOFFSET='ANGULAR OFFSET'                                      108
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    109
      ISBG_PPAROFFSET=1.5                                                 109
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  109
     *DULE'                                                               109
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               110
      ISBG_PPEROFFSET=0.238                                               110
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  110
     *HE MODULE'                                                          110
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    111
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           111
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   111
C *                                                                       111
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    111
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           111
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   111
C *                                                                       113
      CALL AGSBEGM(MODULE,IPRIN)                                          113
      IF (IPRIN.LT.0) RETURN                                              113
C Filling bank ISBG - INNER SILICON TRACKER DATA                          113
      BANK_TITLE='INNER SILICON TRACKER DATA'                             113
      BPATH_ISBG='ISBG*'                                                  113
      IDNUM_ISBG(1)=0                                                     114
C LAYER INDEX                                                             114
      ISBG_LAYER=2                                                        114
      CISBG_LAYER='LAYER INDEX'                                           114
C LADDER COUNT                                                            115
      ISBG_NLADDER=19                                                     115
      CISBG_NLADDER='LADDER COUNT'                                        115
C SENSOR UNITS PER LADDER                                                 116
      ISBG_NUNIT=10                                                       116
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               116
C OVERAL LENGTH OF THE DETECTOR                                           117
      ISBG_LENGTH=40.0                                                    117
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        117
C 2ND LADDER NOMINAL RADIUS                                               119
      ISBG_R=12.0                                                         119
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 119
C 2ND LADDER NOMINAL POSITION ANGLE                                       120
      ISBG_A=0.0                                                          120
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         120
C ANGULAR OFFSET                                                          121
      ISBG_AOFFSET=81.0                                                   121
      CISBG_AOFFSET='ANGULAR OFFSET'                                      121
C POSITION OFFSET (SHIFT)                                                 122
      ISBG_PPAROFFSET=1.5                                                 122
      CISBG_PPAROFFSET='POSITION OFFSET (SHIFT)'                          122
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               123
      ISBG_PPEROFFSET=0.238                                               123
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  123
     *HE MODULE'                                                          123
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    124
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           124
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   124
C *                                                                       124
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    124
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           124
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   124
C *                                                                       126
      CALL AGSBEGM(MODULE,IPRIN)                                          126
      IF (IPRIN.LT.0) RETURN                                              126
C Filling bank ISBG - INNER SILICON TRACKER DATA                          126
      BANK_TITLE='INNER SILICON TRACKER DATA'                             126
      BPATH_ISBG='ISBG*'                                                  126
      IDNUM_ISBG(1)=0                                                     127
C LAYER INDEX                                                             127
      ISBG_LAYER=3                                                        127
      CISBG_LAYER='LAYER INDEX'                                           127
C LADDER COUNT                                                            128
      ISBG_NLADDER=27                                                     128
      CISBG_NLADDER='LADDER COUNT'                                        128
C SENSOR UNITS PER LADDER                                                 129
      ISBG_NUNIT=13                                                       129
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               129
C OVERAL LENGTH OF THE DETECTOR                                           130
      ISBG_LENGTH=52.0                                                    130
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        130
C 2ND LADDER NOMINAL RADIUS                                               132
      ISBG_R=17.0                                                         132
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 132
C 2ND LADDER NOMINAL POSITION ANGLE                                       133
      ISBG_A=0.0                                                          133
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         133
C ANGULAR OFFSET                                                          134
      ISBG_AOFFSET=81.0                                                   134
      CISBG_AOFFSET='ANGULAR OFFSET'                                      134
C POSITION OFFSET (SHIFT)                                                 135
      ISBG_PPAROFFSET=1.5                                                 135
      CISBG_PPAROFFSET='POSITION OFFSET (SHIFT)'                          135
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               136
      ISBG_PPEROFFSET=0.238                                               136
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  136
     *HE MODULE'                                                          136
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    137
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           137
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   137
C *                                                                       137
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    137
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           137
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   137
*--------------------------------------------------------
C *                                                                       139
      CALL AGSBEGM(MODULE,IPRIN)                                          139
      IF (IPRIN.LT.0) RETURN                                              139
C Filling bank ISAN - ALUMINUM NITRIDE THERMAL PLATE                      139
      BANK_TITLE='ALUMINUM NITRIDE THERMAL PLATE'                         139
      BPATH_ISAN='ISAN*'                                                  139
      IDNUM_ISAN(1)=0                                                     140
C MAY HAVE A FEW                                                          140
      ISAN_VERSION=1                                                      140
      CISAN_VERSION='MAY HAVE A FEW'                                      140
C ALN THICKNESS                                                           141
      ISAN_THK=0.0762                                                     141
      CISAN_THK='ALN THICKNESS'                                           141
C ALN LENGTH                                                              142
      ISAN_LENGTH=3.0                                                     142
      CISAN_LENGTH='ALN LENGTH'                                           142
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    143
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           143
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   143
C *                                                                       143
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    143
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           143
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   143
C *                                                                       145
      CALL AGSBEGM(MODULE,IPRIN)                                          145
      IF (IPRIN.LT.0) RETURN                                              145
C Filling bank ISAN - ALUMINUM NITRIDE SUBSTRATE PLATES                   145
      BANK_TITLE='ALUMINUM NITRIDE SUBSTRATE PLATES'                      145
      BPATH_ISAN='ISAN*'                                                  145
      IDNUM_ISAN(1)=0                                                     146
C MAY HAVE A FEW                                                          146
      ISAN_VERSION=2                                                      146
      CISAN_VERSION='MAY HAVE A FEW'                                      146
C ALN THICKNESS                                                           147
      ISAN_THK=0.0762                                                     147
      CISAN_THK='ALN THICKNESS'                                           147
C ALN LENGTH                                                              148
      ISAN_LENGTH=2.0                                                     148
      CISAN_LENGTH='ALN LENGTH'                                           148
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    149
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           149
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   149
C *                                                                       149
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    149
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           149
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   149
*--------------------------------------------------------
C *                                                                       152
      CALL AGSBEGM(MODULE,IPRIN)                                          152
      IF (IPRIN.LT.0) RETURN                                              152
C Filling bank ISCG - READOUT CHIP GEOMETRY, FIRST APPROX.                152
      BANK_TITLE='READOUT CHIP GEOMETRY, FIRST APPROX.'                   152
      BPATH_ISCG='ISCG*'                                                  152
      IDNUM_ISCG(1)=0                                                     153
C WE MAY HAVE A FEW DIFFERENT CHIPS                                       153
      ISCG_NUMMER=1                                                       153
      CISCG_NUMMER='WE MAY HAVE A FEW DIFFERENT CHIPS'                    153
C WIDTH                                                                   154
      ISCG_W=0.5                                                          154
      CISCG_W='WIDTH'                                                     154
C HEIGHT                                                                  155
      ISCG_H=0.5                                                          155
      CISCG_H='HEIGHT'                                                    155
C THICKNESS                                                               156
      ISCG_THK=0.07                                                       156
      CISCG_THK='THICKNESS'                                               156
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    157
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           157
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   157
C *                                                                       157
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    157
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           157
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   157
*--------------------------------------------------------
C *                                                                       160
      CALL AGSBEGM(MODULE,IPRIN)                                          160
      IF (IPRIN.LT.0) RETURN                                              160
C Filling bank ISWG - WATER DUCT GEOMETRY                                 160
      BANK_TITLE='WATER DUCT GEOMETRY'                                    160
      BPATH_ISWG='ISWG*'                                                  160
      IDNUM_ISWG(1)=0                                                     161
C VERSION                                                                 161
      ISWG_VERSION=1                                                      161
      CISWG_VERSION='VERSION'                                             161
C WIDTH                                                                   162
      ISWG_DX=1.0                                                         162
      CISWG_DX='WIDTH'                                                    162
C HEIGHT                                                                  163
      ISWG_DY=0.5                                                         163
      CISWG_DY='HEIGHT'                                                   163
C WALL THICKNESS                                                          164
      ISWG_WALLTHK=0.1                                                    164
      CISWG_WALLTHK='WALL THICKNESS'                                      164
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISWG',    165
     *BPATH_ISWG,IDNUM_ISWG,1, MAP_ISWG,NAMES_ISWG,COMMEN_ISWG,           165
     *BANK_ISWG,LEN_ISWG,LLEN_ISWG,LINK_ISWG,FLAG_ISWG)                   165
C *                                                                       165
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISWG',    165
     *BPATH_ISWG,IDNUM_ISWG,1, MAP_ISWG,NAMES_ISWG,COMMEN_ISWG,           165
     *BANK_ISWG,LEN_ISWG,LLEN_ISWG,LINK_ISWG,FLAG_ISWG)                   165
*********************************************************
*********************************************************
C use default ISMG bank                                                   169
      BPATH_ISMG='ISMG*'                                                  169
      IDNUM_ISMG(1)=0                                                     169
      CALL AGDGETP('ISTBGEO','*',-999,'ISMG',' ',BANK_ISMG, BPATH_ISMG,   169
     *IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,BANK_ISMG,LEN_ISMG,LLEN_ISMG,      169
     *LINK_ISMG,FLAG_ISMG)                                                169
      RADDEG = 3.14159265/180.0                                           170
*********************************************************
************************* MOTHER ************************
      CALL AGSBEGM(MODULE,IPRIN)                                          175
C Check IPRIN<0                                                           175
      IF (IPRIN.LT.0) RETURN                                              175
C Create IBMO :                                                           175
C Call To Local Procedure IBMO                                            175
      ASSIGN 5020 TO BLOCK_IBMO                                           175
      GO TO  5010                                                         175
5020  CONTINUE                                                            175
C *                                                                       175
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           176
      CALL AGSRESET                                                       176
      AG_MOTHER = 'CAVE'                                                  176
      AG_TITLE = 'IBMO'                                                   176
      AG_EXNAME = 'POSITION'                                              176
      AG_PARLIST = 'MOTHER'                                               176
      CALL AXPOSITION                                                     176
C *                                                                       176
* -------------------------------------------------------
      CALL AGSENDM                                                        178
      RETURN                                                              178
C Begin Local Procedure IBMO                                              178
C IBMO IS THE MOTHER OF THE ISTB DETECTOR                                 178
5010  CONTINUE                                                            178
         AG_TITLE='IBMO'                                                  178
         AG_MODULE=MODULE                                                 178
         AG_MARK='V00'                                                    178
         CALL AGSPUSH                                                     178
         AG_MODULE=MODULE                                                 178
C    *                                                                    178
C    Geant MATERIAL : AIR ===> inherited arguments used <===              179
         CALL AGSRESET                                                    179
         AG_TITLE = 'AIR'                                                 179
         AG_EXNAME = 'MATERIAL'                                           179
         AG_PARLIST = 'NONE'                                              179
         CALL AXMATERIAL                                                  179
C    *                                                                    179
C    Geant ATTRIBUTE : IBMO ===> SEEN=0 COLO=6 <===                       179
         CALL AGSRESET                                                    180
         AG_SEEN = 0                                                      180
         AG_COLO = 6                                                      180
         AG_TITLE = 'IBMO'                                                180
         AG_EXNAME = 'ATTRIBUTE'                                          180
         AG_PARLIST = 'SEEN_COLO'                                         180
         CALL AXATTRIBUTE                                                 180
C    *                                                                    180
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  184
C    LLENGTH/2.0 <===                                                     184
         CALL AGSRESET                                                    184
         AG_RMIN = ISMG_RIN                                               184
         AG_RMAX = ISMG_ROUT                                              184
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     184
         AG_TITLE = 'TUBE'                                                184
         AG_EXNAME = 'SHAPE'                                              184
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      184
         CALL AXSHAPE                                                     184
C    *                                                                    184
C    *                                                                    186
         LY=1                                                             186
            GO TO 5033                                                    186
5031        LY=LY+1                                                       186
5033        IF(LY-(3).GT.0) GO TO 5032                                    186
C       A LOOP OVER LAYERS                                                186
C       use ISBG bank                                                     187
            BPATH_ISBG='ISBG*'                                            187
            IDNUM_ISBG(1)=0                                               187
            ISBG_LAYER=LY                                                 187
C       LENGTH AND OTHER PARAMETERS SPECIFIC TO THE LADDER                187
            CALL AGDGETP('ISTBGEO','*',-999,'ISBG',NISBG_LAYER,           187
     *      RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,    187
     *      BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)             187
C       *                                                                 188
            NL=1                                                          188
               GO TO 5043                                                 188
5041           NL=NL+1                                                    188
5043           IF(NL-(ISBG_NLADDER).GT.0) GO TO 5042                      188
C          INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)             188
C          BASE TILT, TO BE FURTHER CORRECTED                             190
               ANGLE = (360.0/ISBG_NLADDER)*NL                            190
*          GvN Offset perpendicular to the length of the module/ladder
*          this to move the midpoint of the sensors back on the required
*          radius after the tilting
               RLAD = ISBG_R+ISBG_PPEROFFSET                              195
*          Individual ladders can be individually tilted by using
*          the aOffset parameter (angular offset), and the pOffset
*          (position offset), which is the individual lateral
*          displacement.
               ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                     202
*          The anglePos defines the POSITION of the center of the ladder
*          in space, along the lines of x=r*cos(...), y=r*sin(...)
*          have to correct and convert to radians:
C          SEE ABOVE COMMENT                                              208
               ANGLEPOS = ANGLE*RADDEG - ANGLECORR                        208
               TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                   209
C          Create IBAM :                                                  211
C          Call To Local Procedure IBAM                                   211
               ASSIGN 5060 TO BLOCK_IBAM                                  211
               GO TO  5050                                                211
5060           CONTINUE                                                   211
C          *                                                              211
C          Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(  215
C          ANGLEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===             215
               CALL AGSRESET                                              215
               AG_X = TRUER*COS(ANGLEPOS)                                 215
               AG_Y = TRUER*SIN(ANGLEPOS)                                 215
               AG_Z = 0.0                                                 215
               AG_ALPHAN=AG_ALPHAN+1                                      215
               AG_ALPHAK(AG_ALPHAN)=3                                     215
               AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                    215
               AG_TITLE = 'IBAM'                                          215
               AG_EXNAME = 'POSITION'                                     215
               AG_PARLIST = 'X_Y_Z_ALPHAZ'                                215
               CALL AXPOSITION                                            215
C          *                                                              215
            GO TO 5041                                                    217
5042        CONTINUE                                                      217
         GO TO 5031                                                       218
5032     CONTINUE                                                         218
5011  CALL AGSPOPB                                                        220
      GO TO BLOCK_IBMO, (5010 ,5020)                                      220
C End of Local Procedure                                                  220
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              222
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             222
5050  CONTINUE                                                            222
         AG_TITLE='IBAM'                                                  222
         AG_MODULE=MODULE                                                 222
         AG_MARK='V00'                                                    222
         CALL AGSPUSH                                                     222
         AG_MODULE=MODULE                                                 222
C    *                                                                    222
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=1 <===                       223
         CALL AGSRESET                                                    223
         AG_SEEN = 0                                                      223
         AG_COLO = 1                                                      223
         AG_TITLE = 'IBAM'                                                223
         AG_EXNAME = 'ATTRIBUTE'                                          223
         AG_PARLIST = 'SEEN_COLO'                                         223
         CALL AXATTRIBUTE                                                 223
C    *                                                                    223
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_LADDERTHK/2.  227
C    0 DZ = ISBG_LENGTH/2.0 <===                                          227
         CALL AGSRESET                                                    227
         AG_DX = ISBG_LADDERWIDTH/2.0                                     227
         AG_DY = ISBG_LADDERTHK/2.0                                       227
         AG_DZ = ISBG_LENGTH/2.0                                          227
         AG_TITLE = 'BOX'                                                 227
         AG_EXNAME = 'SHAPE'                                              227
         AG_PARLIST = 'DX_DY_DZ'                                          227
         CALL AXSHAPE                                                     227
C    *                                                                    227
*-- Water ducts
C    Create ISWD :                                                        230
C    Call To Local Procedure ISWD                                         230
         ASSIGN 5080 TO BLOCK_ISWD                                        230
         GO TO  5070                                                      230
5080     CONTINUE                                                         230
C    *                                                                    230
C    Geant POSITION : ISWD ===> X=0.5*(ISBG_LADDERWIDTH-ISWG_DX) Y=0.5*(  232
C    ISAN_THK+ISWG_DY) <===                                               232
         CALL AGSRESET                                                    232
         AG_X = 0.5*(ISBG_LADDERWIDTH-ISWG_DX)                            232
         AG_Y = 0.5*(ISAN_THK+ISWG_DY)                                    232
         AG_TITLE = 'ISWD'                                                232
         AG_EXNAME = 'POSITION'                                           232
         AG_PARLIST = 'X_Y'                                               232
         CALL AXPOSITION                                                  232
C    *                                                                    232
C    Geant POSITION : ISWD ===> X=0.5*(ISBG_LADDERWIDTH-ISWG_DX) Y=-0.5*  232
C    (ISWG_DY+ISAN_THK) <===                                              232
         CALL AGSRESET                                                    234
         AG_X = 0.5*(ISBG_LADDERWIDTH-ISWG_DX)                            234
         AG_Y = -0.5*(ISWG_DY+ISAN_THK)                                   234
         AG_TITLE = 'ISWD'                                                234
         AG_EXNAME = 'POSITION'                                           234
         AG_PARLIST = 'X_Y'                                               234
         CALL AXPOSITION                                                  234
C    *                                                                    234
C    Create IBLM :                                                        236
C    Call To Local Procedure IBLM                                         236
         ASSIGN 5100 TO BLOCK_IBLM                                        236
         GO TO  5090                                                      236
5100     CONTINUE                                                         236
C    *                                                                    236
C    *                                                                    237
         NU=1                                                             237
            GO TO 5113                                                    237
5111        NU=NU+1                                                       237
5113        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5112                           237
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -ISBG_LENGTH/2.0+ISBG  240
C       _SENSORWIDTH*(NU-0.5) <===                                        240
            CALL AGSRESET                                                 240
            AG_X = 0.0                                                    240
            AG_Y = 0.0                                                    240
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             240
            AG_TITLE = 'IBLM'                                             240
            AG_EXNAME = 'POSITION'                                        240
            AG_PARLIST = 'X_Y_Z'                                          240
            CALL AXPOSITION                                               240
C       *                                                                 240
         GO TO 5111                                                       241
5112     CONTINUE                                                         241
5051  CALL AGSPOPB                                                        243
      GO TO BLOCK_IBAM, (5050 ,5060)                                      243
C End of Local Procedure                                                  243
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              245
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               245
5090  CONTINUE                                                            245
         AG_TITLE='IBLM'                                                  245
         AG_MODULE=MODULE                                                 245
         AG_MARK='V00'                                                    245
         CALL AGSPUSH                                                     245
         AG_MODULE=MODULE                                                 245
C    *                                                                    245
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=4 <===                       246
         CALL AGSRESET                                                    246
         AG_SEEN = 0                                                      246
         AG_COLO = 4                                                      246
         AG_TITLE = 'IBLM'                                                246
         AG_EXNAME = 'ATTRIBUTE'                                          246
         AG_PARLIST = 'SEEN_COLO'                                         246
         CALL AXATTRIBUTE                                                 246
C    *                                                                    246
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_SENSATHK/2.0  250
C     DZ = ISBG_SENSORLNGTH/2.0 <===                                      250
         CALL AGSRESET                                                    250
         AG_DX = ISBG_LADDERWIDTH/2.0                                     250
         AG_DY = ISBG_SENSATHK/2.0                                        250
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     250
         AG_TITLE = 'BOX'                                                 250
         AG_EXNAME = 'SHAPE'                                              250
         AG_PARLIST = 'DX_DY_DZ'                                          250
         CALL AXSHAPE                                                     250
C    *                                                                    250
* -- Silicon Sensor
C    Create IBSS :                                                        253
C    Call To Local Procedure IBSS                                         253
         ASSIGN 5130 TO BLOCK_IBSS                                        253
         GO TO  5120                                                      253
5130     CONTINUE                                                         253
C    *                                                                    253
C    Geant POSITION : IBSS ===> X=-0.5*(ISBG_LADDERWIDTH-ISBG_SENSORWIDT  256
C    H) Y=1.5*ISAN_THK-ISBG_SENSORTHK/2.0 Z = 0.0 <===                    256
         CALL AGSRESET                                                    256
         AG_X = -0.5*(ISBG_LADDERWIDTH-ISBG_SENSORWIDTH)                  256
         AG_Y = 1.5*ISAN_THK-ISBG_SENSORTHK/2.0                           256
         AG_Z = 0.0                                                       256
         AG_TITLE = 'IBSS'                                                256
         AG_EXNAME = 'POSITION'                                           256
         AG_PARLIST = 'X_Y_Z'                                             256
         CALL AXPOSITION                                                  256
C    *                                                                    256
C    Geant POSITION : IBSS ===> X=-0.5*(ISBG_LADDERWIDTH-ISBG_SENSORWIDT  256
C    H) Y=-1.5*ISAN_THK+ISBG_SENSORTHK/2.0 Z = 0.0 ALPHAZ = 180 <===      256
         CALL AGSRESET                                                    260
         AG_X = -0.5*(ISBG_LADDERWIDTH-ISBG_SENSORWIDTH)                  260
         AG_Y = -1.5*ISAN_THK+ISBG_SENSORTHK/2.0                          260
         AG_Z = 0.0                                                       260
         AG_ALPHAN=AG_ALPHAN+1                                            260
         AG_ALPHAK(AG_ALPHAN)=3                                           260
         AG_ALPHAL(AG_ALPHAN)=180                                         260
         AG_TITLE = 'IBSS'                                                260
         AG_EXNAME = 'POSITION'                                           260
         AG_PARLIST = 'X_Y_Z_ALPHAZ'                                      260
         CALL AXPOSITION                                                  260
C    *                                                                    260
* -- AlN plates, three of them -- central and substrate(s)
C    use ISAN bank                                                        263
         BPATH_ISAN='ISAN*'                                               263
         IDNUM_ISAN(1)=0                                                  263
         ISAN_VERSION=1                                                   263
         CALL AGDGETP('ISTBGEO','*',-999,'ISAN',NISAN_VERSION,            263
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     263
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                263
C    Create ISTP :                                                        264
C    Call To Local Procedure ISTP                                         264
         ASSIGN 5150 TO BLOCK_ISTP                                        264
         GO TO  5140                                                      264
5150     CONTINUE                                                         264
C    *                                                                    264
C    Geant POSITION : ISTP ===> X=(ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0  265
C    )+ISAN_LENGTH/2.0 <===                                               265
         CALL AGSRESET                                                    265
         AG_X = (ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0)+ISAN_LENGTH/2.0   265
         AG_TITLE = 'ISTP'                                                265
         AG_EXNAME = 'POSITION'                                           265
         AG_PARLIST = 'X'                                                 265
         CALL AXPOSITION                                                  265
C    *                                                                    265
C    use ISAN bank                                                        267
         BPATH_ISAN='ISAN*'                                               267
         IDNUM_ISAN(1)=0                                                  267
         ISAN_VERSION=2                                                   267
         CALL AGDGETP('ISTBGEO','*',-999,'ISAN',NISAN_VERSION,            267
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     267
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                267
C    Create ISTP :                                                        268
C    Call To Local Procedure ISTP                                         268
         ASSIGN 5160 TO BLOCK_ISTP                                        268
         GO TO  5140                                                      268
5160     CONTINUE                                                         268
C    *                                                                    268
C    Geant POSITION : ISTP ===> X=(ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0  270
C    )+ISAN_LENGTH/2.0 Y=ISAN_THK <===                                    270
         CALL AGSRESET                                                    270
         AG_X = (ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0)+ISAN_LENGTH/2.0   270
         AG_Y = ISAN_THK                                                  270
         AG_TITLE = 'ISTP'                                                270
         AG_EXNAME = 'POSITION'                                           270
         AG_PARLIST = 'X_Y'                                               270
         CALL AXPOSITION                                                  270
C    *                                                                    270
C    Geant POSITION : ISTP ===> X=(ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0  270
C    )+ISAN_LENGTH/2.0 Y=-ISAN_THK <===                                   270
         CALL AGSRESET                                                    272
         AG_X = (ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0)+ISAN_LENGTH/2.0   272
         AG_Y = -ISAN_THK                                                 272
         AG_TITLE = 'ISTP'                                                272
         AG_EXNAME = 'POSITION'                                           272
         AG_PARLIST = 'X_Y'                                               272
         CALL AXPOSITION                                                  272
C    *                                                                    272
* -- readout silicon chip
C    Create ISSC :                                                        275
C    Call To Local Procedure ISSC                                         275
         ASSIGN 5180 TO BLOCK_ISSC                                        275
         GO TO  5170                                                      275
5180     CONTINUE                                                         275
C    *                                                                    275
C    Geant POSITION : ISSC ===> X=(ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0  278
C    )+ISCG_W/2.0 Y=+0.5*ISCG_THK+1.5*ISAN_THK Z = 0.0 <===               278
         CALL AGSRESET                                                    278
         AG_X = (ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0)+ISCG_W/2.0        278
         AG_Y = +0.5*ISCG_THK+1.5*ISAN_THK                                278
         AG_Z = 0.0                                                       278
         AG_TITLE = 'ISSC'                                                278
         AG_EXNAME = 'POSITION'                                           278
         AG_PARLIST = 'X_Y_Z'                                             278
         CALL AXPOSITION                                                  278
C    *                                                                    278
C    Geant POSITION : ISSC ===> X=(ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0  278
C    )+ISCG_W/2.0 Y=-0.5*ISCG_THK-1.5*ISAN_THK Z = 0.0 <===               278
         CALL AGSRESET                                                    281
         AG_X = (ISBG_SENSORWIDTH-ISBG_LADDERWIDTH/2.0)+ISCG_W/2.0        281
         AG_Y = -0.5*ISCG_THK-1.5*ISAN_THK                                281
         AG_Z = 0.0                                                       281
         AG_TITLE = 'ISSC'                                                281
         AG_EXNAME = 'POSITION'                                           281
         AG_PARLIST = 'X_Y_Z'                                             281
         CALL AXPOSITION                                                  281
C    *                                                                    281
5091  CALL AGSPOPB                                                        281
      GO TO BLOCK_IBLM, (5090 ,5100)                                      282
C End of Local Procedure                                                  282
*
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              285
C IBSS IS THE SILICON SENSOR                                              285
5120  CONTINUE                                                            285
         AG_TITLE='IBSS'                                                  285
         AG_MODULE=MODULE                                                 285
         AG_MARK='V00'                                                    285
         CALL AGSPUSH                                                     285
         AG_MODULE=MODULE                                                 285
C    *                                                                    285
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          286
         CALL AGSRESET                                                    286
         AG_TITLE = 'SILICON'                                             286
         AG_EXNAME = 'MATERIAL'                                           286
         AG_PARLIST = 'NONE'                                              286
         CALL AXMATERIAL                                                  286
C    *                                                                    286
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         286
         CALL AGSRESET                                                    287
         AG_ISVOL = 1                                                     287
         AG_TITLE = 'SENSITIVE'                                           287
         AG_EXNAME = 'MATERIAL'                                           287
         AG_PARLIST = 'ISVOL'                                             287
         CALL AXMATERIAL                                                  287
C    *                                                                    287
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=2 <===                       289
         CALL AGSRESET                                                    289
         AG_SEEN = 1                                                      289
         AG_COLO = 2                                                      289
         AG_TITLE = 'IBSS'                                                289
         AG_EXNAME = 'ATTRIBUTE'                                          289
         AG_PARLIST = 'SEEN_COLO'                                         289
         CALL AXATTRIBUTE                                                 289
C    *                                                                    289
C    Geant SHAPE : BOX ===> DX=ISBG_SENSORWIDTH/2.0 DY=ISBG_SENSORTHK/2.  293
C    0 DZ = ISBG_SENSORLNGTH/2.0 <===                                     293
         CALL AGSRESET                                                    293
         AG_DX = ISBG_SENSORWIDTH/2.0                                     293
         AG_DY = ISBG_SENSORTHK/2.0                                       293
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     293
         AG_TITLE = 'BOX'                                                 293
         AG_EXNAME = 'SHAPE'                                              293
         AG_PARLIST = 'DX_DY_DZ'                                          293
         CALL AXSHAPE                                                     293
C    *                                                                    293
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  297
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  297
C    ,0.001)                                                              297
         AG_TITLE = 'IBSS'                                                297
         AG_EXNAME = 'HITS'                                               297
         AG_TYPE=AG_MAGIC                                                 297
         CALL AGSDETV('IBSS')                                             297
C    *                                                                    297
         AG_PARLIST='Z'                                                   297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = AG_MAGIC                                              297
         AG_BIN=.001                                                      297
         AG_OPTION='S'                                                    297
         AG_FHMIN = AG_MAGIC                                              297
         AG_FHMAX = AG_MAGIC                                              297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='Y'                                                   297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = AG_MAGIC                                              297
         AG_BIN=.001                                                      297
         AG_FHMIN=AG_MAGIC                                                297
         AG_FHMAX=AG_MAGIC                                                297
         AG_OPTION='*'                                                    297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='X'                                                   297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = AG_MAGIC                                              297
         AG_BIN=.001                                                      297
         AG_FHMIN=AG_MAGIC                                                297
         AG_FHMAX=AG_MAGIC                                                297
         AG_OPTION='*'                                                    297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='PTOT'                                                297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = 16                                                    297
         AG_BIN=AG_MAGIC                                                  297
         AG_OPTION='*'                                                    297
         AG_FHMIN = 0                                                     297
         AG_FHMAX = 100                                                   297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='CX'                                                  297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = 10                                                    297
         AG_BIN=AG_MAGIC                                                  297
         AG_FHMIN=AG_MAGIC                                                297
         AG_FHMAX=AG_MAGIC                                                297
         AG_OPTION='*'                                                    297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='CY'                                                  297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = 10                                                    297
         AG_BIN=AG_MAGIC                                                  297
         AG_FHMIN=AG_MAGIC                                                297
         AG_FHMAX=AG_MAGIC                                                297
         AG_OPTION='*'                                                    297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='CZ'                                                  297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = 10                                                    297
         AG_BIN=AG_MAGIC                                                  297
         AG_FHMIN=AG_MAGIC                                                297
         AG_FHMAX=AG_MAGIC                                                297
         AG_OPTION='*'                                                    297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='SLENG'                                               297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = 16                                                    297
         AG_BIN=AG_MAGIC                                                  297
         AG_OPTION='*'                                                    297
         AG_FHMIN = 0                                                     297
         AG_FHMAX = 500                                                   297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='TOF'                                                 297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = 16                                                    297
         AG_BIN=AG_MAGIC                                                  297
         AG_OPTION='*'                                                    297
         AG_FHMIN = 0                                                     297
         AG_FHMAX = 1.E-6                                                 297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='STEP'                                                297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = AG_MAGIC                                              297
         AG_BIN=.01                                                       297
         AG_FHMIN=AG_MAGIC                                                297
         AG_FHMAX=AG_MAGIC                                                297
         AG_OPTION='*'                                                    297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         AG_PARLIST='ELOSS'                                               297
         AG_TITLE = 'DETH'                                                297
         AG_NBITS = 16                                                    297
         AG_BIN=AG_MAGIC                                                  297
         AG_OPTION='*'                                                    297
         AG_FHMIN = 0                                                     297
         AG_FHMAX = 0.001                                                 297
         CALL AGSDETH (0)                                                 297
C    *                                                                    297
         CALL AGSDETU('IBSS')                                             297
C    *                                                                    297
5121  CALL AGSPOPB                                                        299
      GO TO BLOCK_IBSS, (5120 ,5130)                                      299
C End of Local Procedure                                                  299
* -----------------------------------------------------------------------------
C Begin Local Procedure ISTP                                              301
C ISTP IS THE ALN THERMAL PLATE                                           301
5140  CONTINUE                                                            301
         AG_TITLE='ISTP'                                                  301
         AG_MODULE=MODULE                                                 301
         AG_MARK='V00'                                                    301
         CALL AGSPUSH                                                     301
         AG_MODULE=MODULE                                                 301
C    *                                                                    301
C    Geant ATTRIBUTE : ISTP ===> SEEN=1 COLO=6 <===                       302
         CALL AGSRESET                                                    302
         AG_SEEN = 1                                                      302
         AG_COLO = 6                                                      302
         AG_TITLE = 'ISTP'                                                302
         AG_EXNAME = 'ATTRIBUTE'                                          302
         AG_PARLIST = 'SEEN_COLO'                                         302
         CALL AXATTRIBUTE                                                 302
C    *                                                                    302
C    Geant COMPONENT : AL ===> A=27 Z=13 W=1 <===                         304
         CALL AGSRESET                                                    304
         AG_A = 27                                                        304
         AG_Z = 13                                                        304
         AG_W = 1                                                         304
         AG_TITLE = 'AL'                                                  304
         AG_EXNAME = 'COMPONENT'                                          304
         AG_PARLIST = 'A_Z_W'                                             304
         CALL AXCOMPONENT                                                 304
C    *                                                                    304
C    Geant COMPONENT : N ===> A=14 Z=7 W=1 <===                           304
         CALL AGSRESET                                                    305
         AG_A = 14                                                        305
         AG_Z = 7                                                         305
         AG_W = 1                                                         305
         AG_TITLE = 'N'                                                   305
         AG_EXNAME = 'COMPONENT'                                          305
         AG_PARLIST = 'A_Z_W'                                             305
         CALL AXCOMPONENT                                                 305
C    *                                                                    305
C    Geant MIXTURE : ALN ===> DENS=3.30 <===                              305
         CALL AGSRESET                                                    306
         AG_DENS = 3.30                                                   306
         AG_TITLE = 'ALN'                                                 306
         AG_EXNAME = 'MIXTURE'                                            306
         AG_PARLIST = 'DENS'                                              306
         CALL AXMIXTURE                                                   306
C    *                                                                    306
C    Geant SHAPE : BOX ===> DX=ISAN_LENGTH/2.0 DY=ISAN_THK/2.0 DZ = ISBG  310
C    _SENSORLNGTH/2.0 <===                                                310
         CALL AGSRESET                                                    310
         AG_DX = ISAN_LENGTH/2.0                                          310
         AG_DY = ISAN_THK/2.0                                             310
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     310
         AG_TITLE = 'BOX'                                                 310
         AG_EXNAME = 'SHAPE'                                              310
         AG_PARLIST = 'DX_DY_DZ'                                          310
         CALL AXSHAPE                                                     310
C    *                                                                    310
5141  CALL AGSPOPB                                                        312
      GO TO BLOCK_ISTP, (5140 ,5150,5160)                                 312
C End of Local Procedure                                                  312
* -----------------------------------------------------------------------------
C Begin Local Procedure ISSC                                              314
C ISSC IS THE READOUT CHIP                                                314
5170  CONTINUE                                                            314
         AG_TITLE='ISSC'                                                  314
         AG_MODULE=MODULE                                                 314
         AG_MARK='V00'                                                    314
         CALL AGSPUSH                                                     314
         AG_MODULE=MODULE                                                 314
C    *                                                                    314
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          315
         CALL AGSRESET                                                    315
         AG_TITLE = 'SILICON'                                             315
         AG_EXNAME = 'MATERIAL'                                           315
         AG_PARLIST = 'NONE'                                              315
         CALL AXMATERIAL                                                  315
C    *                                                                    315
C    Geant ATTRIBUTE : ISSC ===> SEEN=1 COLO=1 <===                       315
         CALL AGSRESET                                                    316
         AG_SEEN = 1                                                      316
         AG_COLO = 1                                                      316
         AG_TITLE = 'ISSC'                                                316
         AG_EXNAME = 'ATTRIBUTE'                                          316
         AG_PARLIST = 'SEEN_COLO'                                         316
         CALL AXATTRIBUTE                                                 316
C    *                                                                    316
C    Geant SHAPE : BOX ===> DX=ISCG_W/2.0 DY=ISCG_THK/2.0 DZ = ISBG_SENS  320
C    ORLNGTH/2.0 !JUST MAKE A STRIP OVER THE WHOLE SUBSTRATE <===         320
         CALL AGSRESET                                                    320
         AG_DX = ISCG_W/2.0                                               320
         AG_DY = ISCG_THK/2.0                                             320
C    JUST MAKE A STRIP OVER THE WHOLE SUBSTRATE                           320
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     320
         AG_TITLE = 'BOX'                                                 320
         AG_EXNAME = 'SHAPE'                                              320
         AG_PARLIST = 'DX_DY_DZ'                                          320
         CALL AXSHAPE                                                     320
C    *                                                                    320
5171  CALL AGSPOPB                                                        322
      GO TO BLOCK_ISSC, (5170 ,5180)                                      322
C End of Local Procedure                                                  322
* -----------------------------------------------------------------------------
C Begin Local Procedure ISWD                                              324
C ISWD IS THE WATER DUCT MADE OF CARBON COMPOSITE                         324
5070  CONTINUE                                                            324
         AG_TITLE='ISWD'                                                  324
         AG_MODULE=MODULE                                                 324
         AG_MARK='V00'                                                    324
         CALL AGSPUSH                                                     324
         AG_MODULE=MODULE                                                 324
C    *                                                                    324
C    Geant MATERIAL : CARBON ===> inherited arguments used <===           325
         CALL AGSRESET                                                    325
         AG_TITLE = 'CARBON'                                              325
         AG_EXNAME = 'MATERIAL'                                           325
         AG_PARLIST = 'NONE'                                              325
         CALL AXMATERIAL                                                  325
C    *                                                                    325
C    Geant ATTRIBUTE : ISWD ===> SEEN=1 COLO=1 <===                       325
         CALL AGSRESET                                                    326
         AG_SEEN = 1                                                      326
         AG_COLO = 1                                                      326
         AG_TITLE = 'ISWD'                                                326
         AG_EXNAME = 'ATTRIBUTE'                                          326
         AG_PARLIST = 'SEEN_COLO'                                         326
         CALL AXATTRIBUTE                                                 326
C    *                                                                    326
C    Geant SHAPE : BOX ===> DX=ISWG_DX/2.0 DY=ISWG_DY/2.0 DZ = (ISBG_LEN  330
C    GTH)/2.0 <===                                                        330
         CALL AGSRESET                                                    330
         AG_DX = ISWG_DX/2.0                                              330
         AG_DY = ISWG_DY/2.0                                              330
         AG_DZ = (ISBG_LENGTH)/2.0                                        330
         AG_TITLE = 'BOX'                                                 330
         AG_EXNAME = 'SHAPE'                                              330
         AG_PARLIST = 'DX_DY_DZ'                                          330
         CALL AXSHAPE                                                     330
C    *                                                                    330
C    Create ISVD :                                                        331
C    Call To Local Procedure ISVD                                         331
         ASSIGN 5200 TO BLOCK_ISVD                                        331
         GO TO  5190                                                      331
5200     CONTINUE                                                         331
C    *                                                                    331
C    Geant POSITION : ISVD ===> inherited arguments used <===             331
         CALL AGSRESET                                                    331
         AG_TITLE = 'ISVD'                                                331
         AG_EXNAME = 'POSITION'                                           331
         AG_PARLIST = 'NONE'                                              331
         CALL AXPOSITION                                                  331
C    *                                                                    331
5071  CALL AGSPOPB                                                        333
      GO TO BLOCK_ISWD, (5070 ,5080)                                      333
C End of Local Procedure                                                  333
* -----------------------------------------------------------------------------
C Begin Local Procedure ISVD                                              335
C ISVD IS THE WATER INSIDE THE CARBON DUCT                                335
5190  CONTINUE                                                            335
         AG_TITLE='ISVD'                                                  335
         AG_MODULE=MODULE                                                 335
         AG_MARK='V00'                                                    335
         CALL AGSPUSH                                                     335
         AG_MODULE=MODULE                                                 335
C    *                                                                    335
*     Pellegrino:
C    Geant COMPONENT : H2 ===> A=1 Z=1 W=2 <===                           337
         CALL AGSRESET                                                    337
         AG_A = 1                                                         337
         AG_Z = 1                                                         337
         AG_W = 2                                                         337
         AG_TITLE = 'H2'                                                  337
         AG_EXNAME = 'COMPONENT'                                          337
         AG_PARLIST = 'A_Z_W'                                             337
         CALL AXCOMPONENT                                                 337
C    *                                                                    337
C    Geant COMPONENT : O ===> A=16 Z=8 W=1 <===                           337
         CALL AGSRESET                                                    338
         AG_A = 16                                                        338
         AG_Z = 8                                                         338
         AG_W = 1                                                         338
         AG_TITLE = 'O'                                                   338
         AG_EXNAME = 'COMPONENT'                                          338
         AG_PARLIST = 'A_Z_W'                                             338
         CALL AXCOMPONENT                                                 338
C    *                                                                    338
C    Geant MIXTURE : WATER ===> DENS=1.0 <===                             338
         CALL AGSRESET                                                    339
         AG_DENS = 1.0                                                    339
         AG_TITLE = 'WATER'                                               339
         AG_EXNAME = 'MIXTURE'                                            339
         AG_PARLIST = 'DENS'                                              339
         CALL AXMIXTURE                                                   339
C    *                                                                    339
C    Geant ATTRIBUTE : ISVD ===> SEEN=1 COLO=3 <===                       341
         CALL AGSRESET                                                    341
         AG_SEEN = 1                                                      341
         AG_COLO = 3                                                      341
         AG_TITLE = 'ISVD'                                                341
         AG_EXNAME = 'ATTRIBUTE'                                          341
         AG_PARLIST = 'SEEN_COLO'                                         341
         CALL AXATTRIBUTE                                                 341
C    *                                                                    341
C    Geant SHAPE : BOX ===> DX=(ISWG_DX-2.0*ISWG_WALLTHK)/2.0 DY=(ISWG_D  345
C    Y-2.0*ISWG_WALLTHK)/2.0 DZ = ISBG_LENGTH/2.0 <===                    345
         CALL AGSRESET                                                    345
         AG_DX = (ISWG_DX-2.0*ISWG_WALLTHK)/2.0                           345
         AG_DY = (ISWG_DY-2.0*ISWG_WALLTHK)/2.0                           345
         AG_DZ = ISBG_LENGTH/2.0                                          345
         AG_TITLE = 'BOX'                                                 345
         AG_EXNAME = 'SHAPE'                                              345
         AG_PARLIST = 'DX_DY_DZ'                                          345
         CALL AXSHAPE                                                     345
C    *                                                                    345
5191  CALL AGSPOPB                                                        347
      GO TO BLOCK_ISVD, (5190 ,5200)                                      347
C End of Local Procedure                                                  347
* -----------------------------------------------------------------------------
      END                                                                 351
* $Id: istbgeo1.g,v 1.1 2006/10/02 21:50:18 potekhin Exp $
* $Log: istbgeo1.g,v $
* Revision 1.1  2006/10/02 21:50:18  potekhin
* A dignificantly updated version by Gerrit
*
*****************************************************************
      SUBROUTINE ISTBGEO1                                                 358
C ISTBGEO1 IS THE GEOMETRY OF THE INNER SILICON TRACKER                   358
      IMPLICIT NONE                                                       358
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       358
      DATA MODULE/'ISTBGEO1'/, BANK_TITLE/'*'/                            358
      DATA MCOMMENT/'IS THE GEOMETRY OF THE INNER SILICON TRACKER'/       358
      LOGICAL FIRST                                                       358
      DATA FIRST/.TRUE./                                                  358
      SAVE FIRST                                                          358
      INTEGER JUMPAD                                                      358
      EXTERNAL JUMPAD                                                     358
      INTEGER OK                                                          358
      PARAMETER (OK=0)                                                    358
      INTEGER AG_I,AG_J                                                   358
      SAVE AG_I,AG_J                                                      358
C CREATED 10/02/06                                                        358
      DATA AG_I/0/,AG_J/0/                                                359
      CHARACTER*40 CREATED /'10/02/06'/                                   359
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  359
C AUTHOR GERRIT VAN NIEUWENHUIZEN                                         359
      CHARACTER*40 AUTHOR /'GERRIT VAN NIEUWENHUIZEN'/                    360
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  360
*****************************************************************
C - Advanced Geant interface                                              362
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      362
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       362
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         362
     *AG_OPTION,AG_ORT,AG_MARK                                            362
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         362
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     362
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     362
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    362
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          362
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   362
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     362
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        362
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   362
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 362
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     362
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       362
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        362
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       362
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       362
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       362
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         362
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     362
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       362
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   362
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       362
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     362
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          362
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         362
     *-696969,AG_LDETU=250)                                               362
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    362
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  362
     *AG_IMFLD,AG_ISIMU                                                   362
C Inherited variables a: saved during internal calls                      362
C b: reset at the entry in a block and then saved                         362
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        362
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       362
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         362
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     362
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       362
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         362
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           362
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        362
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        362
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            362
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           362
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    362
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      362
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           362
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          362
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                362
C local variables valid inside same block                                 362
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       362
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  362
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         362
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    362
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          362
     *AG_OPTION                                                           362
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        362
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             362
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              362
C temporarly                                                              362
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           362
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    362
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       362
     *AG_HY)                                                              362
      REAL MIL_P,INCH_P                                                   362
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               362
C - GEANT description of logical units                                    362
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            362
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      362
      COMMON/GCMAIL/ CHMAIL                                               362
      CHARACTER*132 CHMAIL                                                362
* ---
      REAL ANGLE, ANGLEPOS, ANGLECORR, TRUER, RADDEG, RLAD                364
      INTEGER NL, LY, NU, CABLE                                           365
      REAL MOD_THK                                                        366
* ---
      INTEGER BLOCK_IBMO                                                  370
      INTEGER BLOCK_IBLM                                                  370
      INTEGER BLOCK_IBAM                                                  370
      INTEGER BLOCK_IBSS                                                  370
      INTEGER BLOCK_ISTP                                                  370
      INTEGER BLOCK_ISKH                                                  370
      INTEGER BLOCK_ISCL                                                  370
      INTEGER BLOCK_ISSC                                                  370
      INTEGER BLOCK_ISLA                                                  370
      INTEGER BLOCK_ISLB                                                  370
      INTEGER BLOCK_ISRI                                                  370
      INTEGER BLOCK_ISCO                                                  370
      INTEGER BLOCK_IBMY                                                  370
      INTEGER BLOCK_IBMZ                                                  370
      INTEGER BLOCK_IBMW                                                  370
      INTEGER BLOCK_IBME                                                  370
C -                                                                       372
      REAL ISMG_LAYER                                                     372
      EQUIVALENCE (BANK_ISMG(3),ISMG_LAYER,RE_ISMG_LAYER),                372
     *(NAMES_ISMG(1),NISMG_LAYER)                                         372
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_LAYER),(MAP_ISMG(1,1),            372
     *MISMG_LAYER)                                                        372
      CHARACTER CISMG_LAYER*40/' '/                                       372
      CHARACTER NISMG_LAYER*12/'R.LAYER'/                                 372
      INTEGER MISMG_LAYER(2)/1,1/                                         372
      REAL RE_ISMG_LAYER                                                  372
C -                                                                       372
      REAL ISMG_RIN                                                       372
      EQUIVALENCE (BANK_ISMG(4),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(2),     372
     *NISMG_RIN)                                                          372
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_RIN),(MAP_ISMG(1,2),MISMG_RIN)    372
      CHARACTER CISMG_RIN*40/' '/                                         372
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     372
      INTEGER MISMG_RIN(2)/1,1/                                           372
      REAL RE_ISMG_RIN                                                    372
C -                                                                       372
      REAL ISMG_ROUT                                                      372
      EQUIVALENCE (BANK_ISMG(5),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(3),   372
     *NISMG_ROUT)                                                         372
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_ROUT),(MAP_ISMG(1,3),             372
     *MISMG_ROUT)                                                         372
      CHARACTER CISMG_ROUT*40/' '/                                        372
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   372
      INTEGER MISMG_ROUT(2)/1,1/                                          372
      REAL RE_ISMG_ROUT                                                   372
C -                                                                       372
      REAL ISMG_TOTALLENGTH                                               372
      EQUIVALENCE (BANK_ISMG(6),ISMG_TOTALLENGTH,RE_ISMG_TOTALLENGTH),    372
     *(NAMES_ISMG(4),NISMG_TOTALLENGTH)                                   372
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_TOTALLENGTH),(MAP_ISMG(1,4),      372
     *MISMG_TOTALLENGTH)                                                  372
      CHARACTER CISMG_TOTALLENGTH*40/' '/                                 372
      CHARACTER NISMG_TOTALLENGTH*12/'R.TOTALLENGTH'/                     372
      INTEGER MISMG_TOTALLENGTH(2)/1,1/                                   372
      REAL RE_ISMG_TOTALLENGTH                                            372
C -                                                                       372
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                372
      PARAMETER (LEN_ISMG=6)                                              372
      PARAMETER (LLEN_ISMG=4)                                             372
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           372
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        372
      DATA IDNUM_ISMG/10*0/                                               372
      REAL BANK_ISMG(LEN_ISMG)                                            372
      CHARACTER*60 BPATH_ISMG/' '/                                        372
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          372
     *BPATH_ISMG                                                          372
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             372
C *                                                                       372
C -                                                                       376
      REAL ISBG_LAYER                                                     376
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                376
     *(NAMES_ISBG(1),NISBG_LAYER)                                         376
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            376
     *MISBG_LAYER)                                                        376
      CHARACTER CISBG_LAYER*40/' '/                                       376
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 376
      INTEGER MISBG_LAYER(2)/1,1/                                         376
      REAL RE_ISBG_LAYER                                                  376
C -                                                                       376
      REAL ISBG_NLADDER                                                   376
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            376
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       376
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          376
     *MISBG_NLADDER)                                                      376
      CHARACTER CISBG_NLADDER*40/' '/                                     376
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             376
      INTEGER MISBG_NLADDER(2)/1,1/                                       376
      REAL RE_ISBG_NLADDER                                                376
C -                                                                       376
      REAL ISBG_NUNIT                                                     376
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                376
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         376
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            376
     *MISBG_NUNIT)                                                        376
      CHARACTER CISBG_NUNIT*40/' '/                                       376
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 376
      INTEGER MISBG_NUNIT(2)/1,1/                                         376
      REAL RE_ISBG_NUNIT                                                  376
C -                                                                       376
      REAL ISBG_LENGTH                                                    376
      EQUIVALENCE (BANK_ISBG(6),ISBG_LENGTH,RE_ISBG_LENGTH),              376
     *(NAMES_ISBG(4),NISBG_LENGTH)                                        376
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_LENGTH),(MAP_ISBG(1,4),           376
     *MISBG_LENGTH)                                                       376
      CHARACTER CISBG_LENGTH*40/' '/                                      376
      CHARACTER NISBG_LENGTH*12/'R.LENGTH'/                               376
      INTEGER MISBG_LENGTH(2)/1,1/                                        376
      REAL RE_ISBG_LENGTH                                                 376
C -                                                                       376
      REAL ISBG_LADDERWIDTH                                               376
      EQUIVALENCE (BANK_ISBG(7),ISBG_LADDERWIDTH,RE_ISBG_LADDERWIDTH),    376
     *(NAMES_ISBG(5),NISBG_LADDERWIDTH)                                   376
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_LADDERWIDTH),(MAP_ISBG(1,5),      376
     *MISBG_LADDERWIDTH)                                                  376
      CHARACTER CISBG_LADDERWIDTH*40/' '/                                 376
      CHARACTER NISBG_LADDERWIDTH*12/'R.LADDERWIDTH'/                     376
      INTEGER MISBG_LADDERWIDTH(2)/1,1/                                   376
      REAL RE_ISBG_LADDERWIDTH                                            376
C -                                                                       376
      REAL ISBG_LADDERTHK                                                 376
      EQUIVALENCE (BANK_ISBG(8),ISBG_LADDERTHK,RE_ISBG_LADDERTHK),        376
     *(NAMES_ISBG(6),NISBG_LADDERTHK)                                     376
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_LADDERTHK),(MAP_ISBG(1,6),        376
     *MISBG_LADDERTHK)                                                    376
      CHARACTER CISBG_LADDERTHK*40/' '/                                   376
      CHARACTER NISBG_LADDERTHK*12/'R.LADDERTHK'/                         376
      INTEGER MISBG_LADDERTHK(2)/1,1/                                     376
      REAL RE_ISBG_LADDERTHK                                              376
C -                                                                       376
      REAL ISBG_SENSATHK                                                  376
      EQUIVALENCE (BANK_ISBG(9),ISBG_SENSATHK,RE_ISBG_SENSATHK),          376
     *(NAMES_ISBG(7),NISBG_SENSATHK)                                      376
      EQUIVALENCE (COMMEN_ISBG(7),CISBG_SENSATHK),(MAP_ISBG(1,7),         376
     *MISBG_SENSATHK)                                                     376
      CHARACTER CISBG_SENSATHK*40/' '/                                    376
      CHARACTER NISBG_SENSATHK*12/'R.SENSATHK'/                           376
      INTEGER MISBG_SENSATHK(2)/1,1/                                      376
      REAL RE_ISBG_SENSATHK                                               376
C -                                                                       376
      REAL ISBG_SPACING                                                   376
      EQUIVALENCE (BANK_ISBG(10),ISBG_SPACING,RE_ISBG_SPACING),           376
     *(NAMES_ISBG(8),NISBG_SPACING)                                       376
      EQUIVALENCE (COMMEN_ISBG(8),CISBG_SPACING),(MAP_ISBG(1,8),          376
     *MISBG_SPACING)                                                      376
      CHARACTER CISBG_SPACING*40/' '/                                     376
      CHARACTER NISBG_SPACING*12/'R.SPACING'/                             376
      INTEGER MISBG_SPACING(2)/1,1/                                       376
      REAL RE_ISBG_SPACING                                                376
C -                                                                       376
      REAL ISBG_SENSORWIDTH                                               376
      EQUIVALENCE (BANK_ISBG(11),ISBG_SENSORWIDTH,RE_ISBG_SENSORWIDTH),   376
     *(NAMES_ISBG(9),NISBG_SENSORWIDTH)                                   376
      EQUIVALENCE (COMMEN_ISBG(9),CISBG_SENSORWIDTH),(MAP_ISBG(1,9),      376
     *MISBG_SENSORWIDTH)                                                  376
      CHARACTER CISBG_SENSORWIDTH*40/' '/                                 376
      CHARACTER NISBG_SENSORWIDTH*12/'R.SENSORWIDTH'/                     376
      INTEGER MISBG_SENSORWIDTH(2)/1,1/                                   376
      REAL RE_ISBG_SENSORWIDTH                                            376
C -                                                                       376
      REAL ISBG_SENSORTHK                                                 376
      EQUIVALENCE (BANK_ISBG(12),ISBG_SENSORTHK,RE_ISBG_SENSORTHK),       376
     *(NAMES_ISBG(10),NISBG_SENSORTHK)                                    376
      EQUIVALENCE (COMMEN_ISBG(10),CISBG_SENSORTHK),(MAP_ISBG(1,10),      376
     *MISBG_SENSORTHK)                                                    376
      CHARACTER CISBG_SENSORTHK*40/' '/                                   376
      CHARACTER NISBG_SENSORTHK*12/'R.SENSORTHK'/                         376
      INTEGER MISBG_SENSORTHK(2)/1,1/                                     376
      REAL RE_ISBG_SENSORTHK                                              376
C -                                                                       376
      REAL ISBG_SENSORLNGTH                                               376
      EQUIVALENCE (BANK_ISBG(13),ISBG_SENSORLNGTH,RE_ISBG_SENSORLNGTH),   376
     *(NAMES_ISBG(11),NISBG_SENSORLNGTH)                                  376
      EQUIVALENCE (COMMEN_ISBG(11),CISBG_SENSORLNGTH),(MAP_ISBG(1,11),    376
     *MISBG_SENSORLNGTH)                                                  376
      CHARACTER CISBG_SENSORLNGTH*40/' '/                                 376
      CHARACTER NISBG_SENSORLNGTH*12/'R.SENSORLNGTH'/                     376
      INTEGER MISBG_SENSORLNGTH(2)/1,1/                                   376
      REAL RE_ISBG_SENSORLNGTH                                            376
C -                                                                       376
      REAL ISBG_R                                                         376
      EQUIVALENCE (BANK_ISBG(14),ISBG_R,RE_ISBG_R),(NAMES_ISBG(12),       376
     *NISBG_R)                                                            376
      EQUIVALENCE (COMMEN_ISBG(12),CISBG_R),(MAP_ISBG(1,12),MISBG_R)      376
      CHARACTER CISBG_R*40/' '/                                           376
      CHARACTER NISBG_R*12/'R.R'/                                         376
      INTEGER MISBG_R(2)/1,1/                                             376
      REAL RE_ISBG_R                                                      376
C -                                                                       376
      REAL ISBG_A                                                         376
      EQUIVALENCE (BANK_ISBG(15),ISBG_A,RE_ISBG_A),(NAMES_ISBG(13),       376
     *NISBG_A)                                                            376
      EQUIVALENCE (COMMEN_ISBG(13),CISBG_A),(MAP_ISBG(1,13),MISBG_A)      376
      CHARACTER CISBG_A*40/' '/                                           376
      CHARACTER NISBG_A*12/'R.A'/                                         376
      INTEGER MISBG_A(2)/1,1/                                             376
      REAL RE_ISBG_A                                                      376
C -                                                                       376
      REAL ISBG_PPAROFFSET                                                376
      EQUIVALENCE (BANK_ISBG(16),ISBG_PPAROFFSET,RE_ISBG_PPAROFFSET),     376
     *(NAMES_ISBG(14),NISBG_PPAROFFSET)                                   376
      EQUIVALENCE (COMMEN_ISBG(14),CISBG_PPAROFFSET),(MAP_ISBG(1,14),     376
     *MISBG_PPAROFFSET)                                                   376
      CHARACTER CISBG_PPAROFFSET*40/' '/                                  376
      CHARACTER NISBG_PPAROFFSET*12/'R.PPAROFFSET'/                       376
      INTEGER MISBG_PPAROFFSET(2)/1,1/                                    376
      REAL RE_ISBG_PPAROFFSET                                             376
C -                                                                       376
      REAL ISBG_PPEROFFSET                                                376
      EQUIVALENCE (BANK_ISBG(17),ISBG_PPEROFFSET,RE_ISBG_PPEROFFSET),     376
     *(NAMES_ISBG(15),NISBG_PPEROFFSET)                                   376
      EQUIVALENCE (COMMEN_ISBG(15),CISBG_PPEROFFSET),(MAP_ISBG(1,15),     376
     *MISBG_PPEROFFSET)                                                   376
      CHARACTER CISBG_PPEROFFSET*40/' '/                                  376
      CHARACTER NISBG_PPEROFFSET*12/'R.PPEROFFSET'/                       376
      INTEGER MISBG_PPEROFFSET(2)/1,1/                                    376
      REAL RE_ISBG_PPEROFFSET                                             376
C -                                                                       376
      REAL ISBG_AOFFSET                                                   376
      EQUIVALENCE (BANK_ISBG(18),ISBG_AOFFSET,RE_ISBG_AOFFSET),           376
     *(NAMES_ISBG(16),NISBG_AOFFSET)                                      376
      EQUIVALENCE (COMMEN_ISBG(16),CISBG_AOFFSET),(MAP_ISBG(1,16),        376
     *MISBG_AOFFSET)                                                      376
      CHARACTER CISBG_AOFFSET*40/' '/                                     376
      CHARACTER NISBG_AOFFSET*12/'R.AOFFSET'/                             376
      INTEGER MISBG_AOFFSET(2)/1,1/                                       376
      REAL RE_ISBG_AOFFSET                                                376
C -                                                                       376
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                376
      PARAMETER (LEN_ISBG=18)                                             376
      PARAMETER (LLEN_ISBG=16)                                            376
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           376
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        376
      DATA IDNUM_ISBG/10*0/                                               376
      REAL BANK_ISBG(LEN_ISBG)                                            376
      CHARACTER*60 BPATH_ISBG/' '/                                        376
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          376
     *BPATH_ISBG                                                          376
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             376
C *                                                                       376
C -                                                                       377
      REAL ISAN_VERSION                                                   377
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            377
     *(NAMES_ISAN(1),NISAN_VERSION)                                       377
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          377
     *MISAN_VERSION)                                                      377
      CHARACTER CISAN_VERSION*40/' '/                                     377
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             377
      INTEGER MISAN_VERSION(2)/1,1/                                       377
      REAL RE_ISAN_VERSION                                                377
C -                                                                       377
      REAL ISAN_W                                                         377
      EQUIVALENCE (BANK_ISAN(4),ISAN_W,RE_ISAN_W),(NAMES_ISAN(2),         377
     *NISAN_W)                                                            377
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_W),(MAP_ISAN(1,2),MISAN_W)        377
      CHARACTER CISAN_W*40/' '/                                           377
      CHARACTER NISAN_W*12/'R.W'/                                         377
      INTEGER MISAN_W(2)/1,1/                                             377
      REAL RE_ISAN_W                                                      377
C -                                                                       377
      REAL ISAN_H                                                         377
      EQUIVALENCE (BANK_ISAN(5),ISAN_H,RE_ISAN_H),(NAMES_ISAN(3),         377
     *NISAN_H)                                                            377
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_H),(MAP_ISAN(1,3),MISAN_H)        377
      CHARACTER CISAN_H*40/' '/                                           377
      CHARACTER NISAN_H*12/'R.H'/                                         377
      INTEGER MISAN_H(2)/1,1/                                             377
      REAL RE_ISAN_H                                                      377
C -                                                                       377
      REAL ISAN_THK                                                       377
      EQUIVALENCE (BANK_ISAN(6),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(4),     377
     *NISAN_THK)                                                          377
      EQUIVALENCE (COMMEN_ISAN(4),CISAN_THK),(MAP_ISAN(1,4),MISAN_THK)    377
      CHARACTER CISAN_THK*40/' '/                                         377
      CHARACTER NISAN_THK*12/'R.THK'/                                     377
      INTEGER MISAN_THK(2)/1,1/                                           377
      REAL RE_ISAN_THK                                                    377
C -                                                                       377
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                377
      PARAMETER (LEN_ISAN=6)                                              377
      PARAMETER (LLEN_ISAN=4)                                             377
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           377
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        377
      DATA IDNUM_ISAN/10*0/                                               377
      REAL BANK_ISAN(LEN_ISAN)                                            377
      CHARACTER*60 BPATH_ISAN/' '/                                        377
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          377
     *BPATH_ISAN                                                          377
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             377
C *                                                                       377
C -                                                                       378
      REAL ISHY_VERSION                                                   378
      EQUIVALENCE (BANK_ISHY(3),ISHY_VERSION,RE_ISHY_VERSION),            378
     *(NAMES_ISHY(1),NISHY_VERSION)                                       378
      EQUIVALENCE (COMMEN_ISHY(1),CISHY_VERSION),(MAP_ISHY(1,1),          378
     *MISHY_VERSION)                                                      378
      CHARACTER CISHY_VERSION*40/' '/                                     378
      CHARACTER NISHY_VERSION*12/'R.VERSION'/                             378
      INTEGER MISHY_VERSION(2)/1,1/                                       378
      REAL RE_ISHY_VERSION                                                378
C -                                                                       378
      REAL ISHY_W                                                         378
      EQUIVALENCE (BANK_ISHY(4),ISHY_W,RE_ISHY_W),(NAMES_ISHY(2),         378
     *NISHY_W)                                                            378
      EQUIVALENCE (COMMEN_ISHY(2),CISHY_W),(MAP_ISHY(1,2),MISHY_W)        378
      CHARACTER CISHY_W*40/' '/                                           378
      CHARACTER NISHY_W*12/'R.W'/                                         378
      INTEGER MISHY_W(2)/1,1/                                             378
      REAL RE_ISHY_W                                                      378
C -                                                                       378
      REAL ISHY_H                                                         378
      EQUIVALENCE (BANK_ISHY(5),ISHY_H,RE_ISHY_H),(NAMES_ISHY(3),         378
     *NISHY_H)                                                            378
      EQUIVALENCE (COMMEN_ISHY(3),CISHY_H),(MAP_ISHY(1,3),MISHY_H)        378
      CHARACTER CISHY_H*40/' '/                                           378
      CHARACTER NISHY_H*12/'R.H'/                                         378
      INTEGER MISHY_H(2)/1,1/                                             378
      REAL RE_ISHY_H                                                      378
C -                                                                       378
      REAL ISHY_THK                                                       378
      EQUIVALENCE (BANK_ISHY(6),ISHY_THK,RE_ISHY_THK),(NAMES_ISHY(4),     378
     *NISHY_THK)                                                          378
      EQUIVALENCE (COMMEN_ISHY(4),CISHY_THK),(MAP_ISHY(1,4),MISHY_THK)    378
      CHARACTER CISHY_THK*40/' '/                                         378
      CHARACTER NISHY_THK*12/'R.THK'/                                     378
      INTEGER MISHY_THK(2)/1,1/                                           378
      REAL RE_ISHY_THK                                                    378
C -                                                                       378
      INTEGER LEN_ISHY,LLEN_ISHY,LINK_ISHY                                378
      PARAMETER (LEN_ISHY=6)                                              378
      PARAMETER (LLEN_ISHY=4)                                             378
      INTEGER FLAG_ISHY/0/,MAP_ISHY(2,LLEN_ISHY),IDNUM_ISHY(10)           378
      CHARACTER NAMES_ISHY(LLEN_ISHY)*12,COMMEN_ISHY(LLEN_ISHY)*40        378
      DATA IDNUM_ISHY/10*0/                                               378
      REAL BANK_ISHY(LEN_ISHY)                                            378
      CHARACTER*60 BPATH_ISHY/' '/                                        378
      SAVE FLAG_ISHY,MAP_ISHY,IDNUM_ISHY,NAMES_ISHY,COMMEN_ISHY,          378
     *BPATH_ISHY                                                          378
      DATA LINK_ISHY/0/,BANK_ISHY/LEN_ISHY*0/                             378
C *                                                                       378
C -                                                                       379
      REAL ISCU_VERSION                                                   379
      EQUIVALENCE (BANK_ISCU(3),ISCU_VERSION,RE_ISCU_VERSION),            379
     *(NAMES_ISCU(1),NISCU_VERSION)                                       379
      EQUIVALENCE (COMMEN_ISCU(1),CISCU_VERSION),(MAP_ISCU(1,1),          379
     *MISCU_VERSION)                                                      379
      CHARACTER CISCU_VERSION*40/' '/                                     379
      CHARACTER NISCU_VERSION*12/'R.VERSION'/                             379
      INTEGER MISCU_VERSION(2)/1,1/                                       379
      REAL RE_ISCU_VERSION                                                379
C -                                                                       379
      REAL ISCU_W                                                         379
      EQUIVALENCE (BANK_ISCU(4),ISCU_W,RE_ISCU_W),(NAMES_ISCU(2),         379
     *NISCU_W)                                                            379
      EQUIVALENCE (COMMEN_ISCU(2),CISCU_W),(MAP_ISCU(1,2),MISCU_W)        379
      CHARACTER CISCU_W*40/' '/                                           379
      CHARACTER NISCU_W*12/'R.W'/                                         379
      INTEGER MISCU_W(2)/1,1/                                             379
      REAL RE_ISCU_W                                                      379
C -                                                                       379
      REAL ISCU_H                                                         379
      EQUIVALENCE (BANK_ISCU(5),ISCU_H,RE_ISCU_H),(NAMES_ISCU(3),         379
     *NISCU_H)                                                            379
      EQUIVALENCE (COMMEN_ISCU(3),CISCU_H),(MAP_ISCU(1,3),MISCU_H)        379
      CHARACTER CISCU_H*40/' '/                                           379
      CHARACTER NISCU_H*12/'R.H'/                                         379
      INTEGER MISCU_H(2)/1,1/                                             379
      REAL RE_ISCU_H                                                      379
C -                                                                       379
      REAL ISCU_THK                                                       379
      EQUIVALENCE (BANK_ISCU(6),ISCU_THK,RE_ISCU_THK),(NAMES_ISCU(4),     379
     *NISCU_THK)                                                          379
      EQUIVALENCE (COMMEN_ISCU(4),CISCU_THK),(MAP_ISCU(1,4),MISCU_THK)    379
      CHARACTER CISCU_THK*40/' '/                                         379
      CHARACTER NISCU_THK*12/'R.THK'/                                     379
      INTEGER MISCU_THK(2)/1,1/                                           379
      REAL RE_ISCU_THK                                                    379
C -                                                                       379
      INTEGER LEN_ISCU,LLEN_ISCU,LINK_ISCU                                379
      PARAMETER (LEN_ISCU=6)                                              379
      PARAMETER (LLEN_ISCU=4)                                             379
      INTEGER FLAG_ISCU/0/,MAP_ISCU(2,LLEN_ISCU),IDNUM_ISCU(10)           379
      CHARACTER NAMES_ISCU(LLEN_ISCU)*12,COMMEN_ISCU(LLEN_ISCU)*40        379
      DATA IDNUM_ISCU/10*0/                                               379
      REAL BANK_ISCU(LEN_ISCU)                                            379
      CHARACTER*60 BPATH_ISCU/' '/                                        379
      SAVE FLAG_ISCU,MAP_ISCU,IDNUM_ISCU,NAMES_ISCU,COMMEN_ISCU,          379
     *BPATH_ISCU                                                          379
      DATA LINK_ISCU/0/,BANK_ISCU/LEN_ISCU*0/                             379
C *                                                                       379
C -                                                                       380
      REAL ISCG_VERSION                                                   380
      EQUIVALENCE (BANK_ISCG(3),ISCG_VERSION,RE_ISCG_VERSION),            380
     *(NAMES_ISCG(1),NISCG_VERSION)                                       380
      EQUIVALENCE (COMMEN_ISCG(1),CISCG_VERSION),(MAP_ISCG(1,1),          380
     *MISCG_VERSION)                                                      380
      CHARACTER CISCG_VERSION*40/' '/                                     380
      CHARACTER NISCG_VERSION*12/'R.VERSION'/                             380
      INTEGER MISCG_VERSION(2)/1,1/                                       380
      REAL RE_ISCG_VERSION                                                380
C -                                                                       380
      REAL ISCG_W                                                         380
      EQUIVALENCE (BANK_ISCG(4),ISCG_W,RE_ISCG_W),(NAMES_ISCG(2),         380
     *NISCG_W)                                                            380
      EQUIVALENCE (COMMEN_ISCG(2),CISCG_W),(MAP_ISCG(1,2),MISCG_W)        380
      CHARACTER CISCG_W*40/' '/                                           380
      CHARACTER NISCG_W*12/'R.W'/                                         380
      INTEGER MISCG_W(2)/1,1/                                             380
      REAL RE_ISCG_W                                                      380
C -                                                                       380
      REAL ISCG_H                                                         380
      EQUIVALENCE (BANK_ISCG(5),ISCG_H,RE_ISCG_H),(NAMES_ISCG(3),         380
     *NISCG_H)                                                            380
      EQUIVALENCE (COMMEN_ISCG(3),CISCG_H),(MAP_ISCG(1,3),MISCG_H)        380
      CHARACTER CISCG_H*40/' '/                                           380
      CHARACTER NISCG_H*12/'R.H'/                                         380
      INTEGER MISCG_H(2)/1,1/                                             380
      REAL RE_ISCG_H                                                      380
C -                                                                       380
      REAL ISCG_THK                                                       380
      EQUIVALENCE (BANK_ISCG(6),ISCG_THK,RE_ISCG_THK),(NAMES_ISCG(4),     380
     *NISCG_THK)                                                          380
      EQUIVALENCE (COMMEN_ISCG(4),CISCG_THK),(MAP_ISCG(1,4),MISCG_THK)    380
      CHARACTER CISCG_THK*40/' '/                                         380
      CHARACTER NISCG_THK*12/'R.THK'/                                     380
      INTEGER MISCG_THK(2)/1,1/                                           380
      REAL RE_ISCG_THK                                                    380
C -                                                                       380
      INTEGER LEN_ISCG,LLEN_ISCG,LINK_ISCG                                380
      PARAMETER (LEN_ISCG=6)                                              380
      PARAMETER (LLEN_ISCG=4)                                             380
      INTEGER FLAG_ISCG/0/,MAP_ISCG(2,LLEN_ISCG),IDNUM_ISCG(10)           380
      CHARACTER NAMES_ISCG(LLEN_ISCG)*12,COMMEN_ISCG(LLEN_ISCG)*40        380
      DATA IDNUM_ISCG/10*0/                                               380
      REAL BANK_ISCG(LEN_ISCG)                                            380
      CHARACTER*60 BPATH_ISCG/' '/                                        380
      SAVE FLAG_ISCG,MAP_ISCG,IDNUM_ISCG,NAMES_ISCG,COMMEN_ISCG,          380
     *BPATH_ISCG                                                          380
      DATA LINK_ISCG/0/,BANK_ISCG/LEN_ISCG*0/                             380
C *                                                                       380
C -                                                                       381
      REAL ISGA_VERSION                                                   381
      EQUIVALENCE (BANK_ISGA(3),ISGA_VERSION,RE_ISGA_VERSION),            381
     *(NAMES_ISGA(1),NISGA_VERSION)                                       381
      EQUIVALENCE (COMMEN_ISGA(1),CISGA_VERSION),(MAP_ISGA(1,1),          381
     *MISGA_VERSION)                                                      381
      CHARACTER CISGA_VERSION*40/' '/                                     381
      CHARACTER NISGA_VERSION*12/'R.VERSION'/                             381
      INTEGER MISGA_VERSION(2)/1,1/                                       381
      REAL RE_ISGA_VERSION                                                381
C -                                                                       381
      REAL ISGA_W                                                         381
      EQUIVALENCE (BANK_ISGA(4),ISGA_W,RE_ISGA_W),(NAMES_ISGA(2),         381
     *NISGA_W)                                                            381
      EQUIVALENCE (COMMEN_ISGA(2),CISGA_W),(MAP_ISGA(1,2),MISGA_W)        381
      CHARACTER CISGA_W*40/' '/                                           381
      CHARACTER NISGA_W*12/'R.W'/                                         381
      INTEGER MISGA_W(2)/1,1/                                             381
      REAL RE_ISGA_W                                                      381
C -                                                                       381
      REAL ISGA_H                                                         381
      EQUIVALENCE (BANK_ISGA(5),ISGA_H,RE_ISGA_H),(NAMES_ISGA(3),         381
     *NISGA_H)                                                            381
      EQUIVALENCE (COMMEN_ISGA(3),CISGA_H),(MAP_ISGA(1,3),MISGA_H)        381
      CHARACTER CISGA_H*40/' '/                                           381
      CHARACTER NISGA_H*12/'R.H'/                                         381
      INTEGER MISGA_H(2)/1,1/                                             381
      REAL RE_ISGA_H                                                      381
C -                                                                       381
      REAL ISGA_THK                                                       381
      EQUIVALENCE (BANK_ISGA(6),ISGA_THK,RE_ISGA_THK),(NAMES_ISGA(4),     381
     *NISGA_THK)                                                          381
      EQUIVALENCE (COMMEN_ISGA(4),CISGA_THK),(MAP_ISGA(1,4),MISGA_THK)    381
      CHARACTER CISGA_THK*40/' '/                                         381
      CHARACTER NISGA_THK*12/'R.THK'/                                     381
      INTEGER MISGA_THK(2)/1,1/                                           381
      REAL RE_ISGA_THK                                                    381
C -                                                                       381
      INTEGER LEN_ISGA,LLEN_ISGA,LINK_ISGA                                381
      PARAMETER (LEN_ISGA=6)                                              381
      PARAMETER (LLEN_ISGA=4)                                             381
      INTEGER FLAG_ISGA/0/,MAP_ISGA(2,LLEN_ISGA),IDNUM_ISGA(10)           381
      CHARACTER NAMES_ISGA(LLEN_ISGA)*12,COMMEN_ISGA(LLEN_ISGA)*40        381
      DATA IDNUM_ISGA/10*0/                                               381
      REAL BANK_ISGA(LEN_ISGA)                                            381
      CHARACTER*60 BPATH_ISGA/' '/                                        381
      SAVE FLAG_ISGA,MAP_ISGA,IDNUM_ISGA,NAMES_ISGA,COMMEN_ISGA,          381
     *BPATH_ISGA                                                          381
      DATA LINK_ISGA/0/,BANK_ISGA/LEN_ISGA*0/                             381
C *                                                                       381
C -                                                                       382
      REAL ISGB_VERSION                                                   382
      EQUIVALENCE (BANK_ISGB(3),ISGB_VERSION,RE_ISGB_VERSION),            382
     *(NAMES_ISGB(1),NISGB_VERSION)                                       382
      EQUIVALENCE (COMMEN_ISGB(1),CISGB_VERSION),(MAP_ISGB(1,1),          382
     *MISGB_VERSION)                                                      382
      CHARACTER CISGB_VERSION*40/' '/                                     382
      CHARACTER NISGB_VERSION*12/'R.VERSION'/                             382
      INTEGER MISGB_VERSION(2)/1,1/                                       382
      REAL RE_ISGB_VERSION                                                382
C -                                                                       382
      REAL ISGB_W                                                         382
      EQUIVALENCE (BANK_ISGB(4),ISGB_W,RE_ISGB_W),(NAMES_ISGB(2),         382
     *NISGB_W)                                                            382
      EQUIVALENCE (COMMEN_ISGB(2),CISGB_W),(MAP_ISGB(1,2),MISGB_W)        382
      CHARACTER CISGB_W*40/' '/                                           382
      CHARACTER NISGB_W*12/'R.W'/                                         382
      INTEGER MISGB_W(2)/1,1/                                             382
      REAL RE_ISGB_W                                                      382
C -                                                                       382
      REAL ISGB_H                                                         382
      EQUIVALENCE (BANK_ISGB(5),ISGB_H,RE_ISGB_H),(NAMES_ISGB(3),         382
     *NISGB_H)                                                            382
      EQUIVALENCE (COMMEN_ISGB(3),CISGB_H),(MAP_ISGB(1,3),MISGB_H)        382
      CHARACTER CISGB_H*40/' '/                                           382
      CHARACTER NISGB_H*12/'R.H'/                                         382
      INTEGER MISGB_H(2)/1,1/                                             382
      REAL RE_ISGB_H                                                      382
C -                                                                       382
      REAL ISGB_THK                                                       382
      EQUIVALENCE (BANK_ISGB(6),ISGB_THK,RE_ISGB_THK),(NAMES_ISGB(4),     382
     *NISGB_THK)                                                          382
      EQUIVALENCE (COMMEN_ISGB(4),CISGB_THK),(MAP_ISGB(1,4),MISGB_THK)    382
      CHARACTER CISGB_THK*40/' '/                                         382
      CHARACTER NISGB_THK*12/'R.THK'/                                     382
      INTEGER MISGB_THK(2)/1,1/                                           382
      REAL RE_ISGB_THK                                                    382
C -                                                                       382
      INTEGER LEN_ISGB,LLEN_ISGB,LINK_ISGB                                382
      PARAMETER (LEN_ISGB=6)                                              382
      PARAMETER (LLEN_ISGB=4)                                             382
      INTEGER FLAG_ISGB/0/,MAP_ISGB(2,LLEN_ISGB),IDNUM_ISGB(10)           382
      CHARACTER NAMES_ISGB(LLEN_ISGB)*12,COMMEN_ISGB(LLEN_ISGB)*40        382
      DATA IDNUM_ISGB/10*0/                                               382
      REAL BANK_ISGB(LEN_ISGB)                                            382
      CHARACTER*60 BPATH_ISGB/' '/                                        382
      SAVE FLAG_ISGB,MAP_ISGB,IDNUM_ISGB,NAMES_ISGB,COMMEN_ISGB,          382
     *BPATH_ISGB                                                          382
      DATA LINK_ISGB/0/,BANK_ISGB/LEN_ISGB*0/                             382
C *                                                                       382
C -                                                                       383
      REAL ISRR_LAYER                                                     383
      EQUIVALENCE (BANK_ISRR(3),ISRR_LAYER,RE_ISRR_LAYER),                383
     *(NAMES_ISRR(1),NISRR_LAYER)                                         383
      EQUIVALENCE (COMMEN_ISRR(1),CISRR_LAYER),(MAP_ISRR(1,1),            383
     *MISRR_LAYER)                                                        383
      CHARACTER CISRR_LAYER*40/' '/                                       383
      CHARACTER NISRR_LAYER*12/'R.LAYER'/                                 383
      INTEGER MISRR_LAYER(2)/1,1/                                         383
      REAL RE_ISRR_LAYER                                                  383
C -                                                                       383
      REAL ISRR_RIN                                                       383
      EQUIVALENCE (BANK_ISRR(4),ISRR_RIN,RE_ISRR_RIN),(NAMES_ISRR(2),     383
     *NISRR_RIN)                                                          383
      EQUIVALENCE (COMMEN_ISRR(2),CISRR_RIN),(MAP_ISRR(1,2),MISRR_RIN)    383
      CHARACTER CISRR_RIN*40/' '/                                         383
      CHARACTER NISRR_RIN*12/'R.RIN'/                                     383
      INTEGER MISRR_RIN(2)/1,1/                                           383
      REAL RE_ISRR_RIN                                                    383
C -                                                                       383
      REAL ISRR_ROUT                                                      383
      EQUIVALENCE (BANK_ISRR(5),ISRR_ROUT,RE_ISRR_ROUT),(NAMES_ISRR(3),   383
     *NISRR_ROUT)                                                         383
      EQUIVALENCE (COMMEN_ISRR(3),CISRR_ROUT),(MAP_ISRR(1,3),             383
     *MISRR_ROUT)                                                         383
      CHARACTER CISRR_ROUT*40/' '/                                        383
      CHARACTER NISRR_ROUT*12/'R.ROUT'/                                   383
      INTEGER MISRR_ROUT(2)/1,1/                                          383
      REAL RE_ISRR_ROUT                                                   383
C -                                                                       383
      REAL ISRR_LENGTH                                                    383
      EQUIVALENCE (BANK_ISRR(6),ISRR_LENGTH,RE_ISRR_LENGTH),              383
     *(NAMES_ISRR(4),NISRR_LENGTH)                                        383
      EQUIVALENCE (COMMEN_ISRR(4),CISRR_LENGTH),(MAP_ISRR(1,4),           383
     *MISRR_LENGTH)                                                       383
      CHARACTER CISRR_LENGTH*40/' '/                                      383
      CHARACTER NISRR_LENGTH*12/'R.LENGTH'/                               383
      INTEGER MISRR_LENGTH(2)/1,1/                                        383
      REAL RE_ISRR_LENGTH                                                 383
C -                                                                       383
      INTEGER LEN_ISRR,LLEN_ISRR,LINK_ISRR                                383
      PARAMETER (LEN_ISRR=6)                                              383
      PARAMETER (LLEN_ISRR=4)                                             383
      INTEGER FLAG_ISRR/0/,MAP_ISRR(2,LLEN_ISRR),IDNUM_ISRR(10)           383
      CHARACTER NAMES_ISRR(LLEN_ISRR)*12,COMMEN_ISRR(LLEN_ISRR)*40        383
      DATA IDNUM_ISRR/10*0/                                               383
      REAL BANK_ISRR(LEN_ISRR)                                            383
      CHARACTER*60 BPATH_ISRR/' '/                                        383
      SAVE FLAG_ISRR,MAP_ISRR,IDNUM_ISRR,NAMES_ISRR,COMMEN_ISRR,          383
     *BPATH_ISRR                                                          383
      DATA LINK_ISRR/0/,BANK_ISRR/LEN_ISRR*0/                             383
C *                                                                       383
C -                                                                       384
      REAL ISCC_VERSION                                                   384
      EQUIVALENCE (BANK_ISCC(3),ISCC_VERSION,RE_ISCC_VERSION),            384
     *(NAMES_ISCC(1),NISCC_VERSION)                                       384
      EQUIVALENCE (COMMEN_ISCC(1),CISCC_VERSION),(MAP_ISCC(1,1),          384
     *MISCC_VERSION)                                                      384
      CHARACTER CISCC_VERSION*40/' '/                                     384
      CHARACTER NISCC_VERSION*12/'R.VERSION'/                             384
      INTEGER MISCC_VERSION(2)/1,1/                                       384
      REAL RE_ISCC_VERSION                                                384
C -                                                                       384
      REAL ISCC_RIN1                                                      384
      EQUIVALENCE (BANK_ISCC(4),ISCC_RIN1,RE_ISCC_RIN1),(NAMES_ISCC(2),   384
     *NISCC_RIN1)                                                         384
      EQUIVALENCE (COMMEN_ISCC(2),CISCC_RIN1),(MAP_ISCC(1,2),             384
     *MISCC_RIN1)                                                         384
      CHARACTER CISCC_RIN1*40/' '/                                        384
      CHARACTER NISCC_RIN1*12/'R.RIN1'/                                   384
      INTEGER MISCC_RIN1(2)/1,1/                                          384
      REAL RE_ISCC_RIN1                                                   384
C -                                                                       384
      REAL ISCC_ROUT1                                                     384
      EQUIVALENCE (BANK_ISCC(5),ISCC_ROUT1,RE_ISCC_ROUT1),                384
     *(NAMES_ISCC(3),NISCC_ROUT1)                                         384
      EQUIVALENCE (COMMEN_ISCC(3),CISCC_ROUT1),(MAP_ISCC(1,3),            384
     *MISCC_ROUT1)                                                        384
      CHARACTER CISCC_ROUT1*40/' '/                                       384
      CHARACTER NISCC_ROUT1*12/'R.ROUT1'/                                 384
      INTEGER MISCC_ROUT1(2)/1,1/                                         384
      REAL RE_ISCC_ROUT1                                                  384
C -                                                                       384
      REAL ISCC_RIN2                                                      384
      EQUIVALENCE (BANK_ISCC(6),ISCC_RIN2,RE_ISCC_RIN2),(NAMES_ISCC(4),   384
     *NISCC_RIN2)                                                         384
      EQUIVALENCE (COMMEN_ISCC(4),CISCC_RIN2),(MAP_ISCC(1,4),             384
     *MISCC_RIN2)                                                         384
      CHARACTER CISCC_RIN2*40/' '/                                        384
      CHARACTER NISCC_RIN2*12/'R.RIN2'/                                   384
      INTEGER MISCC_RIN2(2)/1,1/                                          384
      REAL RE_ISCC_RIN2                                                   384
C -                                                                       384
      REAL ISCC_ROUT2                                                     384
      EQUIVALENCE (BANK_ISCC(7),ISCC_ROUT2,RE_ISCC_ROUT2),                384
     *(NAMES_ISCC(5),NISCC_ROUT2)                                         384
      EQUIVALENCE (COMMEN_ISCC(5),CISCC_ROUT2),(MAP_ISCC(1,5),            384
     *MISCC_ROUT2)                                                        384
      CHARACTER CISCC_ROUT2*40/' '/                                       384
      CHARACTER NISCC_ROUT2*12/'R.ROUT2'/                                 384
      INTEGER MISCC_ROUT2(2)/1,1/                                         384
      REAL RE_ISCC_ROUT2                                                  384
C -                                                                       384
      REAL ISCC_LENGTH                                                    384
      EQUIVALENCE (BANK_ISCC(8),ISCC_LENGTH,RE_ISCC_LENGTH),              384
     *(NAMES_ISCC(6),NISCC_LENGTH)                                        384
      EQUIVALENCE (COMMEN_ISCC(6),CISCC_LENGTH),(MAP_ISCC(1,6),           384
     *MISCC_LENGTH)                                                       384
      CHARACTER CISCC_LENGTH*40/' '/                                      384
      CHARACTER NISCC_LENGTH*12/'R.LENGTH'/                               384
      INTEGER MISCC_LENGTH(2)/1,1/                                        384
      REAL RE_ISCC_LENGTH                                                 384
C -                                                                       384
      INTEGER LEN_ISCC,LLEN_ISCC,LINK_ISCC                                384
      PARAMETER (LEN_ISCC=8)                                              384
      PARAMETER (LLEN_ISCC=6)                                             384
      INTEGER FLAG_ISCC/0/,MAP_ISCC(2,LLEN_ISCC),IDNUM_ISCC(10)           384
      CHARACTER NAMES_ISCC(LLEN_ISCC)*12,COMMEN_ISCC(LLEN_ISCC)*40        384
      DATA IDNUM_ISCC/10*0/                                               384
      REAL BANK_ISCC(LEN_ISCC)                                            384
      CHARACTER*60 BPATH_ISCC/' '/                                        384
      SAVE FLAG_ISCC,MAP_ISCC,IDNUM_ISCC,NAMES_ISCC,COMMEN_ISCC,          384
     *BPATH_ISCC                                                          384
      DATA LINK_ISCC/0/,BANK_ISCC/LEN_ISCC*0/                             384
C *                                                                       384
* -------------------------------------------------------
C *                                                                       387
      CALL AGSBEGM(MODULE,IPRIN)                                          387
      IF (IPRIN.LT.0) RETURN                                              387
C Filling bank ISMG - MOTHER VOLUME WHOLE DETECTOR                        387
      BANK_TITLE='MOTHER VOLUME WHOLE DETECTOR'                           387
      BPATH_ISMG='ISMG*'                                                  387
      IDNUM_ISMG(1)=0                                                     388
C VERSION                                                                 388
      ISMG_LAYER=1                                                        388
      CISMG_LAYER='VERSION'                                               388
C INNER RADIUS                                                            389
      ISMG_RIN=11.00                                                      389
      CISMG_RIN='INNER RADIUS'                                            389
C OUTER RADIUS                                                            390
      ISMG_ROUT=18.00                                                     390
      CISMG_ROUT='OUTER RADIUS'                                           390
C OVERAL LENGTH OF THE DETECTOR                                           391
      ISMG_TOTALLENGTH=56.00                                              391
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE DETECTOR'                   391
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    392
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           392
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   392
C *                                                                       392
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    392
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           392
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   392
C *                                                                       394
      CALL AGSBEGM(MODULE,IPRIN)                                          394
      IF (IPRIN.LT.0) RETURN                                              394
C Filling bank ISMG - MOTHER VOLUME INNER LAYER                           394
      BANK_TITLE='MOTHER VOLUME INNER LAYER'                              394
      BPATH_ISMG='ISMG*'                                                  394
      IDNUM_ISMG(1)=0                                                     395
C VERSION                                                                 395
      ISMG_LAYER=2                                                        395
      CISMG_LAYER='VERSION'                                               395
C INNER RADIUS                                                            396
      ISMG_RIN=11.00                                                      396
      CISMG_RIN='INNER RADIUS'                                            396
C OUTER RADIUS                                                            397
      ISMG_ROUT=14.00                                                     397
      CISMG_ROUT='OUTER RADIUS'                                           397
C OVERAL LENGTH OF THE LAYER                                              398
      ISMG_TOTALLENGTH=44.00                                              398
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      398
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    399
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           399
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   399
C *                                                                       399
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    399
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           399
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   399
C *                                                                       401
      CALL AGSBEGM(MODULE,IPRIN)                                          401
      IF (IPRIN.LT.0) RETURN                                              401
C Filling bank ISMG - MOTHER VOLUME OUTER LAYER                           401
      BANK_TITLE='MOTHER VOLUME OUTER LAYER'                              401
      BPATH_ISMG='ISMG*'                                                  401
      IDNUM_ISMG(1)=0                                                     402
C VERSION                                                                 402
      ISMG_LAYER=3                                                        402
      CISMG_LAYER='VERSION'                                               402
C INNER RADIUS                                                            403
      ISMG_RIN=15.00                                                      403
      CISMG_RIN='INNER RADIUS'                                            403
C OUTER RADIUS                                                            404
      ISMG_ROUT=18.00                                                     404
      CISMG_ROUT='OUTER RADIUS'                                           404
C OVERAL LENGTH OF THE LAYER                                              405
      ISMG_TOTALLENGTH=56.00                                              405
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      405
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    406
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           406
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   406
C *                                                                       406
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    406
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           406
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   406
*--------------------------------------------------------
C *                                                                       409
      CALL AGSBEGM(MODULE,IPRIN)                                          409
      IF (IPRIN.LT.0) RETURN                                              409
C Filling bank ISBG - INNER SILICON TRACKER DATA                          409
      BANK_TITLE='INNER SILICON TRACKER DATA'                             409
      BPATH_ISBG='ISBG*'                                                  409
      IDNUM_ISBG(1)=0                                                     410
C LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE                             410
      ISBG_LAYER=1                                                        410
      CISBG_LAYER='LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE'           410
C LADDER COUNT                                                            411
      ISBG_NLADDER=11                                                     411
      CISBG_NLADDER='LADDER COUNT'                                        411
C SENSOR UNITS PER LADDER                                                 412
      ISBG_NUNIT=7                                                        412
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               412
C OVERAL LENGTH OF THE DETECTOR                                           413
      ISBG_LENGTH=28.0                                                    413
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        413
C 1ST LADDER NOMINAL RADIUS                                               414
      ISBG_R=7.0                                                          414
      CISBG_R='1ST LADDER NOMINAL RADIUS'                                 414
C 1ST LADDER NOMINAL POSITION ANGLE                                       415
      ISBG_A=0.0                                                          415
      CISBG_A='1ST LADDER NOMINAL POSITION ANGLE'                         415
C ANGULAR OFFSET                                                          416
      ISBG_AOFFSET=81.0                                                   416
      CISBG_AOFFSET='ANGULAR OFFSET'                                      416
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    417
      ISBG_PPAROFFSET=0.0                                                 417
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  417
     *DULE'                                                               417
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               418
      ISBG_PPEROFFSET=0.0                                                 418
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  418
     *HE MODULE'                                                          418
C LADDER WIDTH                                                            419
      ISBG_LADDERWIDTH=4.0                                                419
      CISBG_LADDERWIDTH='LADDER WIDTH'                                    419
C LADDER THICKNESS                                                        420
      ISBG_LADDERTHK=0.4626                                               420
      CISBG_LADDERTHK='LADDER THICKNESS'                                  420
C MODULE THICKNESS                                                        421
      ISBG_SENSATHK=0.4282                                                421
      CISBG_SENSATHK='MODULE THICKNESS'                                   421
C SENSOR WIDTH                                                            422
      ISBG_SENSORWIDTH=4.0                                                422
      CISBG_SENSORWIDTH='SENSOR WIDTH'                                    422
C SENSOR LENGTH                                                           423
      ISBG_SENSORLNGTH=4.0                                                423
      CISBG_SENSORLNGTH='SENSOR LENGTH'                                   423
C SENSOR THICKNESS                                                        424
      ISBG_SENSORTHK=0.0300                                               424
      CISBG_SENSORTHK='SENSOR THICKNESS'                                  424
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    425
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           425
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   425
C *                                                                       425
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    425
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           425
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   425
C *                                                                       427
      CALL AGSBEGM(MODULE,IPRIN)                                          427
      IF (IPRIN.LT.0) RETURN                                              427
C Filling bank ISBG - INNER SILICON TRACKER DATA                          427
      BANK_TITLE='INNER SILICON TRACKER DATA'                             427
      BPATH_ISBG='ISBG*'                                                  427
      IDNUM_ISBG(1)=0                                                     428
C LAYER INDEX                                                             428
      ISBG_LAYER=2                                                        428
      CISBG_LAYER='LAYER INDEX'                                           428
C LADDER COUNT                                                            429
      ISBG_NLADDER=19                                                     429
      CISBG_NLADDER='LADDER COUNT'                                        429
C SENSOR UNITS PER LADDER                                                 430
      ISBG_NUNIT=10                                                       430
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               430
C OVERAL LENGTH OF THE DETECTOR                                           431
      ISBG_LENGTH=40.0                                                    431
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        431
C 2ND LADDER NOMINAL RADIUS                                               432
      ISBG_R=12.0                                                         432
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 432
C 2ND LADDER NOMINAL POSITION ANGLE                                       433
      ISBG_A=0.0                                                          433
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         433
C ANGULAR OFFSET                                                          434
      ISBG_AOFFSET=81.0                                                   434
      CISBG_AOFFSET='ANGULAR OFFSET'                                      434
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    435
      ISBG_PPAROFFSET=0.0                                                 435
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  435
     *DULE'                                                               435
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               436
      ISBG_PPEROFFSET=0.0                                                 436
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  436
     *HE MODULE'                                                          436
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    437
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           437
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   437
C *                                                                       437
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    437
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           437
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   437
C *                                                                       439
      CALL AGSBEGM(MODULE,IPRIN)                                          439
      IF (IPRIN.LT.0) RETURN                                              439
C Filling bank ISBG - INNER SILICON TRACKER DATA                          439
      BANK_TITLE='INNER SILICON TRACKER DATA'                             439
      BPATH_ISBG='ISBG*'                                                  439
      IDNUM_ISBG(1)=0                                                     440
C LAYER INDEX                                                             440
      ISBG_LAYER=3                                                        440
      CISBG_LAYER='LAYER INDEX'                                           440
C LADDER COUNT                                                            441
      ISBG_NLADDER=27                                                     441
      CISBG_NLADDER='LADDER COUNT'                                        441
C SENSOR UNITS PER LADDER                                                 442
      ISBG_NUNIT=13                                                       442
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               442
C OVERAL LENGTH OF THE DETECTOR                                           443
      ISBG_LENGTH=52.0                                                    443
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        443
C 2ND LADDER NOMINAL RADIUS                                               444
      ISBG_R=17.0                                                         444
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 444
C 2ND LADDER NOMINAL POSITION ANGLE                                       445
      ISBG_A=0.0                                                          445
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         445
C ANGULAR OFFSET                                                          446
      ISBG_AOFFSET=81.0                                                   446
      CISBG_AOFFSET='ANGULAR OFFSET'                                      446
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    447
      ISBG_PPAROFFSET=0.0                                                 447
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  447
     *DULE'                                                               447
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               448
      ISBG_PPEROFFSET=0.0                                                 448
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  448
     *HE MODULE'                                                          448
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    449
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           449
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   449
C *                                                                       449
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    449
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           449
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   449
*--------------------------------------------------------
C *                                                                       452
      CALL AGSBEGM(MODULE,IPRIN)                                          452
      IF (IPRIN.LT.0) RETURN                                              452
C Filling bank ISAN - THERMAL CONDUCTIVE CARBON FOAM PLATE                452
      BANK_TITLE='THERMAL CONDUCTIVE CARBON FOAM PLATE'                   452
      BPATH_ISAN='ISAN*'                                                  452
      IDNUM_ISAN(1)=0                                                     453
C MAY HAVE A FEW                                                          453
      ISAN_VERSION=1                                                      453
      CISAN_VERSION='MAY HAVE A FEW'                                      453
C WIDTH                                                                   454
      ISAN_W=4.0                                                          454
      CISAN_W='WIDTH'                                                     454
C LENGTH                                                                  455
      ISAN_H=4.0                                                          455
      CISAN_H='LENGTH'                                                    455
C THICKNESS                                                               456
      ISAN_THK=0.1686                                                     456
      CISAN_THK='THICKNESS'                                               456
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    457
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           457
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   457
C *                                                                       457
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    457
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           457
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   457
*--------------------------------------------------------
C *                                                                       460
      CALL AGSBEGM(MODULE,IPRIN)                                          460
      IF (IPRIN.LT.0) RETURN                                              460
C Filling bank ISHY - KAPTON HYBRID                                       460
      BANK_TITLE='KAPTON HYBRID'                                          460
      BPATH_ISHY='ISHY*'                                                  460
      IDNUM_ISHY(1)=0                                                     461
C MAY HAVE A FEW                                                          461
      ISHY_VERSION=1                                                      461
      CISHY_VERSION='MAY HAVE A FEW'                                      461
C WIDTH                                                                   462
      ISHY_W=4.0                                                          462
      CISHY_W='WIDTH'                                                     462
C LENGTH                                                                  463
      ISHY_H=4.0                                                          463
      CISHY_H='LENGTH'                                                    463
C THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2MIL KAPTON        464
      ISHY_THK=0.0050                                                     464
      CISHY_THK='THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2M  464
     *IL KAPTON'                                                          464
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    465
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           465
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   465
C *                                                                       465
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    465
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           465
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   465
*--------------------------------------------------------
C *                                                                       468
      CALL AGSBEGM(MODULE,IPRIN)                                          468
      IF (IPRIN.LT.0) RETURN                                              468
C Filling bank ISCU - COPPER TRACES ON HYBRID                             468
      BANK_TITLE='COPPER TRACES ON HYBRID'                                468
      BPATH_ISCU='ISCU*'                                                  468
      IDNUM_ISCU(1)=0                                                     469
C MAY HAVE A FEW                                                          469
      ISCU_VERSION=1                                                      469
      CISCU_VERSION='MAY HAVE A FEW'                                      469
C WIDTH                                                                   470
      ISCU_W=4.0                                                          470
      CISCU_W='WIDTH'                                                     470
C LENGTH                                                                  471
      ISCU_H=4.0                                                          471
      CISCU_H='LENGTH'                                                    471
C THICKNESS, 0.7MIL CU                                                    472
      ISCU_THK=0.0018                                                     472
      CISCU_THK='THICKNESS, 0.7MIL CU'                                    472
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    473
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           473
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   473
C *                                                                       473
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    473
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           473
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   473
*--------------------------------------------------------
C *                                                                       476
      CALL AGSBEGM(MODULE,IPRIN)                                          476
      IF (IPRIN.LT.0) RETURN                                              476
C Filling bank ISCG - READOUT CHIP GEOMETRY, FIRST APPROX.                476
      BANK_TITLE='READOUT CHIP GEOMETRY, FIRST APPROX.'                   476
      BPATH_ISCG='ISCG*'                                                  476
      IDNUM_ISCG(1)=0                                                     477
C WE MAY HAVE A FEW DIFFERENT CHIPS                                       477
      ISCG_VERSION=1                                                      477
      CISCG_VERSION='WE MAY HAVE A FEW DIFFERENT CHIPS'                   477
C WIDTH                                                                   478
      ISCG_W=0.8055                                                       478
      CISCG_W='WIDTH'                                                     478
C HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)                          479
      ISCG_H=4.0                                                          479
      CISCG_H='HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)'            479
C THICKNESS                                                               480
      ISCG_THK=0.0762                                                     480
      CISCG_THK='THICKNESS'                                               480
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    481
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           481
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   481
C *                                                                       481
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    481
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           481
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   481
*--------------------------------------------------------
C *                                                                       484
      CALL AGSBEGM(MODULE,IPRIN)                                          484
      IF (IPRIN.LT.0) RETURN                                              484
C Filling bank ISGA - GLUE LAYER, SAME SIZE AS SENSOR                     484
      BANK_TITLE='GLUE LAYER, SAME SIZE AS SENSOR'                        484
      BPATH_ISGA='ISGA*'                                                  484
      IDNUM_ISGA(1)=0                                                     485
C MAY HAVE A FEW                                                          485
      ISGA_VERSION=1                                                      485
      CISGA_VERSION='MAY HAVE A FEW'                                      485
C WIDTH                                                                   486
      ISGA_W=4.0                                                          486
      CISGA_W='WIDTH'                                                     486
C LENGTH                                                                  487
      ISGA_H=4.0                                                          487
      CISGA_H='LENGTH'                                                    487
C THICKNESS, USE 50UM                                                     488
      ISGA_THK=0.0050                                                     488
      CISGA_THK='THICKNESS, USE 50UM'                                     488
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    489
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           489
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   489
C *                                                                       489
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    489
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           489
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   489
*--------------------------------------------------------
C *                                                                       492
      CALL AGSBEGM(MODULE,IPRIN)                                          492
      IF (IPRIN.LT.0) RETURN                                              492
C Filling bank ISGB - GLUE LAYER, SAME SIZE AS CHIP                       492
      BANK_TITLE='GLUE LAYER, SAME SIZE AS CHIP'                          492
      BPATH_ISGB='ISGB*'                                                  492
      IDNUM_ISGB(1)=0                                                     493
C MAY HAVE A FEW                                                          493
      ISGB_VERSION=1                                                      493
      CISGB_VERSION='MAY HAVE A FEW'                                      493
C WIDTH                                                                   494
      ISGB_W=0.8055                                                       494
      CISGB_W='WIDTH'                                                     494
C LENGTH                                                                  495
      ISGB_H=4.0                                                          495
      CISGB_H='LENGTH'                                                    495
C THICKNESS, USE 50UM                                                     496
      ISGB_THK=0.0050                                                     496
      CISGB_THK='THICKNESS, USE 50UM'                                     496
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    497
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           497
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   497
C *                                                                       497
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    497
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           497
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   497
* -------------------------------------------------------
C *                                                                       499
      CALL AGSBEGM(MODULE,IPRIN)                                          499
      IF (IPRIN.LT.0) RETURN                                              499
C Filling bank ISRR - SUPPORT RING FOR LAYER 1                            499
      BANK_TITLE='SUPPORT RING FOR LAYER 1'                               499
      BPATH_ISRR='ISRR*'                                                  499
      IDNUM_ISRR(1)=0                                                     500
C LAYER                                                                   500
      ISRR_LAYER=1                                                        500
      CISRR_LAYER='LAYER'                                                 500
C INNER RADIUS                                                            501
      ISRR_RIN=6.00                                                       501
      CISRR_RIN='INNER RADIUS'                                            501
C OUTER RADIUS                                                            502
      ISRR_ROUT=9.00                                                      502
      CISRR_ROUT='OUTER RADIUS'                                           502
C THICKNESS OF THE RING                                                   503
      ISRR_LENGTH=2.00                                                    503
      CISRR_LENGTH='THICKNESS OF THE RING'                                503
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    504
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           504
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   504
C *                                                                       504
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    504
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           504
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   504
C *                                                                       506
      CALL AGSBEGM(MODULE,IPRIN)                                          506
      IF (IPRIN.LT.0) RETURN                                              506
C Filling bank ISRR - SUPPORT RING FOR LAYER 2                            506
      BANK_TITLE='SUPPORT RING FOR LAYER 2'                               506
      BPATH_ISRR='ISRR*'                                                  506
      IDNUM_ISRR(1)=0                                                     507
C LAYER                                                                   507
      ISRR_LAYER=2                                                        507
      CISRR_LAYER='LAYER'                                                 507
C INNER RADIUS                                                            508
      ISRR_RIN=11.00                                                      508
      CISRR_RIN='INNER RADIUS'                                            508
C OUTER RADIUS                                                            509
      ISRR_ROUT=14.00                                                     509
      CISRR_ROUT='OUTER RADIUS'                                           509
C THICKNESS OF THE RING                                                   510
      ISRR_LENGTH=2.00                                                    510
      CISRR_LENGTH='THICKNESS OF THE RING'                                510
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    511
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           511
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   511
C *                                                                       511
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    511
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           511
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   511
C *                                                                       513
      CALL AGSBEGM(MODULE,IPRIN)                                          513
      IF (IPRIN.LT.0) RETURN                                              513
C Filling bank ISRR - SUPPORT RING FOR LAYER 3                            513
      BANK_TITLE='SUPPORT RING FOR LAYER 3'                               513
      BPATH_ISRR='ISRR*'                                                  513
      IDNUM_ISRR(1)=0                                                     514
C LAYER                                                                   514
      ISRR_LAYER=3                                                        514
      CISRR_LAYER='LAYER'                                                 514
C INNER RADIUS                                                            515
      ISRR_RIN=15.00                                                      515
      CISRR_RIN='INNER RADIUS'                                            515
C OUTER RADIUS                                                            516
      ISRR_ROUT=18.00                                                     516
      CISRR_ROUT='OUTER RADIUS'                                           516
C THICKNESS OF THE RING                                                   517
      ISRR_LENGTH=2.00                                                    517
      CISRR_LENGTH='THICKNESS OF THE RING'                                517
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    518
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           518
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   518
C *                                                                       518
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    518
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           518
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   518
* -------------------------------------------------------
C *                                                                       520
      CALL AGSBEGM(MODULE,IPRIN)                                          520
      IF (IPRIN.LT.0) RETURN                                              520
C Filling bank ISCC - INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3          520
      BANK_TITLE='INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3'             520
      BPATH_ISCC='ISCC*'                                                  520
      IDNUM_ISCC(1)=0                                                     521
C VERSION                                                                 521
      ISCC_VERSION=1                                                      521
      CISCC_VERSION='VERSION'                                             521
C INNER RADIUS SMALL                                                      522
      ISCC_RIN1=13.00                                                     522
      CISCC_RIN1='INNER RADIUS SMALL'                                     522
C OUTER RADIUS SMALL                                                      523
      ISCC_ROUT1=14.00                                                    523
      CISCC_ROUT1='OUTER RADIUS SMALL'                                    523
C INNER RADIUS LARGE                                                      524
      ISCC_RIN2=15.00                                                     524
      CISCC_RIN2='INNER RADIUS LARGE'                                     524
C OUTER RADIUS LARGE                                                      525
      ISCC_ROUT2=16.00                                                    525
      CISCC_ROUT2='OUTER RADIUS LARGE'                                    525
C THICKNESS OF THE RING                                                   526
      ISCC_LENGTH=4.00                                                    526
      CISCC_LENGTH='THICKNESS OF THE RING'                                526
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    527
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           527
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   527
C *                                                                       527
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    527
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           527
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   527
* -------------------------------------------------------
      RADDEG = 3.14159265/180.0                                           531
* -------------------------------------------------------
C use ISMG bank                                                           533
      BPATH_ISMG='ISMG*'                                                  533
      IDNUM_ISMG(1)=0                                                     533
      ISMG_LAYER=1                                                        533
      CALL AGDGETP('ISTBGEO1','*',-999,'ISMG',NISMG_LAYER,RE_ISMG_LAYER,  533
     *BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,BANK_ISMG,LEN_ISMG,     533
     *LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                                      533
      CALL AGSBEGM(MODULE,IPRIN)                                          534
C Check IPRIN<0                                                           534
      IF (IPRIN.LT.0) RETURN                                              534
C Create IBMO :                                                           534
C Call To Local Procedure IBMO                                            534
      ASSIGN 5020 TO BLOCK_IBMO                                           534
      GO TO  5010                                                         534
5020  CONTINUE                                                            534
C *                                                                       534
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           535
      CALL AGSRESET                                                       535
      AG_MOTHER = 'CAVE'                                                  535
      AG_TITLE = 'IBMO'                                                   535
      AG_EXNAME = 'POSITION'                                              535
      AG_PARLIST = 'MOTHER'                                               535
      CALL AXPOSITION                                                     535
C *                                                                       535
* -------------------------------------------------------
      CALL AGSENDM                                                        537
      RETURN                                                              537
C Begin Local Procedure IBMO                                              537
C IBMO IS THE MOTHER OF THE ISTB DETECTOR                                 537
5010  CONTINUE                                                            537
         AG_TITLE='IBMO'                                                  537
         AG_MODULE=MODULE                                                 537
         AG_MARK='V00'                                                    537
         CALL AGSPUSH                                                     537
         AG_MODULE=MODULE                                                 537
C    *                                                                    537
C    Geant MATERIAL : AIR ===> inherited arguments used <===              538
         CALL AGSRESET                                                    538
         AG_TITLE = 'AIR'                                                 538
         AG_EXNAME = 'MATERIAL'                                           538
         AG_PARLIST = 'NONE'                                              538
         CALL AXMATERIAL                                                  538
C    *                                                                    538
C    Geant ATTRIBUTE : IBMO ===> SEEN=0 COLO=2 <===                       538
         CALL AGSRESET                                                    539
         AG_SEEN = 0                                                      539
         AG_COLO = 2                                                      539
         AG_TITLE = 'IBMO'                                                539
         AG_EXNAME = 'ATTRIBUTE'                                          539
         AG_PARLIST = 'SEEN_COLO'                                         539
         CALL AXATTRIBUTE                                                 539
C    *                                                                    539
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  543
C    LLENGTH/2.0 <===                                                     543
         CALL AGSRESET                                                    543
         AG_RMIN = ISMG_RIN                                               543
         AG_RMAX = ISMG_ROUT                                              543
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     543
         AG_TITLE = 'TUBE'                                                543
         AG_EXNAME = 'SHAPE'                                              543
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      543
         CALL AXSHAPE                                                     543
C    *                                                                    543
*     Inner IST layer
C    use ISMG bank                                                        546
         BPATH_ISMG='ISMG*'                                               546
         IDNUM_ISMG(1)=0                                                  546
         ISMG_LAYER=2                                                     546
         CALL AGDGETP('ISTBGEO1','*',-999,'ISMG',NISMG_LAYER,             546
     *   RE_ISMG_LAYER,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,       546
     *   BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                546
C    Create IBMY :                                                        547
C    Call To Local Procedure IBMY                                         547
         ASSIGN 5040 TO BLOCK_IBMY                                        547
         GO TO  5030                                                      547
5040     CONTINUE                                                         547
C    *                                                                    547
C    Geant POSITION : IBMY ===> X=0.0 Y=0.0 Z=0.0 <===                    548
         CALL AGSRESET                                                    548
         AG_X = 0.0                                                       548
         AG_Y = 0.0                                                       548
         AG_Z = 0.0                                                       548
         AG_TITLE = 'IBMY'                                                548
         AG_EXNAME = 'POSITION'                                           548
         AG_PARLIST = 'X_Y_Z'                                             548
         CALL AXPOSITION                                                  548
C    *                                                                    548
*     Outer IST layer
C    use ISMG bank                                                        551
         BPATH_ISMG='ISMG*'                                               551
         IDNUM_ISMG(1)=0                                                  551
         ISMG_LAYER=3                                                     551
         CALL AGDGETP('ISTBGEO1','*',-999,'ISMG',NISMG_LAYER,             551
     *   RE_ISMG_LAYER,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,       551
     *   BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                551
C    Create IBMZ :                                                        552
C    Call To Local Procedure IBMZ                                         552
         ASSIGN 5060 TO BLOCK_IBMZ                                        552
         GO TO  5050                                                      552
5060     CONTINUE                                                         552
C    *                                                                    552
C    Geant POSITION : IBMZ ===> X=0.0 Y=0.0 Z=0.0 <===                    553
         CALL AGSRESET                                                    553
         AG_X = 0.0                                                       553
         AG_Y = 0.0                                                       553
         AG_Z = 0.0                                                       553
         AG_TITLE = 'IBMZ'                                                553
         AG_EXNAME = 'POSITION'                                           553
         AG_PARLIST = 'X_Y_Z'                                             553
         CALL AXPOSITION                                                  553
C    *                                                                    553
*     place the interconnects, east and west side
C    use ISBG bank                                                        556
         BPATH_ISBG='ISBG*'                                               556
         IDNUM_ISBG(1)=0                                                  556
         ISBG_LAYER=2                                                     556
         CALL AGDGETP('ISTBGEO1','*',-999,'ISBG',NISBG_LAYER,             556
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       556
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                556
C    use ISRR bank                                                        557
         BPATH_ISRR='ISRR*'                                               557
         IDNUM_ISRR(1)=0                                                  557
         ISRR_LAYER=2                                                     557
         CALL AGDGETP('ISTBGEO1','*',-999,'ISRR',NISRR_LAYER,             557
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       557
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                557
C    use ISCC bank                                                        558
         BPATH_ISCC='ISCC*'                                               558
         IDNUM_ISCC(1)=0                                                  558
         ISCC_VERSION=1                                                   558
         CALL AGDGETP('ISTBGEO1','*',-999,'ISCC',NISCC_VERSION,           558
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     558
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                558
C    Create IBME :                                                        559
C    Call To Local Procedure IBME                                         559
         ASSIGN 5080 TO BLOCK_IBME                                        559
         GO TO  5070                                                      559
5080     CONTINUE                                                         559
C    *                                                                    559
C    Geant POSITION : IBME ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  562
C    R_LENGTH+ISCC_LENGTH/2.0) <===                                       562
         CALL AGSRESET                                                    562
         AG_X = 0.0                                                       562
         AG_Y = 0.0                                                       562
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)         562
         AG_TITLE = 'IBME'                                                562
         AG_EXNAME = 'POSITION'                                           562
         AG_PARLIST = 'X_Y_Z'                                             562
         CALL AXPOSITION                                                  562
C    *                                                                    562
C    Create IBMW :                                                        563
C    Call To Local Procedure IBMW                                         563
         ASSIGN 5100 TO BLOCK_IBMW                                        563
         GO TO  5090                                                      563
5100     CONTINUE                                                         563
C    *                                                                    563
C    Geant POSITION : IBMW ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  566
C    RR_LENGTH+ISCC_LENGTH/2.0) <===                                      566
         CALL AGSRESET                                                    566
         AG_X = 0.0                                                       566
         AG_Y = 0.0                                                       566
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)        566
         AG_TITLE = 'IBMW'                                                566
         AG_EXNAME = 'POSITION'                                           566
         AG_PARLIST = 'X_Y_Z'                                             566
         CALL AXPOSITION                                                  566
C    *                                                                    566
5011  CALL AGSPOPB                                                        568
      GO TO BLOCK_IBMO, (5010 ,5020)                                      568
C End of Local Procedure                                                  568
* -------------------------------------------------------
C Begin Local Procedure IBMY                                              571
C IBMY IS THE MOTHER OF THE INNER IST LAYER                               571
5030  CONTINUE                                                            571
         AG_TITLE='IBMY'                                                  571
         AG_MODULE=MODULE                                                 571
         AG_MARK='V00'                                                    571
         CALL AGSPUSH                                                     571
         AG_MODULE=MODULE                                                 571
C    *                                                                    571
C    Geant MATERIAL : AIR ===> inherited arguments used <===              572
         CALL AGSRESET                                                    572
         AG_TITLE = 'AIR'                                                 572
         AG_EXNAME = 'MATERIAL'                                           572
         AG_PARLIST = 'NONE'                                              572
         CALL AXMATERIAL                                                  572
C    *                                                                    572
C    Geant ATTRIBUTE : IBMY ===> SEEN=0 COLO=2 <===                       572
         CALL AGSRESET                                                    573
         AG_SEEN = 0                                                      573
         AG_COLO = 2                                                      573
         AG_TITLE = 'IBMY'                                                573
         AG_EXNAME = 'ATTRIBUTE'                                          573
         AG_PARLIST = 'SEEN_COLO'                                         573
         CALL AXATTRIBUTE                                                 573
C    *                                                                    573
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  577
C    LLENGTH/2.0 <===                                                     577
         CALL AGSRESET                                                    577
         AG_RMIN = ISMG_RIN                                               577
         AG_RMAX = ISMG_ROUT                                              577
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     577
         AG_TITLE = 'TUBE'                                                577
         AG_EXNAME = 'SHAPE'                                              577
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      577
         CALL AXSHAPE                                                     577
C    *                                                                    577
* -- Some administration to calculate the thickness of a module
* -- Kept for (private) future use
C    use ISAN bank                                                        581
         BPATH_ISAN='ISAN*'                                               581
         IDNUM_ISAN(1)=0                                                  581
         ISAN_VERSION=1                                                   581
         CALL AGDGETP('ISTBGEO1','*',-999,'ISAN',NISAN_VERSION,           581
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     581
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                581
C    use ISGA bank                                                        582
         BPATH_ISGA='ISGA*'                                               582
         IDNUM_ISGA(1)=0                                                  582
         ISGA_VERSION=1                                                   582
         CALL AGDGETP('ISTBGEO1','*',-999,'ISGA',NISGA_VERSION,           582
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     582
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                582
C    use ISBG bank                                                        583
         BPATH_ISBG='ISBG*'                                               583
         IDNUM_ISBG(1)=0                                                  583
         ISBG_LAYER=1                                                     583
         CALL AGDGETP('ISTBGEO1','*',-999,'ISBG',NISBG_LAYER,             583
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       583
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                583
C    use ISGA bank                                                        584
         BPATH_ISGA='ISGA*'                                               584
         IDNUM_ISGA(1)=0                                                  584
         ISGA_VERSION=1                                                   584
         CALL AGDGETP('ISTBGEO1','*',-999,'ISGA',NISGA_VERSION,           584
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     584
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                584
C    use ISHY bank                                                        585
         BPATH_ISHY='ISHY*'                                               585
         IDNUM_ISHY(1)=0                                                  585
         ISHY_VERSION=1                                                   585
         CALL AGDGETP('ISTBGEO1','*',-999,'ISHY',NISHY_VERSION,           585
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     585
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                585
C    use ISCU bank                                                        586
         BPATH_ISCU='ISCU*'                                               586
         IDNUM_ISCU(1)=0                                                  586
         ISCU_VERSION=1                                                   586
         CALL AGDGETP('ISTBGEO1','*',-999,'ISCU',NISCU_VERSION,           586
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     586
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                586
C    use ISGB bank                                                        587
         BPATH_ISGB='ISGB*'                                               587
         IDNUM_ISGB(1)=0                                                  587
         ISGB_VERSION=1                                                   587
         CALL AGDGETP('ISTBGEO1','*',-999,'ISGB',NISGB_VERSION,           587
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     587
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                587
C    use ISCG bank                                                        588
         BPATH_ISCG='ISCG*'                                               588
         IDNUM_ISCG(1)=0                                                  588
         ISCG_VERSION=1                                                   588
         CALL AGDGETP('ISTBGEO1','*',-999,'ISCG',NISCG_VERSION,           588
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     588
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                588
         MOD_THK = 2.0*(ISAN_THK/                                         590
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+                   590
     *   ISCU_THK+ISGB_THK+ISCG_THK)                                      590
C    use ISBG bank                                                        592
         BPATH_ISBG='ISBG*'                                               592
         IDNUM_ISBG(1)=0                                                  592
         ISBG_LAYER=2                                                     592
         CALL AGDGETP('ISTBGEO1','*',-999,'ISBG',NISBG_LAYER,             592
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       592
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                592
         WRITE(*,*) '===>GEOINFO/istbgeo: Creating IST layer',            593
     *   ISBG_LAYER                                                       593
C    *                                                                    594
         NL=1                                                             594
            GO TO 5113                                                    594
5111        NL=NL+1                                                       594
5113        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5112                         594
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                594
C       BASE TILT, TO BE FURTHER CORRECTED                                596
            ANGLE = (360.0/ISBG_NLADDER)*NL                               596
*       GvN Offset perpendicular to the length of the module/ladder
*       this to move the midpoint of the sensors back on the required
*       radius after the tilting
            RLAD = ISBG_R+ISBG_PPEROFFSET                                 601
*       Individual ladders can be individually tilted by using
*       the aOffset parameter (angular offset), and the pOffset
*       (position offset), which is the individual lateral
*       displacement.
            ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                        608
*       The anglePos defines the POSITION of the center of the ladder
*       in space, along the lines of x=r*cos(...), y=r*sin(...)
*       have to correct and convert to radians:
C       SEE ABOVE COMMENT                                                 614
            ANGLEPOS = ANGLE*RADDEG - ANGLECORR                           614
            TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                      615
C       Create IBAM :                                                     617
C       Call To Local Procedure IBAM                                      617
            ASSIGN 5130 TO BLOCK_IBAM                                     617
            GO TO  5120                                                   617
5130        CONTINUE                                                      617
C       *                                                                 617
C       Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(ANG  621
C       LEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===                   621
            CALL AGSRESET                                                 621
            AG_X = TRUER*COS(ANGLEPOS)                                    621
            AG_Y = TRUER*SIN(ANGLEPOS)                                    621
            AG_Z = 0.0                                                    621
            AG_ALPHAN=AG_ALPHAN+1                                         621
            AG_ALPHAK(AG_ALPHAN)=3                                        621
            AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                       621
            AG_TITLE = 'IBAM'                                             621
            AG_EXNAME = 'POSITION'                                        621
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   621
            CALL AXPOSITION                                               621
C       *                                                                 621
         GO TO 5111                                                       623
5112     CONTINUE                                                         623
*     place 2 support rings at both ends of the ladders
C    use ISRR bank                                                        626
         BPATH_ISRR='ISRR*'                                               626
         IDNUM_ISRR(1)=0                                                  626
         ISRR_LAYER=2                                                     626
         CALL AGDGETP('ISTBGEO1','*',-999,'ISRR',NISRR_LAYER,             626
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       626
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                626
C    Create ISRI :                                                        627
C    Call To Local Procedure ISRI                                         627
         ASSIGN 5150 TO BLOCK_ISRI                                        627
         GO TO  5140                                                      627
5150     CONTINUE                                                         627
C    *                                                                    627
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  630
C    R_LENGTH/2.0) <===                                                   630
         CALL AGSRESET                                                    630
         AG_X = 0.0                                                       630
         AG_Y = 0.0                                                       630
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                     630
         AG_TITLE = 'ISRI'                                                630
         AG_EXNAME = 'POSITION'                                           630
         AG_PARLIST = 'X_Y_Z'                                             630
         CALL AXPOSITION                                                  630
C    *                                                                    630
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  630
C    RR_LENGTH/2.0) <===                                                  630
         CALL AGSRESET                                                    633
         AG_X = 0.0                                                       633
         AG_Y = 0.0                                                       633
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                    633
         AG_TITLE = 'ISRI'                                                633
         AG_EXNAME = 'POSITION'                                           633
         AG_PARLIST = 'X_Y_Z'                                             633
         CALL AXPOSITION                                                  633
C    *                                                                    633
5031  CALL AGSPOPB                                                        635
      GO TO BLOCK_IBMY, (5030 ,5040)                                      635
C End of Local Procedure                                                  635
* -------------------------------------------------------
C Begin Local Procedure IBMZ                                              638
C IBMZ IS THE MOTHER OF THE OUTER IST LAYER                               638
5050  CONTINUE                                                            638
         AG_TITLE='IBMZ'                                                  638
         AG_MODULE=MODULE                                                 638
         AG_MARK='V00'                                                    638
         CALL AGSPUSH                                                     638
         AG_MODULE=MODULE                                                 638
C    *                                                                    638
C    Geant MATERIAL : AIR ===> inherited arguments used <===              639
         CALL AGSRESET                                                    639
         AG_TITLE = 'AIR'                                                 639
         AG_EXNAME = 'MATERIAL'                                           639
         AG_PARLIST = 'NONE'                                              639
         CALL AXMATERIAL                                                  639
C    *                                                                    639
C    Geant ATTRIBUTE : IBMZ ===> SEEN=0 COLO=2 <===                       639
         CALL AGSRESET                                                    640
         AG_SEEN = 0                                                      640
         AG_COLO = 2                                                      640
         AG_TITLE = 'IBMZ'                                                640
         AG_EXNAME = 'ATTRIBUTE'                                          640
         AG_PARLIST = 'SEEN_COLO'                                         640
         CALL AXATTRIBUTE                                                 640
C    *                                                                    640
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  644
C    LLENGTH/2.0 <===                                                     644
         CALL AGSRESET                                                    644
         AG_RMIN = ISMG_RIN                                               644
         AG_RMAX = ISMG_ROUT                                              644
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     644
         AG_TITLE = 'TUBE'                                                644
         AG_EXNAME = 'SHAPE'                                              644
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      644
         CALL AXSHAPE                                                     644
C    *                                                                    644
C    use ISBG bank                                                        646
         BPATH_ISBG='ISBG*'                                               646
         IDNUM_ISBG(1)=0                                                  646
         ISBG_LAYER=3                                                     646
         CALL AGDGETP('ISTBGEO1','*',-999,'ISBG',NISBG_LAYER,             646
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       646
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                646
         WRITE(*,*) '===>GEOINFO/istbgeo: Creating IST layer',            647
     *   ISBG_LAYER                                                       647
C    *                                                                    648
         NL=1                                                             648
            GO TO 5163                                                    648
5161        NL=NL+1                                                       648
5163        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5162                         648
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                648
C       BASE TILT, TO BE FURTHER CORRECTED                                650
            ANGLE = (360.0/ISBG_NLADDER)*NL                               650
*       GvN Offset perpendicular to the length of the module/ladder
*       this to move the midpoint of the sensors back on the required
*       radius after the tilting
            RLAD = ISBG_R+ISBG_PPEROFFSET                                 655
*       Individual ladders can be individually tilted by using
*       the aOffset parameter (angular offset), and the pOffset
*       (position offset), which is the individual lateral
*       displacement.
            ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                        662
*       The anglePos defines the POSITION of the center of the ladder
*       in space, along the lines of x=r*cos(...), y=r*sin(...)
*       have to correct and convert to radians:
C       SEE ABOVE COMMENT                                                 668
            ANGLEPOS = ANGLE*RADDEG - ANGLECORR                           668
            TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                      669
C       Create IBAM :                                                     671
C       Call To Local Procedure IBAM                                      671
            ASSIGN 5170 TO BLOCK_IBAM                                     671
            GO TO  5120                                                   671
5170        CONTINUE                                                      671
C       *                                                                 671
C       Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(ANG  675
C       LEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===                   675
            CALL AGSRESET                                                 675
            AG_X = TRUER*COS(ANGLEPOS)                                    675
            AG_Y = TRUER*SIN(ANGLEPOS)                                    675
            AG_Z = 0.0                                                    675
            AG_ALPHAN=AG_ALPHAN+1                                         675
            AG_ALPHAK(AG_ALPHAN)=3                                        675
            AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                       675
            AG_TITLE = 'IBAM'                                             675
            AG_EXNAME = 'POSITION'                                        675
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   675
            CALL AXPOSITION                                               675
C       *                                                                 675
         GO TO 5161                                                       677
5162     CONTINUE                                                         677
*     place 2 support rings at both ends of the ladders
C    use ISRR bank                                                        680
         BPATH_ISRR='ISRR*'                                               680
         IDNUM_ISRR(1)=0                                                  680
         ISRR_LAYER=3                                                     680
         CALL AGDGETP('ISTBGEO1','*',-999,'ISRR',NISRR_LAYER,             680
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       680
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                680
C    Create ISRI :                                                        681
C    Call To Local Procedure ISRI                                         681
         ASSIGN 5180 TO BLOCK_ISRI                                        681
         GO TO  5140                                                      681
5180     CONTINUE                                                         681
C    *                                                                    681
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  684
C    R_LENGTH/2.0) <===                                                   684
         CALL AGSRESET                                                    684
         AG_X = 0.0                                                       684
         AG_Y = 0.0                                                       684
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                     684
         AG_TITLE = 'ISRI'                                                684
         AG_EXNAME = 'POSITION'                                           684
         AG_PARLIST = 'X_Y_Z'                                             684
         CALL AXPOSITION                                                  684
C    *                                                                    684
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  684
C    RR_LENGTH/2.0) <===                                                  684
         CALL AGSRESET                                                    687
         AG_X = 0.0                                                       687
         AG_Y = 0.0                                                       687
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                    687
         AG_TITLE = 'ISRI'                                                687
         AG_EXNAME = 'POSITION'                                           687
         AG_PARLIST = 'X_Y_Z'                                             687
         CALL AXPOSITION                                                  687
C    *                                                                    687
5051  CALL AGSPOPB                                                        689
      GO TO BLOCK_IBMZ, (5050 ,5060)                                      689
C End of Local Procedure                                                  689
* -----------------------------------------------------------------------------
C Begin Local Procedure IBME                                              692
C IBME IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE WEST SIDE      692
5070  CONTINUE                                                            692
         AG_TITLE='IBME'                                                  692
         AG_MODULE=MODULE                                                 692
         AG_MARK='V00'                                                    692
         CALL AGSPUSH                                                     692
         AG_MODULE=MODULE                                                 692
C    *                                                                    692
C    Geant MATERIAL : AIR ===> inherited arguments used <===              693
         CALL AGSRESET                                                    693
         AG_TITLE = 'AIR'                                                 693
         AG_EXNAME = 'MATERIAL'                                           693
         AG_PARLIST = 'NONE'                                              693
         CALL AXMATERIAL                                                  693
C    *                                                                    693
C    Geant ATTRIBUTE : IBME ===> SEEN=0 COLO=2 <===                       693
         CALL AGSRESET                                                    694
         AG_SEEN = 0                                                      694
         AG_COLO = 2                                                      694
         AG_TITLE = 'IBME'                                                694
         AG_EXNAME = 'ATTRIBUTE'                                          694
         AG_PARLIST = 'SEEN_COLO'                                         694
         CALL AXATTRIBUTE                                                 694
C    *                                                                    694
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  700
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     700
         CALL AGSRESET                                                    700
         AG_RMN1 = ISCC_RIN1                                              700
         AG_RMX1 = ISCC_ROUT1                                             700
         AG_RMN2 = ISCC_RIN2                                              700
         AG_RMX2 = ISCC_ROUT2                                             700
         AG_DZ = ISCC_LENGTH/2.0                                          700
         AG_TITLE = 'CONE'                                                700
         AG_EXNAME = 'SHAPE'                                              700
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            700
         CALL AXSHAPE                                                     700
C    *                                                                    700
C    use ISBG bank                                                        702
         BPATH_ISBG='ISBG*'                                               702
         IDNUM_ISBG(1)=0                                                  702
         ISBG_LAYER=2                                                     702
         CALL AGDGETP('ISTBGEO1','*',-999,'ISBG',NISBG_LAYER,             702
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       702
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                702
C    use ISRR bank                                                        703
         BPATH_ISRR='ISRR*'                                               703
         IDNUM_ISRR(1)=0                                                  703
         ISRR_LAYER=2                                                     703
         CALL AGDGETP('ISTBGEO1','*',-999,'ISRR',NISRR_LAYER,             703
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       703
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                703
C    use ISCC bank                                                        704
         BPATH_ISCC='ISCC*'                                               704
         IDNUM_ISCC(1)=0                                                  704
         ISCC_VERSION=1                                                   704
         CALL AGDGETP('ISTBGEO1','*',-999,'ISCC',NISCC_VERSION,           704
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     704
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                704
C    Create ISCO :                                                        705
C    Call To Local Procedure ISCO                                         705
         ASSIGN 5200 TO BLOCK_ISCO                                        705
         GO TO  5190                                                      705
5200     CONTINUE                                                         705
C    *                                                                    705
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 <===                  708
         CALL AGSRESET                                                    708
         AG_X = 0.0                                                       708
         AG_Y = 0.0                                                       708
         AG_Z = 0.0                                                       708
         AG_TITLE = 'ISCO'                                                708
         AG_EXNAME = 'POSITION'                                           708
         AG_PARLIST = 'X_Y_Z'                                             708
         CALL AXPOSITION                                                  708
C    *                                                                    708
5071  CALL AGSPOPB                                                        710
      GO TO BLOCK_IBME, (5070 ,5080)                                      710
C End of Local Procedure                                                  710
* -----------------------------------------------------------------------------
C Begin Local Procedure IBMW                                              713
C IBMW IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE EAST SIDE      713
5090  CONTINUE                                                            713
         AG_TITLE='IBMW'                                                  713
         AG_MODULE=MODULE                                                 713
         AG_MARK='V00'                                                    713
         CALL AGSPUSH                                                     713
         AG_MODULE=MODULE                                                 713
C    *                                                                    713
C    Geant MATERIAL : AIR ===> inherited arguments used <===              714
         CALL AGSRESET                                                    714
         AG_TITLE = 'AIR'                                                 714
         AG_EXNAME = 'MATERIAL'                                           714
         AG_PARLIST = 'NONE'                                              714
         CALL AXMATERIAL                                                  714
C    *                                                                    714
C    Geant ATTRIBUTE : IBMW ===> SEEN=0 COLO=2 <===                       714
         CALL AGSRESET                                                    715
         AG_SEEN = 0                                                      715
         AG_COLO = 2                                                      715
         AG_TITLE = 'IBMW'                                                715
         AG_EXNAME = 'ATTRIBUTE'                                          715
         AG_PARLIST = 'SEEN_COLO'                                         715
         CALL AXATTRIBUTE                                                 715
C    *                                                                    715
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN2 RMX1=ISCC_ROUT2 RMN2 = ISCC_  715
C    RIN1 RMX2 = ISCC_ROUT1 DZ = ISCC_LENGTH/2.0 <===                     715
         CALL AGSRESET                                                    720
         AG_RMN1 = ISCC_RIN2                                              720
         AG_RMX1 = ISCC_ROUT2                                             720
         AG_RMN2 = ISCC_RIN1                                              720
         AG_RMX2 = ISCC_ROUT1                                             720
         AG_DZ = ISCC_LENGTH/2.0                                          720
         AG_TITLE = 'CONE'                                                720
         AG_EXNAME = 'SHAPE'                                              720
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            720
         CALL AXSHAPE                                                     720
C    *                                                                    720
C    use ISBG bank                                                        722
         BPATH_ISBG='ISBG*'                                               722
         IDNUM_ISBG(1)=0                                                  722
         ISBG_LAYER=2                                                     722
         CALL AGDGETP('ISTBGEO1','*',-999,'ISBG',NISBG_LAYER,             722
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       722
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                722
C    use ISRR bank                                                        723
         BPATH_ISRR='ISRR*'                                               723
         IDNUM_ISRR(1)=0                                                  723
         ISRR_LAYER=2                                                     723
         CALL AGDGETP('ISTBGEO1','*',-999,'ISRR',NISRR_LAYER,             723
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       723
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                723
C    use ISCC bank                                                        724
         BPATH_ISCC='ISCC*'                                               724
         IDNUM_ISCC(1)=0                                                  724
         ISCC_VERSION=1                                                   724
         CALL AGDGETP('ISTBGEO1','*',-999,'ISCC',NISCC_VERSION,           724
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     724
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                724
C    Create ISCO :                                                        725
C    Call To Local Procedure ISCO                                         725
         ASSIGN 5210 TO BLOCK_ISCO                                        725
         GO TO  5190                                                      725
5210     CONTINUE                                                         725
C    *                                                                    725
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 ALPHAX = 180 <===     729
         CALL AGSRESET                                                    729
         AG_X = 0.0                                                       729
         AG_Y = 0.0                                                       729
         AG_Z = 0.0                                                       729
         AG_ALPHAN=AG_ALPHAN+1                                            729
         AG_ALPHAK(AG_ALPHAN)=1                                           729
         AG_ALPHAL(AG_ALPHAN)=180                                         729
         AG_TITLE = 'ISCO'                                                729
         AG_EXNAME = 'POSITION'                                           729
         AG_PARLIST = 'X_Y_Z_ALPHAX'                                      729
         CALL AXPOSITION                                                  729
C    *                                                                    729
5091  CALL AGSPOPB                                                        731
      GO TO BLOCK_IBMW, (5090 ,5100)                                      731
C End of Local Procedure                                                  731
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              734
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             734
5120  CONTINUE                                                            734
         AG_TITLE='IBAM'                                                  734
         AG_MODULE=MODULE                                                 734
         AG_MARK='V00'                                                    734
         CALL AGSPUSH                                                     734
         AG_MODULE=MODULE                                                 734
C    *                                                                    734
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=2 <===                       735
         CALL AGSRESET                                                    735
         AG_SEEN = 0                                                      735
         AG_COLO = 2                                                      735
         AG_TITLE = 'IBAM'                                                735
         AG_EXNAME = 'ATTRIBUTE'                                          735
         AG_PARLIST = 'SEEN_COLO'                                         735
         CALL AXATTRIBUTE                                                 735
C    *                                                                    735
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_LADDERTHK/2.  739
C    0 DZ = ISBG_LENGTH/2.0 <===                                          739
         CALL AGSRESET                                                    739
         AG_DX = ISBG_LADDERWIDTH/2.0                                     739
         AG_DY = ISBG_LADDERTHK/2.0                                       739
         AG_DZ = ISBG_LENGTH/2.0                                          739
         AG_TITLE = 'BOX'                                                 739
         AG_EXNAME = 'SHAPE'                                              739
         AG_PARLIST = 'DX_DY_DZ'                                          739
         CALL AXSHAPE                                                     739
C    *                                                                    739
C    use ISHY bank                                                        741
         BPATH_ISHY='ISHY*'                                               741
         IDNUM_ISHY(1)=0                                                  741
         ISHY_VERSION=1                                                   741
         CALL AGDGETP('ISTBGEO1','*',-999,'ISHY',NISHY_VERSION,           741
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     741
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                741
C    Create ISKH :                                                        742
C    Call To Local Procedure ISKH                                         742
         ASSIGN 5230 TO BLOCK_ISKH                                        742
         GO TO  5220                                                      742
5230     CONTINUE                                                         742
C    *                                                                    742
C    Create ISCL :                                                        743
C    Call To Local Procedure ISCL                                         743
         ASSIGN 5250 TO BLOCK_ISCL                                        743
         GO TO  5240                                                      743
5250     CONTINUE                                                         743
C    *                                                                    743
C    Create IBLM :                                                        744
C    Call To Local Procedure IBLM                                         744
         ASSIGN 5270 TO BLOCK_IBLM                                        744
         GO TO  5260                                                      744
5270     CONTINUE                                                         744
C    *                                                                    744
C    *                                                                    745
         NU=1                                                             745
            GO TO 5283                                                    745
5281        NU=NU+1                                                       745
5283        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5282                           745
* --    IST modules
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -ISBG_LENGTH/2.0+ISBG  749
C       _SENSORWIDTH*(NU-0.5) <===                                        749
            CALL AGSRESET                                                 749
            AG_X = 0.0                                                    749
            AG_Y = 0.0                                                    749
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             749
            AG_TITLE = 'IBLM'                                             749
            AG_EXNAME = 'POSITION'                                        749
            AG_PARLIST = 'X_Y_Z'                                          749
            CALL AXPOSITION                                               749
C       *                                                                 749
* --    Dummy readout cables (Kapton+Copper) stacked on top of modules
* --    Note that the first part of the cable (the hybrid) is already part of the module
* --    daisy chain cables as: 5 sensors + 5 sensors             (for layer 2)
* --                           5 sensors + 5 sensors + 3 sensors (for layer 3)
C       Check NU>5                                                        754
            IF (NU.GT.5) THEN                                             754
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK/2.0  757
C       ) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===             757
            CALL AGSRESET                                                 757
            AG_X = 0.0                                                    757
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK/2.0)                         757
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             757
            AG_TITLE = 'ISKH'                                             757
            AG_EXNAME = 'POSITION'                                        757
            AG_PARLIST = 'X_Y_Z'                                          757
            CALL AXPOSITION                                               757
C       *                                                                 757
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  757
C       U_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===    757
            CALL AGSRESET                                                 760
            AG_X = 0.0                                                    760
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)                760
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             760
            AG_TITLE = 'ISCL'                                             760
            AG_EXNAME = 'POSITION'                                        760
            AG_PARLIST = 'X_Y_Z'                                          760
            CALL AXPOSITION                                               760
C       *                                                                 760
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK/2.  760
C       0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===            760
            CALL AGSRESET                                                 763
            AG_X = 0.0                                                    763
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK/2.0)                        763
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             763
            AG_TITLE = 'ISKH'                                             763
            AG_EXNAME = 'POSITION'                                        763
            AG_PARLIST = 'X_Y_Z'                                          763
            CALL AXPOSITION                                               763
C       *                                                                 763
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  763
C       CU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===   763
            CALL AGSRESET                                                 766
            AG_X = 0.0                                                    766
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)               766
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             766
            AG_TITLE = 'ISCL'                                             766
            AG_EXNAME = 'POSITION'                                        766
            AG_PARLIST = 'X_Y_Z'                                          766
            CALL AXPOSITION                                               766
C       *                                                                 766
            ENDIF                                                         766
C       Check NU>10                                                       768
            IF (NU.GT.10) THEN                                            768
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  771
C       U_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.  771
C       5) <===                                                           771
            CALL AGSRESET                                                 771
            AG_X = 0.0                                                    771
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)       771
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             771
            AG_TITLE = 'ISKH'                                             771
            AG_EXNAME = 'POSITION'                                        771
            AG_PARLIST = 'X_Y_Z'                                          771
            CALL AXPOSITION                                               771
C       *                                                                 771
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  771
C       U_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWID  771
C       TH*(NU-0.5) <===                                                  771
            CALL AGSRESET                                                 774
            AG_X = 0.0                                                    774
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/  774
     *      2.0)                                                          774
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             774
            AG_TITLE = 'ISCL'                                             774
            AG_EXNAME = 'POSITION'                                        774
            AG_PARLIST = 'X_Y_Z'                                          774
            CALL AXPOSITION                                               774
C       *                                                                 774
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  774
C       CU_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0  774
C       .5) <===                                                          774
            CALL AGSRESET                                                 777
            AG_X = 0.0                                                    777
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)      777
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             777
            AG_TITLE = 'ISKH'                                             777
            AG_EXNAME = 'POSITION'                                        777
            AG_PARLIST = 'X_Y_Z'                                          777
            CALL AXPOSITION                                               777
C       *                                                                 777
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  777
C       CU_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWI  777
C       DTH*(NU-0.5) <===                                                 777
            CALL AGSRESET                                                 780
            AG_X = 0.0                                                    780
            AG_Y = -1.0*(MOD_THK/                                         780
     *      2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/2.0)                  780
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             780
            AG_TITLE = 'ISCL'                                             780
            AG_EXNAME = 'POSITION'                                        780
            AG_PARLIST = 'X_Y_Z'                                          780
            CALL AXPOSITION                                               780
C       *                                                                 780
            ENDIF                                                         780
         GO TO 5281                                                       783
5282     CONTINUE                                                         783
5121  CALL AGSPOPB                                                        785
      GO TO BLOCK_IBAM, (5120 ,5130,5170)                                 785
C End of Local Procedure                                                  785
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              788
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               788
5260  CONTINUE                                                            788
         AG_TITLE='IBLM'                                                  788
         AG_MODULE=MODULE                                                 788
         AG_MARK='V00'                                                    788
         CALL AGSPUSH                                                     788
         AG_MODULE=MODULE                                                 788
C    *                                                                    788
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=2 <===                       789
         CALL AGSRESET                                                    789
         AG_SEEN = 0                                                      789
         AG_COLO = 2                                                      789
         AG_TITLE = 'IBLM'                                                789
         AG_EXNAME = 'ATTRIBUTE'                                          789
         AG_PARLIST = 'SEEN_COLO'                                         789
         CALL AXATTRIBUTE                                                 789
C    *                                                                    789
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_SENSATHK/2.0  793
C     DZ = ISBG_SENSORLNGTH/2.0 <===                                      793
         CALL AGSRESET                                                    793
         AG_DX = ISBG_LADDERWIDTH/2.0                                     793
         AG_DY = ISBG_SENSATHK/2.0                                        793
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     793
         AG_TITLE = 'BOX'                                                 793
         AG_EXNAME = 'SHAPE'                                              793
         AG_PARLIST = 'DX_DY_DZ'                                          793
         CALL AXSHAPE                                                     793
C    *                                                                    793
* -- Start stacking all the parts of the module
* -- Note that the module are mirror symmetric wrt the x-z plane
* -- with exception of the readout chips (minimize average material!)
* -- Carbon foam
C    use ISAN bank                                                        800
         BPATH_ISAN='ISAN*'                                               800
         IDNUM_ISAN(1)=0                                                  800
         ISAN_VERSION=1                                                   800
         CALL AGDGETP('ISTBGEO1','*',-999,'ISAN',NISAN_VERSION,           800
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     800
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                800
C    Create ISTP :                                                        801
C    Call To Local Procedure ISTP                                         801
         ASSIGN 5300 TO BLOCK_ISTP                                        801
         GO TO  5290                                                      801
5300     CONTINUE                                                         801
C    *                                                                    801
C    Geant POSITION : ISTP ===> X=0.0 Y=0.0 Z = 0.0 <===                  804
         CALL AGSRESET                                                    804
         AG_X = 0.0                                                       804
         AG_Y = 0.0                                                       804
         AG_Z = 0.0                                                       804
         AG_TITLE = 'ISTP'                                                804
         AG_EXNAME = 'POSITION'                                           804
         AG_PARLIST = 'X_Y_Z'                                             804
         CALL AXPOSITION                                                  804
C    *                                                                    804
* -- Glue layers between foam and silicon
C    use ISGA bank                                                        807
         BPATH_ISGA='ISGA*'                                               807
         IDNUM_ISGA(1)=0                                                  807
         ISGA_VERSION=1                                                   807
         CALL AGDGETP('ISTBGEO1','*',-999,'ISGA',NISGA_VERSION,           807
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     807
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                807
C    Create ISLA :                                                        808
C    Call To Local Procedure ISLA                                         808
         ASSIGN 5320 TO BLOCK_ISLA                                        808
         GO TO  5310                                                      808
5320     CONTINUE                                                         808
C    *                                                                    808
C    Geant POSITION : ISLA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK/2.0 Z   811
C    = 0.0 <===                                                           811
         CALL AGSRESET                                                    811
         AG_X = 0.0                                                       811
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK/2.0                             811
         AG_Z = 0.0                                                       811
         AG_TITLE = 'ISLA'                                                811
         AG_EXNAME = 'POSITION'                                           811
         AG_PARLIST = 'X_Y_Z'                                             811
         CALL AXPOSITION                                                  811
C    *                                                                    811
C    Geant POSITION : ISLA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK/2.0 Z  811
C     = 0.0 <===                                                          811
         CALL AGSRESET                                                    814
         AG_X = 0.0                                                       814
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK/2.0                            814
         AG_Z = 0.0                                                       814
         AG_TITLE = 'ISLA'                                                814
         AG_EXNAME = 'POSITION'                                           814
         AG_PARLIST = 'X_Y_Z'                                             814
         CALL AXPOSITION                                                  814
C    *                                                                    814
* -- Silicon Sensors
C    Create IBSS :                                                        817
C    Call To Local Procedure IBSS                                         817
         ASSIGN 5340 TO BLOCK_IBSS                                        817
         GO TO  5330                                                      817
5340     CONTINUE                                                         817
C    *                                                                    817
C    Geant POSITION : IBSS ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  820
C    ENSORTHK/2.0 Z = 0.0 <===                                            820
         CALL AGSRESET                                                    820
         AG_X = 0.0                                                       820
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK/2.0              820
         AG_Z = 0.0                                                       820
         AG_TITLE = 'IBSS'                                                820
         AG_EXNAME = 'POSITION'                                           820
         AG_PARLIST = 'X_Y_Z'                                             820
         CALL AXPOSITION                                                  820
C    *                                                                    820
C    Geant POSITION : IBSS ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  820
C    SENSORTHK/2.0 Z = 0.0 ALPHAZ = 180 <===                              820
         CALL AGSRESET                                                    824
         AG_X = 0.0                                                       824
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK/2.0             824
         AG_Z = 0.0                                                       824
         AG_ALPHAN=AG_ALPHAN+1                                            824
         AG_ALPHAK(AG_ALPHAN)=3                                           824
         AG_ALPHAL(AG_ALPHAN)=180                                         824
         AG_TITLE = 'IBSS'                                                824
         AG_EXNAME = 'POSITION'                                           824
         AG_PARLIST = 'X_Y_Z_ALPHAZ'                                      824
         CALL AXPOSITION                                                  824
C    *                                                                    824
* -- Glue layers between silicon and hybrid
C    use ISGA bank                                                        827
         BPATH_ISGA='ISGA*'                                               827
         IDNUM_ISGA(1)=0                                                  827
         ISGA_VERSION=1                                                   827
         CALL AGDGETP('ISTBGEO1','*',-999,'ISGA',NISGA_VERSION,           827
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     827
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                827
C    Create ISLA :                                                        828
C    Call To Local Procedure ISLA                                         828
         ASSIGN 5350 TO BLOCK_ISLA                                        828
         GO TO  5310                                                      828
5350     CONTINUE                                                         828
C    *                                                                    828
C    Geant POSITION : ISLA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  831
C    ENSORTHK+ISGA_THK/2.0 Z = 0.0 <===                                   831
         CALL AGSRESET                                                    831
         AG_X = 0.0                                                       831
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK/2.0     831
         AG_Z = 0.0                                                       831
         AG_TITLE = 'ISLA'                                                831
         AG_EXNAME = 'POSITION'                                           831
         AG_PARLIST = 'X_Y_Z'                                             831
         CALL AXPOSITION                                                  831
C    *                                                                    831
C    Geant POSITION : ISLA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  831
C    SENSORTHK-ISGA_THK/2.0 Z = 0.0 <===                                  831
         CALL AGSRESET                                                    834
         AG_X = 0.0                                                       834
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK/2.0    834
         AG_Z = 0.0                                                       834
         AG_TITLE = 'ISLA'                                                834
         AG_EXNAME = 'POSITION'                                           834
         AG_PARLIST = 'X_Y_Z'                                             834
         CALL AXPOSITION                                                  834
C    *                                                                    834
* -- Kapton hybrids
C    use ISHY bank                                                        837
         BPATH_ISHY='ISHY*'                                               837
         IDNUM_ISHY(1)=0                                                  837
         ISHY_VERSION=1                                                   837
         CALL AGDGETP('ISTBGEO1','*',-999,'ISHY',NISHY_VERSION,           837
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     837
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                837
C    Create ISKH :                                                        838
C    Call To Local Procedure ISKH                                         838
         ASSIGN 5360 TO BLOCK_ISKH                                        838
         GO TO  5220                                                      838
5360     CONTINUE                                                         838
C    *                                                                    838
C    Geant POSITION : ISKH ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  841
C    ENSORTHK+ISGA_THK+ISHY_THK/2.0 Z = 0.0 <===                          841
         CALL AGSRESET                                                    841
         AG_X = 0.0                                                       841
         AG_Y = 1.0*ISAN_THK/                                             841
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK/2.0                841
         AG_Z = 0.0                                                       841
         AG_TITLE = 'ISKH'                                                841
         AG_EXNAME = 'POSITION'                                           841
         AG_PARLIST = 'X_Y_Z'                                             841
         CALL AXPOSITION                                                  841
C    *                                                                    841
C    Geant POSITION : ISKH ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  841
C    SENSORTHK-ISGA_THK-ISHY_THK/2.0 Z = 0.0 <===                         841
         CALL AGSRESET                                                    844
         AG_X = 0.0                                                       844
         AG_Y = -1.0*ISAN_THK/                                            844
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK/2.0                844
         AG_Z = 0.0                                                       844
         AG_TITLE = 'ISKH'                                                844
         AG_EXNAME = 'POSITION'                                           844
         AG_PARLIST = 'X_Y_Z'                                             844
         CALL AXPOSITION                                                  844
C    *                                                                    844
* -- Copper on the hybrid, 10 um total for couple of 5um lines at 50% coverage + ground plane
C    use ISCU bank                                                        847
         BPATH_ISCU='ISCU*'                                               847
         IDNUM_ISCU(1)=0                                                  847
         ISCU_VERSION=1                                                   847
         CALL AGDGETP('ISTBGEO1','*',-999,'ISCU',NISCU_VERSION,           847
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     847
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                847
C    Create ISCL :                                                        848
C    Call To Local Procedure ISCL                                         848
         ASSIGN 5370 TO BLOCK_ISCL                                        848
         GO TO  5240                                                      848
5370     CONTINUE                                                         848
C    *                                                                    848
C    Geant POSITION : ISCL ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  851
C    ENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0 Z = 0.0 <===                 851
         CALL AGSRESET                                                    851
         AG_X = 0.0                                                       851
         AG_Y = 1.0*ISAN_THK/                                             851
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0       851
         AG_Z = 0.0                                                       851
         AG_TITLE = 'ISCL'                                                851
         AG_EXNAME = 'POSITION'                                           851
         AG_PARLIST = 'X_Y_Z'                                             851
         CALL AXPOSITION                                                  851
C    *                                                                    851
C    Geant POSITION : ISCL ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  851
C    SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0 Z = 0.0 <===                851
         CALL AGSRESET                                                    854
         AG_X = 0.0                                                       854
         AG_Y = -1.0*ISAN_THK/                                            854
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0       854
         AG_Z = 0.0                                                       854
         AG_TITLE = 'ISCL'                                                854
         AG_EXNAME = 'POSITION'                                           854
         AG_PARLIST = 'X_Y_Z'                                             854
         CALL AXPOSITION                                                  854
C    *                                                                    854
* -- Glue layers between hybrid and chip
C    use ISGB bank                                                        857
         BPATH_ISGB='ISGB*'                                               857
         IDNUM_ISGB(1)=0                                                  857
         ISGB_VERSION=1                                                   857
         CALL AGDGETP('ISTBGEO1','*',-999,'ISGB',NISGB_VERSION,           857
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     857
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                857
C    Create ISLB :                                                        858
C    Call To Local Procedure ISLB                                         858
         ASSIGN 5390 TO BLOCK_ISLB                                        858
         GO TO  5380                                                      858
5390     CONTINUE                                                         858
C    *                                                                    858
C    Geant POSITION : ISLB ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  861
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  861
C    _THK+ISGB_THK/2.0 Z = 0.0 <===                                       861
         CALL AGSRESET                                                    861
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   861
         AG_Y = 1.0*ISAN_THK/                                             861
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          861
     *   ISGB_THK/2.0                                                     861
         AG_Z = 0.0                                                       861
         AG_TITLE = 'ISLB'                                                861
         AG_EXNAME = 'POSITION'                                           861
         AG_PARLIST = 'X_Y_Z'                                             861
         CALL AXPOSITION                                                  861
C    *                                                                    861
C    Geant POSITION : ISLB ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  861
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  861
C    CU_THK-ISGB_THK/2.0 Z = 0.0 <===                                     861
         CALL AGSRESET                                                    864
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  864
         AG_Y = -1.0*ISAN_THK/                                            864
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          864
     *   ISGB_THK/2.0                                                     864
         AG_Z = 0.0                                                       864
         AG_TITLE = 'ISLB'                                                864
         AG_EXNAME = 'POSITION'                                           864
         AG_PARLIST = 'X_Y_Z'                                             864
         CALL AXPOSITION                                                  864
C    *                                                                    864
* -- Readout chips, put at 2mm from the edge of the sensor
C    use ISCG bank                                                        867
         BPATH_ISCG='ISCG*'                                               867
         IDNUM_ISCG(1)=0                                                  867
         ISCG_VERSION=1                                                   867
         CALL AGDGETP('ISTBGEO1','*',-999,'ISCG',NISCG_VERSION,           867
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     867
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                867
C    Create ISSC :                                                        868
C    Call To Local Procedure ISSC                                         868
         ASSIGN 5410 TO BLOCK_ISSC                                        868
         GO TO  5400                                                      868
5410     CONTINUE                                                         868
C    *                                                                    868
C    Geant POSITION : ISSC ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  871
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  871
C    _THK+ISGB_THK+ISCG_THK/2.0 Z = 0.0 <===                              871
         CALL AGSRESET                                                    871
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   871
         AG_Y = 1.0*ISAN_THK/                                             871
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          871
     *   ISGB_THK+ISCG_THK/2.0                                            871
         AG_Z = 0.0                                                       871
         AG_TITLE = 'ISSC'                                                871
         AG_EXNAME = 'POSITION'                                           871
         AG_PARLIST = 'X_Y_Z'                                             871
         CALL AXPOSITION                                                  871
C    *                                                                    871
C    Geant POSITION : ISSC ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  871
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  871
C    CU_THK-ISGB_THK-ISCG_THK/2.0 Z = 0.0 <===                            871
         CALL AGSRESET                                                    874
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  874
         AG_Y = -1.0*ISAN_THK/                                            874
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          874
     *   ISGB_THK-ISCG_THK/2.0                                            874
         AG_Z = 0.0                                                       874
         AG_TITLE = 'ISSC'                                                874
         AG_EXNAME = 'POSITION'                                           874
         AG_PARLIST = 'X_Y_Z'                                             874
         CALL AXPOSITION                                                  874
C    *                                                                    874
5261  CALL AGSPOPB                                                        874
      GO TO BLOCK_IBLM, (5260 ,5270)                                      875
C End of Local Procedure                                                  875
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              878
C IBSS IS THE SILICON SENSOR                                              878
5330  CONTINUE                                                            878
         AG_TITLE='IBSS'                                                  878
         AG_MODULE=MODULE                                                 878
         AG_MARK='V00'                                                    878
         CALL AGSPUSH                                                     878
         AG_MODULE=MODULE                                                 878
C    *                                                                    878
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          879
         CALL AGSRESET                                                    879
         AG_TITLE = 'SILICON'                                             879
         AG_EXNAME = 'MATERIAL'                                           879
         AG_PARLIST = 'NONE'                                              879
         CALL AXMATERIAL                                                  879
C    *                                                                    879
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         879
         CALL AGSRESET                                                    880
         AG_ISVOL = 1                                                     880
         AG_TITLE = 'SENSITIVE'                                           880
         AG_EXNAME = 'MATERIAL'                                           880
         AG_PARLIST = 'ISVOL'                                             880
         CALL AXMATERIAL                                                  880
C    *                                                                    880
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=38 <===                      882
         CALL AGSRESET                                                    882
         AG_SEEN = 1                                                      882
         AG_COLO = 38                                                     882
         AG_TITLE = 'IBSS'                                                882
         AG_EXNAME = 'ATTRIBUTE'                                          882
         AG_PARLIST = 'SEEN_COLO'                                         882
         CALL AXATTRIBUTE                                                 882
C    *                                                                    882
C    Geant SHAPE : BOX ===> DX=ISBG_SENSORWIDTH/2.0 DY=ISBG_SENSORTHK/2.  886
C    0 DZ = ISBG_SENSORLNGTH/2.0 <===                                     886
         CALL AGSRESET                                                    886
         AG_DX = ISBG_SENSORWIDTH/2.0                                     886
         AG_DY = ISBG_SENSORTHK/2.0                                       886
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     886
         AG_TITLE = 'BOX'                                                 886
         AG_EXNAME = 'SHAPE'                                              886
         AG_PARLIST = 'DX_DY_DZ'                                          886
         CALL AXSHAPE                                                     886
C    *                                                                    886
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  890
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  890
C    ,0.001)                                                              890
         AG_TITLE = 'IBSS'                                                890
         AG_EXNAME = 'HITS'                                               890
         AG_TYPE=AG_MAGIC                                                 890
         CALL AGSDETV('IBSS')                                             890
C    *                                                                    890
         AG_PARLIST='Z'                                                   890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = AG_MAGIC                                              890
         AG_BIN=.001                                                      890
         AG_OPTION='S'                                                    890
         AG_FHMIN = AG_MAGIC                                              890
         AG_FHMAX = AG_MAGIC                                              890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='Y'                                                   890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = AG_MAGIC                                              890
         AG_BIN=.001                                                      890
         AG_FHMIN=AG_MAGIC                                                890
         AG_FHMAX=AG_MAGIC                                                890
         AG_OPTION='*'                                                    890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='X'                                                   890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = AG_MAGIC                                              890
         AG_BIN=.001                                                      890
         AG_FHMIN=AG_MAGIC                                                890
         AG_FHMAX=AG_MAGIC                                                890
         AG_OPTION='*'                                                    890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='PTOT'                                                890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = 16                                                    890
         AG_BIN=AG_MAGIC                                                  890
         AG_OPTION='*'                                                    890
         AG_FHMIN = 0                                                     890
         AG_FHMAX = 100                                                   890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='CX'                                                  890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = 10                                                    890
         AG_BIN=AG_MAGIC                                                  890
         AG_FHMIN=AG_MAGIC                                                890
         AG_FHMAX=AG_MAGIC                                                890
         AG_OPTION='*'                                                    890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='CY'                                                  890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = 10                                                    890
         AG_BIN=AG_MAGIC                                                  890
         AG_FHMIN=AG_MAGIC                                                890
         AG_FHMAX=AG_MAGIC                                                890
         AG_OPTION='*'                                                    890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='CZ'                                                  890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = 10                                                    890
         AG_BIN=AG_MAGIC                                                  890
         AG_FHMIN=AG_MAGIC                                                890
         AG_FHMAX=AG_MAGIC                                                890
         AG_OPTION='*'                                                    890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='SLENG'                                               890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = 16                                                    890
         AG_BIN=AG_MAGIC                                                  890
         AG_OPTION='*'                                                    890
         AG_FHMIN = 0                                                     890
         AG_FHMAX = 500                                                   890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='TOF'                                                 890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = 16                                                    890
         AG_BIN=AG_MAGIC                                                  890
         AG_OPTION='*'                                                    890
         AG_FHMIN = 0                                                     890
         AG_FHMAX = 1.E-6                                                 890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='STEP'                                                890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = AG_MAGIC                                              890
         AG_BIN=.01                                                       890
         AG_FHMIN=AG_MAGIC                                                890
         AG_FHMAX=AG_MAGIC                                                890
         AG_OPTION='*'                                                    890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         AG_PARLIST='ELOSS'                                               890
         AG_TITLE = 'DETH'                                                890
         AG_NBITS = 16                                                    890
         AG_BIN=AG_MAGIC                                                  890
         AG_OPTION='*'                                                    890
         AG_FHMIN = 0                                                     890
         AG_FHMAX = 0.001                                                 890
         CALL AGSDETH (0)                                                 890
C    *                                                                    890
         CALL AGSDETU('IBSS')                                             890
C    *                                                                    890
5331  CALL AGSPOPB                                                        892
      GO TO BLOCK_IBSS, (5330 ,5340)                                      892
C End of Local Procedure                                                  892
* -----------------------------------------------------------------------------
C Begin Local Procedure ISKH                                              895
C ISKH IS THE KAPTON HYBRID                                               895
5220  CONTINUE                                                            895
         AG_TITLE='ISKH'                                                  895
         AG_MODULE=MODULE                                                 895
         AG_MARK='V00'                                                    895
         CALL AGSPUSH                                                     895
         AG_MODULE=MODULE                                                 895
C    *                                                                    895
C    Geant ATTRIBUTE : ISKH ===> SEEN=1 COLO=42 <===                      896
         CALL AGSRESET                                                    896
         AG_SEEN = 1                                                      896
         AG_COLO = 42                                                     896
         AG_TITLE = 'ISKH'                                                896
         AG_EXNAME = 'ATTRIBUTE'                                          896
         AG_PARLIST = 'SEEN_COLO'                                         896
         CALL AXATTRIBUTE                                                 896
C    *                                                                    896
C    KAPTON C22-H10-N2-O4                                                 898
C    Geant COMPONENT : C ===> A=12 Z=6 W=22.0*12.0/366.0 <===             899
         CALL AGSRESET                                                    899
         AG_A = 12                                                        899
         AG_Z = 6                                                         899
         AG_W = 22.0*12.0/366.0                                           899
         AG_TITLE = 'C'                                                   899
         AG_EXNAME = 'COMPONENT'                                          899
         AG_PARLIST = 'A_Z_W'                                             899
         CALL AXCOMPONENT                                                 899
C    *                                                                    899
C    Geant COMPONENT : H ===> A=1 Z=1 W=10.0*1.0/366.0 <===               899
         CALL AGSRESET                                                    900
         AG_A = 1                                                         900
         AG_Z = 1                                                         900
         AG_W = 10.0*1.0/366.0                                            900
         AG_TITLE = 'H'                                                   900
         AG_EXNAME = 'COMPONENT'                                          900
         AG_PARLIST = 'A_Z_W'                                             900
         CALL AXCOMPONENT                                                 900
C    *                                                                    900
C    Geant COMPONENT : N ===> A=14 Z=7 W=2.0*14.0/366.0 <===              900
         CALL AGSRESET                                                    901
         AG_A = 14                                                        901
         AG_Z = 7                                                         901
         AG_W = 2.0*14.0/366.0                                            901
         AG_TITLE = 'N'                                                   901
         AG_EXNAME = 'COMPONENT'                                          901
         AG_PARLIST = 'A_Z_W'                                             901
         CALL AXCOMPONENT                                                 901
C    *                                                                    901
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/366.0 <===              901
         CALL AGSRESET                                                    902
         AG_A = 16                                                        902
         AG_Z = 8                                                         902
         AG_W = 4.0*16.0/366.0                                            902
         AG_TITLE = 'O'                                                   902
         AG_EXNAME = 'COMPONENT'                                          902
         AG_PARLIST = 'A_Z_W'                                             902
         CALL AXCOMPONENT                                                 902
C    *                                                                    902
C    Geant MIXTURE : KAPTON ===> DENS=1.42 <===                           902
         CALL AGSRESET                                                    903
         AG_DENS = 1.42                                                   903
         AG_TITLE = 'KAPTON'                                              903
         AG_EXNAME = 'MIXTURE'                                            903
         AG_PARLIST = 'DENS'                                              903
         CALL AXMIXTURE                                                   903
C    *                                                                    903
C    Geant SHAPE : BOX ===> DX=ISHY_H/2.0 DY=ISHY_THK/2.0 DZ = ISHY_W/2.  907
C    0 <===                                                               907
         CALL AGSRESET                                                    907
         AG_DX = ISHY_H/2.0                                               907
         AG_DY = ISHY_THK/2.0                                             907
         AG_DZ = ISHY_W/2.0                                               907
         AG_TITLE = 'BOX'                                                 907
         AG_EXNAME = 'SHAPE'                                              907
         AG_PARLIST = 'DX_DY_DZ'                                          907
         CALL AXSHAPE                                                     907
C    *                                                                    907
5221  CALL AGSPOPB                                                        909
      GO TO BLOCK_ISKH, (5220 ,5230,5360)                                 909
C End of Local Procedure                                                  909
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCL                                              912
C ISCL IS THE COPPER LAYER ON THE KAPTON HYBRID                           912
5240  CONTINUE                                                            912
         AG_TITLE='ISCL'                                                  912
         AG_MODULE=MODULE                                                 912
         AG_MARK='V00'                                                    912
         CALL AGSPUSH                                                     912
         AG_MODULE=MODULE                                                 912
C    *                                                                    912
C    Geant ATTRIBUTE : ISCL ===> SEEN=1 COLO=46 <===                      913
         CALL AGSRESET                                                    913
         AG_SEEN = 1                                                      913
         AG_COLO = 46                                                     913
         AG_TITLE = 'ISCL'                                                913
         AG_EXNAME = 'ATTRIBUTE'                                          913
         AG_PARLIST = 'SEEN_COLO'                                         913
         CALL AXATTRIBUTE                                                 913
C    *                                                                    913
C    Geant MATERIAL : COPPER ===> inherited arguments used <===           915
         CALL AGSRESET                                                    915
         AG_TITLE = 'COPPER'                                              915
         AG_EXNAME = 'MATERIAL'                                           915
         AG_PARLIST = 'NONE'                                              915
         CALL AXMATERIAL                                                  915
C    *                                                                    915
C    Geant SHAPE : BOX ===> DX=ISCU_H/2.0 DY=ISCU_THK/2.0 DZ = ISCU_W/2.  919
C    0 <===                                                               919
         CALL AGSRESET                                                    919
         AG_DX = ISCU_H/2.0                                               919
         AG_DY = ISCU_THK/2.0                                             919
         AG_DZ = ISCU_W/2.0                                               919
         AG_TITLE = 'BOX'                                                 919
         AG_EXNAME = 'SHAPE'                                              919
         AG_PARLIST = 'DX_DY_DZ'                                          919
         CALL AXSHAPE                                                     919
C    *                                                                    919
5241  CALL AGSPOPB                                                        921
      GO TO BLOCK_ISCL, (5240 ,5250,5370)                                 921
C End of Local Procedure                                                  921
* -----------------------------------------------------------------------------
C Begin Local Procedure ISTP                                              924
C ISTP IS THE CARBON FOAM                                                 924
5290  CONTINUE                                                            924
         AG_TITLE='ISTP'                                                  924
         AG_MODULE=MODULE                                                 924
         AG_MARK='V00'                                                    924
         CALL AGSPUSH                                                     924
         AG_MODULE=MODULE                                                 924
C    *                                                                    924
C    Geant ATTRIBUTE : ISTP ===> SEEN=1 COLO=13 <===                      925
         CALL AGSRESET                                                    925
         AG_SEEN = 1                                                      925
         AG_COLO = 13                                                     925
         AG_TITLE = 'ISTP'                                                925
         AG_EXNAME = 'ATTRIBUTE'                                          925
         AG_PARLIST = 'SEEN_COLO'                                         925
         CALL AXATTRIBUTE                                                 925
C    *                                                                    925
C    CARBON FOAM DENSITY 0.24                                             927
C    0.1 COMES FROM 4-5% OF CARBON DENSITY FOR CARBON FOAM                928
C    0.24 IS WHEN WE ARTICIALLY INCREASE THE DENSITY TO SQUEEZE INTO 1.6  929
C    86 MM                                                                929
C    BETWEEN THE SENSORS                                                  930
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        931
         CALL AGSRESET                                                    931
         AG_A = 12                                                        931
         AG_Z = 6                                                         931
         AG_W = 0.05                                                      931
         AG_TITLE = 'C'                                                   931
         AG_EXNAME = 'COMPONENT'                                          931
         AG_PARLIST = 'A_Z_W'                                             931
         CALL AXCOMPONENT                                                 931
C    *                                                                    931
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        931
         CALL AGSRESET                                                    932
         AG_A = 14                                                        932
         AG_Z = 7                                                         932
         AG_W = 0.95                                                      932
         AG_TITLE = 'N'                                                   932
         AG_EXNAME = 'COMPONENT'                                          932
         AG_PARLIST = 'A_Z_W'                                             932
         CALL AXCOMPONENT                                                 932
C    *                                                                    932
C    Geant MIXTURE : CFOAM ===> DENS=0.24 <===                            932
         CALL AGSRESET                                                    933
         AG_DENS = 0.24                                                   933
         AG_TITLE = 'CFOAM'                                               933
         AG_EXNAME = 'MIXTURE'                                            933
         AG_PARLIST = 'DENS'                                              933
         CALL AXMIXTURE                                                   933
C    *                                                                    933
C    Geant SHAPE : BOX ===> DX=ISAN_H/2.0 DY=ISAN_THK/2.0 DZ = ISAN_W/2.  937
C    0 <===                                                               937
         CALL AGSRESET                                                    937
         AG_DX = ISAN_H/2.0                                               937
         AG_DY = ISAN_THK/2.0                                             937
         AG_DZ = ISAN_W/2.0                                               937
         AG_TITLE = 'BOX'                                                 937
         AG_EXNAME = 'SHAPE'                                              937
         AG_PARLIST = 'DX_DY_DZ'                                          937
         CALL AXSHAPE                                                     937
C    *                                                                    937
5291  CALL AGSPOPB                                                        939
      GO TO BLOCK_ISTP, (5290 ,5300)                                      939
C End of Local Procedure                                                  939
* -----------------------------------------------------------------------------
C Begin Local Procedure ISSC                                              942
C ISSC IS THE READOUT CHIP                                                942
5400  CONTINUE                                                            942
         AG_TITLE='ISSC'                                                  942
         AG_MODULE=MODULE                                                 942
         AG_MARK='V00'                                                    942
         CALL AGSPUSH                                                     942
         AG_MODULE=MODULE                                                 942
C    *                                                                    942
C    Geant ATTRIBUTE : ISSC ===> SEEN=1 COLO=37 <===                      943
         CALL AGSRESET                                                    943
         AG_SEEN = 1                                                      943
         AG_COLO = 37                                                     943
         AG_TITLE = 'ISSC'                                                943
         AG_EXNAME = 'ATTRIBUTE'                                          943
         AG_PARLIST = 'SEEN_COLO'                                         943
         CALL AXATTRIBUTE                                                 943
C    *                                                                    943
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          945
         CALL AGSRESET                                                    945
         AG_TITLE = 'SILICON'                                             945
         AG_EXNAME = 'MATERIAL'                                           945
         AG_PARLIST = 'NONE'                                              945
         CALL AXMATERIAL                                                  945
C    *                                                                    945
C    Geant SHAPE : BOX ===> DX=ISCG_W/2.0 DY=ISCG_THK/2.0 DZ = ISCG_H/2.  949
C    0 <===                                                               949
         CALL AGSRESET                                                    949
         AG_DX = ISCG_W/2.0                                               949
         AG_DY = ISCG_THK/2.0                                             949
         AG_DZ = ISCG_H/2.0                                               949
         AG_TITLE = 'BOX'                                                 949
         AG_EXNAME = 'SHAPE'                                              949
         AG_PARLIST = 'DX_DY_DZ'                                          949
         CALL AXSHAPE                                                     949
C    *                                                                    949
5401  CALL AGSPOPB                                                        951
      GO TO BLOCK_ISSC, (5400 ,5410)                                      951
C End of Local Procedure                                                  951
* -----------------------------------------------------------------------------
C Begin Local Procedure ISLA                                              954
C ISLA IS THE LARGE GLUE LAYER BETWEEN CARBON FOAM AND SENSOR (AND SENSO  954
C R AND HYBRID)                                                           954
5310  CONTINUE                                                            954
         AG_TITLE='ISLA'                                                  954
         AG_MODULE=MODULE                                                 954
         AG_MARK='V00'                                                    954
         CALL AGSPUSH                                                     954
         AG_MODULE=MODULE                                                 954
C    *                                                                    954
C    Geant ATTRIBUTE : ISLA ===> SEEN=1 COLO=11 <===                      955
         CALL AGSRESET                                                    955
         AG_SEEN = 1                                                      955
         AG_COLO = 11                                                     955
         AG_TITLE = 'ISLA'                                                955
         AG_EXNAME = 'ATTRIBUTE'                                          955
         AG_PARLIST = 'SEEN_COLO'                                         955
         CALL AXATTRIBUTE                                                 955
C    *                                                                    955
C    EPOXY C8-H14-O4                                                      957
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              958
         CALL AGSRESET                                                    958
         AG_A = 12                                                        958
         AG_Z = 6                                                         958
         AG_W = 8.0*12.0/174.0                                            958
         AG_TITLE = 'C'                                                   958
         AG_EXNAME = 'COMPONENT'                                          958
         AG_PARLIST = 'A_Z_W'                                             958
         CALL AXCOMPONENT                                                 958
C    *                                                                    958
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               958
         CALL AGSRESET                                                    959
         AG_A = 1                                                         959
         AG_Z = 1                                                         959
         AG_W = 14.0*1.0/174.0                                            959
         AG_TITLE = 'H'                                                   959
         AG_EXNAME = 'COMPONENT'                                          959
         AG_PARLIST = 'A_Z_W'                                             959
         CALL AXCOMPONENT                                                 959
C    *                                                                    959
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              959
         CALL AGSRESET                                                    960
         AG_A = 16                                                        960
         AG_Z = 8                                                         960
         AG_W = 4.0*16.0/174.0                                            960
         AG_TITLE = 'O'                                                   960
         AG_EXNAME = 'COMPONENT'                                          960
         AG_PARLIST = 'A_Z_W'                                             960
         CALL AXCOMPONENT                                                 960
C    *                                                                    960
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             960
         CALL AGSRESET                                                    961
         AG_DENS = 1.3                                                    961
         AG_TITLE = 'EPOXY'                                               961
         AG_EXNAME = 'MIXTURE'                                            961
         AG_PARLIST = 'DENS'                                              961
         CALL AXMIXTURE                                                   961
C    *                                                                    961
C    Geant SHAPE : BOX ===> DX=ISGA_W/2.0 DY=ISGA_THK/2.0 DZ = ISGA_H/2.  965
C    0 <===                                                               965
         CALL AGSRESET                                                    965
         AG_DX = ISGA_W/2.0                                               965
         AG_DY = ISGA_THK/2.0                                             965
         AG_DZ = ISGA_H/2.0                                               965
         AG_TITLE = 'BOX'                                                 965
         AG_EXNAME = 'SHAPE'                                              965
         AG_PARLIST = 'DX_DY_DZ'                                          965
         CALL AXSHAPE                                                     965
C    *                                                                    965
5311  CALL AGSPOPB                                                        967
      GO TO BLOCK_ISLA, (5310 ,5320,5350)                                 967
C End of Local Procedure                                                  967
* -----------------------------------------------------------------------------
C Begin Local Procedure ISLB                                              970
C ISLB IS THE SMALL GLUE LAYER BETWEEN HYBRID AND CHIP                    970
5380  CONTINUE                                                            970
         AG_TITLE='ISLB'                                                  970
         AG_MODULE=MODULE                                                 970
         AG_MARK='V00'                                                    970
         CALL AGSPUSH                                                     970
         AG_MODULE=MODULE                                                 970
C    *                                                                    970
C    Geant ATTRIBUTE : ISLA ===> SEEN=1 COLO=11 <===                      971
         CALL AGSRESET                                                    971
         AG_SEEN = 1                                                      971
         AG_COLO = 11                                                     971
         AG_TITLE = 'ISLA'                                                971
         AG_EXNAME = 'ATTRIBUTE'                                          971
         AG_PARLIST = 'SEEN_COLO'                                         971
         CALL AXATTRIBUTE                                                 971
C    *                                                                    971
C    EPOXY C8-H14-O4                                                      973
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              974
         CALL AGSRESET                                                    974
         AG_A = 12                                                        974
         AG_Z = 6                                                         974
         AG_W = 8.0*12.0/174.0                                            974
         AG_TITLE = 'C'                                                   974
         AG_EXNAME = 'COMPONENT'                                          974
         AG_PARLIST = 'A_Z_W'                                             974
         CALL AXCOMPONENT                                                 974
C    *                                                                    974
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               974
         CALL AGSRESET                                                    975
         AG_A = 1                                                         975
         AG_Z = 1                                                         975
         AG_W = 14.0*1.0/174.0                                            975
         AG_TITLE = 'H'                                                   975
         AG_EXNAME = 'COMPONENT'                                          975
         AG_PARLIST = 'A_Z_W'                                             975
         CALL AXCOMPONENT                                                 975
C    *                                                                    975
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              975
         CALL AGSRESET                                                    976
         AG_A = 16                                                        976
         AG_Z = 8                                                         976
         AG_W = 4.0*16.0/174.0                                            976
         AG_TITLE = 'O'                                                   976
         AG_EXNAME = 'COMPONENT'                                          976
         AG_PARLIST = 'A_Z_W'                                             976
         CALL AXCOMPONENT                                                 976
C    *                                                                    976
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             976
         CALL AGSRESET                                                    977
         AG_DENS = 1.3                                                    977
         AG_TITLE = 'EPOXY'                                               977
         AG_EXNAME = 'MIXTURE'                                            977
         AG_PARLIST = 'DENS'                                              977
         CALL AXMIXTURE                                                   977
C    *                                                                    977
C    Geant SHAPE : BOX ===> DX=ISGB_W/2.0 DY=ISGB_THK/2.0 DZ = ISGB_H/2.  981
C    0 <===                                                               981
         CALL AGSRESET                                                    981
         AG_DX = ISGB_W/2.0                                               981
         AG_DY = ISGB_THK/2.0                                             981
         AG_DZ = ISGB_H/2.0                                               981
         AG_TITLE = 'BOX'                                                 981
         AG_EXNAME = 'SHAPE'                                              981
         AG_PARLIST = 'DX_DY_DZ'                                          981
         CALL AXSHAPE                                                     981
C    *                                                                    981
5381  CALL AGSPOPB                                                        983
      GO TO BLOCK_ISLB, (5380 ,5390)                                      983
C End of Local Procedure                                                  983
* -----------------------------------------------------------------------------
C Begin Local Procedure ISRI                                              986
C ISRI IS THE SUPPORT RING FOR THE LAYERS                                 986
5140  CONTINUE                                                            986
         AG_TITLE='ISRI'                                                  986
         AG_MODULE=MODULE                                                 986
         AG_MARK='V00'                                                    986
         CALL AGSPUSH                                                     986
         AG_MODULE=MODULE                                                 986
C    *                                                                    986
C    Geant ATTRIBUTE : ISRA ===> SEEN=1 COLO=13 <===                      987
         CALL AGSRESET                                                    987
         AG_SEEN = 1                                                      987
         AG_COLO = 13                                                     987
         AG_TITLE = 'ISRA'                                                987
         AG_EXNAME = 'ATTRIBUTE'                                          987
         AG_PARLIST = 'SEEN_COLO'                                         987
         CALL AXATTRIBUTE                                                 987
C    *                                                                    987
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        989
         CALL AGSRESET                                                    989
         AG_A = 12                                                        989
         AG_Z = 6                                                         989
         AG_W = 0.05                                                      989
         AG_TITLE = 'C'                                                   989
         AG_EXNAME = 'COMPONENT'                                          989
         AG_PARLIST = 'A_Z_W'                                             989
         CALL AXCOMPONENT                                                 989
C    *                                                                    989
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        989
         CALL AGSRESET                                                    990
         AG_A = 14                                                        990
         AG_Z = 7                                                         990
         AG_W = 0.95                                                      990
         AG_TITLE = 'N'                                                   990
         AG_EXNAME = 'COMPONENT'                                          990
         AG_PARLIST = 'A_Z_W'                                             990
         CALL AXCOMPONENT                                                 990
C    *                                                                    990
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            990
         CALL AGSRESET                                                    991
         AG_DENS = 0.10                                                   991
         AG_TITLE = 'CFOAM'                                               991
         AG_EXNAME = 'MIXTURE'                                            991
         AG_PARLIST = 'DENS'                                              991
         CALL AXMIXTURE                                                   991
C    *                                                                    991
C    Geant SHAPE : TUBE ===> RMIN=ISRR_RIN RMAX=ISRR_ROUT DZ = ISRR_LENG  995
C    TH/2.0 <===                                                          995
         CALL AGSRESET                                                    995
         AG_RMIN = ISRR_RIN                                               995
         AG_RMAX = ISRR_ROUT                                              995
         AG_DZ = ISRR_LENGTH/2.0                                          995
         AG_TITLE = 'TUBE'                                                995
         AG_EXNAME = 'SHAPE'                                              995
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      995
         CALL AXSHAPE                                                     995
C    *                                                                    995
5141  CALL AGSPOPB                                                        997
      GO TO BLOCK_ISRI, (5140 ,5150,5180)                                 997
C End of Local Procedure                                                  997
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCO                                              1000
C ISCO IS THE INTERCONNECT BETWEEN THE SUPPORT RINGS                      1000
5190  CONTINUE                                                            1000
         AG_TITLE='ISCO'                                                  1000
         AG_MODULE=MODULE                                                 1000
         AG_MARK='V00'                                                    1000
         CALL AGSPUSH                                                     1000
         AG_MODULE=MODULE                                                 1000
C    *                                                                    1000
C    Geant ATTRIBUTE : ISCO ===> SEEN=1 COLO=13 <===                      1001
         CALL AGSRESET                                                    1001
         AG_SEEN = 1                                                      1001
         AG_COLO = 13                                                     1001
         AG_TITLE = 'ISCO'                                                1001
         AG_EXNAME = 'ATTRIBUTE'                                          1001
         AG_PARLIST = 'SEEN_COLO'                                         1001
         CALL AXATTRIBUTE                                                 1001
C    *                                                                    1001
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        1003
         CALL AGSRESET                                                    1003
         AG_A = 12                                                        1003
         AG_Z = 6                                                         1003
         AG_W = 0.05                                                      1003
         AG_TITLE = 'C'                                                   1003
         AG_EXNAME = 'COMPONENT'                                          1003
         AG_PARLIST = 'A_Z_W'                                             1003
         CALL AXCOMPONENT                                                 1003
C    *                                                                    1003
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        1003
         CALL AGSRESET                                                    1004
         AG_A = 14                                                        1004
         AG_Z = 7                                                         1004
         AG_W = 0.95                                                      1004
         AG_TITLE = 'N'                                                   1004
         AG_EXNAME = 'COMPONENT'                                          1004
         AG_PARLIST = 'A_Z_W'                                             1004
         CALL AXCOMPONENT                                                 1004
C    *                                                                    1004
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            1004
         CALL AGSRESET                                                    1005
         AG_DENS = 0.10                                                   1005
         AG_TITLE = 'CFOAM'                                               1005
         AG_EXNAME = 'MIXTURE'                                            1005
         AG_PARLIST = 'DENS'                                              1005
         CALL AXMIXTURE                                                   1005
C    *                                                                    1005
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  1011
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     1011
         CALL AGSRESET                                                    1011
         AG_RMN1 = ISCC_RIN1                                              1011
         AG_RMX1 = ISCC_ROUT1                                             1011
         AG_RMN2 = ISCC_RIN2                                              1011
         AG_RMX2 = ISCC_ROUT2                                             1011
         AG_DZ = ISCC_LENGTH/2.0                                          1011
         AG_TITLE = 'CONE'                                                1011
         AG_EXNAME = 'SHAPE'                                              1011
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            1011
         CALL AXSHAPE                                                     1011
C    *                                                                    1011
5191  CALL AGSPOPB                                                        1013
      GO TO BLOCK_ISCO, (5190 ,5200,5210)                                 1013
C End of Local Procedure                                                  1013
* -------------------------------------------------------
      END                                                                 1017
* $Id: istbgeo2.g,v 1.3 2006/10/21 18:08:13 potekhin Exp $
* $Log: istbgeo2.g,v $
* Revision 1.3  2006/10/21 18:08:13  potekhin
* Updated simensions form Gerrit
*
* Revision 1.2  2006/10/16 17:19:12  potekhin
* Corrected the wrong version of the ISRR
* structure being used (needs to be based on the
* layer number, too, as opposed to static)
*
* Revision 1.1  2006/10/14 19:45:11  potekhin
* The code istbgeo1 by Gerrit was fine except it didn't allow
* for consistent volume numbering within our (imperfect infrastructure).
*
* Therefore, I replaced the redundant IBMZ volume with a copy of IBMY,
* created with appropriately adjusted parameters. Added a structure
* to propagate versioning info to g2t_volume (the latter will need
* additional coding, later).
*
*
*****************************************************************
      SUBROUTINE ISTBGEO2                                                 1039
C ISTBGEO2 IS THE GEOMETRY OF THE INNER SILICON TRACKER                   1039
      IMPLICIT NONE                                                       1039
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       1039
      DATA MODULE/'ISTBGEO2'/, BANK_TITLE/'*'/                            1039
      DATA MCOMMENT/'IS THE GEOMETRY OF THE INNER SILICON TRACKER'/       1039
      LOGICAL FIRST                                                       1039
      DATA FIRST/.TRUE./                                                  1039
      SAVE FIRST                                                          1039
      INTEGER JUMPAD                                                      1039
      EXTERNAL JUMPAD                                                     1039
      INTEGER OK                                                          1039
      PARAMETER (OK=0)                                                    1039
      INTEGER AG_I,AG_J                                                   1039
      SAVE AG_I,AG_J                                                      1039
C CREATED 10/02/14                                                        1039
      DATA AG_I/0/,AG_J/0/                                                1040
      CHARACTER*40 CREATED /'10/02/14'/                                   1040
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  1040
C AUTHOR GERRIT EDITED BY MAXIM                                           1040
      CHARACTER*40 AUTHOR /'GERRIT EDITED BY MAXIM'/                      1041
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  1041
*****************************************************************
C - Advanced Geant interface                                              1043
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      1043
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       1043
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         1043
     *AG_OPTION,AG_ORT,AG_MARK                                            1043
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         1043
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     1043
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     1043
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    1043
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          1043
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   1043
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     1043
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        1043
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   1043
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 1043
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     1043
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       1043
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        1043
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       1043
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       1043
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       1043
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         1043
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     1043
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       1043
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   1043
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       1043
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     1043
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          1043
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         1043
     *-696969,AG_LDETU=250)                                               1043
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    1043
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  1043
     *AG_IMFLD,AG_ISIMU                                                   1043
C Inherited variables a: saved during internal calls                      1043
C b: reset at the entry in a block and then saved                         1043
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        1043
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       1043
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         1043
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     1043
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       1043
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         1043
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           1043
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        1043
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        1043
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            1043
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           1043
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    1043
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      1043
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           1043
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          1043
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                1043
C local variables valid inside same block                                 1043
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       1043
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  1043
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         1043
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    1043
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          1043
     *AG_OPTION                                                           1043
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        1043
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             1043
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              1043
C temporarly                                                              1043
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           1043
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    1043
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       1043
     *AG_HY)                                                              1043
      REAL MIL_P,INCH_P                                                   1043
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               1043
C - GEANT description of logical units                                    1043
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            1043
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      1043
      COMMON/GCMAIL/ CHMAIL                                               1043
      CHARACTER*132 CHMAIL                                                1043
* ---
      REAL ANGLE, ANGLEPOS, ANGLECORR, TRUER, RADDEG, RLAD                1045
      INTEGER NL, LY, NU, CABLE, ISTLAYER                                 1046
      REAL MOD_THK                                                        1047
* ---
      INTEGER BLOCK_IBMO                                                  1051
      INTEGER BLOCK_IBLM                                                  1051
      INTEGER BLOCK_IBAM                                                  1051
      INTEGER BLOCK_IBSS                                                  1051
      INTEGER BLOCK_ISTP                                                  1051
      INTEGER BLOCK_ISKH                                                  1051
      INTEGER BLOCK_ISCL                                                  1051
      INTEGER BLOCK_ISSC                                                  1051
      INTEGER BLOCK_ISXA                                                  1051
      INTEGER BLOCK_ISLB                                                  1051
      INTEGER BLOCK_ISRI                                                  1051
      INTEGER BLOCK_ISCO                                                  1051
      INTEGER BLOCK_IBMY                                                  1051
      INTEGER BLOCK_IBMW                                                  1051
      INTEGER BLOCK_IBME                                                  1051
C -                                                                       1053
      REAL ISMG_LAYER                                                     1053
      EQUIVALENCE (BANK_ISMG(3),ISMG_LAYER,RE_ISMG_LAYER),                1053
     *(NAMES_ISMG(1),NISMG_LAYER)                                         1053
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_LAYER),(MAP_ISMG(1,1),            1053
     *MISMG_LAYER)                                                        1053
      CHARACTER CISMG_LAYER*40/' '/                                       1053
      CHARACTER NISMG_LAYER*12/'R.LAYER'/                                 1053
      INTEGER MISMG_LAYER(2)/1,1/                                         1053
      REAL RE_ISMG_LAYER                                                  1053
C -                                                                       1053
      REAL ISMG_RIN                                                       1053
      EQUIVALENCE (BANK_ISMG(4),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(2),     1053
     *NISMG_RIN)                                                          1053
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_RIN),(MAP_ISMG(1,2),MISMG_RIN)    1053
      CHARACTER CISMG_RIN*40/' '/                                         1053
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     1053
      INTEGER MISMG_RIN(2)/1,1/                                           1053
      REAL RE_ISMG_RIN                                                    1053
C -                                                                       1053
      REAL ISMG_ROUT                                                      1053
      EQUIVALENCE (BANK_ISMG(5),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(3),   1053
     *NISMG_ROUT)                                                         1053
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_ROUT),(MAP_ISMG(1,3),             1053
     *MISMG_ROUT)                                                         1053
      CHARACTER CISMG_ROUT*40/' '/                                        1053
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   1053
      INTEGER MISMG_ROUT(2)/1,1/                                          1053
      REAL RE_ISMG_ROUT                                                   1053
C -                                                                       1053
      REAL ISMG_TOTALLENGTH                                               1053
      EQUIVALENCE (BANK_ISMG(6),ISMG_TOTALLENGTH,RE_ISMG_TOTALLENGTH),    1053
     *(NAMES_ISMG(4),NISMG_TOTALLENGTH)                                   1053
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_TOTALLENGTH),(MAP_ISMG(1,4),      1053
     *MISMG_TOTALLENGTH)                                                  1053
      CHARACTER CISMG_TOTALLENGTH*40/' '/                                 1053
      CHARACTER NISMG_TOTALLENGTH*12/'R.TOTALLENGTH'/                     1053
      INTEGER MISMG_TOTALLENGTH(2)/1,1/                                   1053
      REAL RE_ISMG_TOTALLENGTH                                            1053
C -                                                                       1053
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                1053
      PARAMETER (LEN_ISMG=6)                                              1053
      PARAMETER (LLEN_ISMG=4)                                             1053
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           1053
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        1053
      DATA IDNUM_ISMG/10*0/                                               1053
      REAL BANK_ISMG(LEN_ISMG)                                            1053
      CHARACTER*60 BPATH_ISMG/' '/                                        1053
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          1053
     *BPATH_ISMG                                                          1053
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             1053
C *                                                                       1053
C -                                                                       1057
      REAL ISBG_LAYER                                                     1057
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                1057
     *(NAMES_ISBG(1),NISBG_LAYER)                                         1057
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            1057
     *MISBG_LAYER)                                                        1057
      CHARACTER CISBG_LAYER*40/' '/                                       1057
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 1057
      INTEGER MISBG_LAYER(2)/1,1/                                         1057
      REAL RE_ISBG_LAYER                                                  1057
C -                                                                       1057
      REAL ISBG_NLADDER                                                   1057
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            1057
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       1057
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          1057
     *MISBG_NLADDER)                                                      1057
      CHARACTER CISBG_NLADDER*40/' '/                                     1057
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             1057
      INTEGER MISBG_NLADDER(2)/1,1/                                       1057
      REAL RE_ISBG_NLADDER                                                1057
C -                                                                       1057
      REAL ISBG_NUNIT                                                     1057
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                1057
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         1057
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            1057
     *MISBG_NUNIT)                                                        1057
      CHARACTER CISBG_NUNIT*40/' '/                                       1057
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 1057
      INTEGER MISBG_NUNIT(2)/1,1/                                         1057
      REAL RE_ISBG_NUNIT                                                  1057
C -                                                                       1057
      REAL ISBG_LENGTH                                                    1057
      EQUIVALENCE (BANK_ISBG(6),ISBG_LENGTH,RE_ISBG_LENGTH),              1057
     *(NAMES_ISBG(4),NISBG_LENGTH)                                        1057
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_LENGTH),(MAP_ISBG(1,4),           1057
     *MISBG_LENGTH)                                                       1057
      CHARACTER CISBG_LENGTH*40/' '/                                      1057
      CHARACTER NISBG_LENGTH*12/'R.LENGTH'/                               1057
      INTEGER MISBG_LENGTH(2)/1,1/                                        1057
      REAL RE_ISBG_LENGTH                                                 1057
C -                                                                       1057
      REAL ISBG_LADDERWIDTH                                               1057
      EQUIVALENCE (BANK_ISBG(7),ISBG_LADDERWIDTH,RE_ISBG_LADDERWIDTH),    1057
     *(NAMES_ISBG(5),NISBG_LADDERWIDTH)                                   1057
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_LADDERWIDTH),(MAP_ISBG(1,5),      1057
     *MISBG_LADDERWIDTH)                                                  1057
      CHARACTER CISBG_LADDERWIDTH*40/' '/                                 1057
      CHARACTER NISBG_LADDERWIDTH*12/'R.LADDERWIDTH'/                     1057
      INTEGER MISBG_LADDERWIDTH(2)/1,1/                                   1057
      REAL RE_ISBG_LADDERWIDTH                                            1057
C -                                                                       1057
      REAL ISBG_LADDERTHK                                                 1057
      EQUIVALENCE (BANK_ISBG(8),ISBG_LADDERTHK,RE_ISBG_LADDERTHK),        1057
     *(NAMES_ISBG(6),NISBG_LADDERTHK)                                     1057
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_LADDERTHK),(MAP_ISBG(1,6),        1057
     *MISBG_LADDERTHK)                                                    1057
      CHARACTER CISBG_LADDERTHK*40/' '/                                   1057
      CHARACTER NISBG_LADDERTHK*12/'R.LADDERTHK'/                         1057
      INTEGER MISBG_LADDERTHK(2)/1,1/                                     1057
      REAL RE_ISBG_LADDERTHK                                              1057
C -                                                                       1057
      REAL ISBG_SENSATHK                                                  1057
      EQUIVALENCE (BANK_ISBG(9),ISBG_SENSATHK,RE_ISBG_SENSATHK),          1057
     *(NAMES_ISBG(7),NISBG_SENSATHK)                                      1057
      EQUIVALENCE (COMMEN_ISBG(7),CISBG_SENSATHK),(MAP_ISBG(1,7),         1057
     *MISBG_SENSATHK)                                                     1057
      CHARACTER CISBG_SENSATHK*40/' '/                                    1057
      CHARACTER NISBG_SENSATHK*12/'R.SENSATHK'/                           1057
      INTEGER MISBG_SENSATHK(2)/1,1/                                      1057
      REAL RE_ISBG_SENSATHK                                               1057
C -                                                                       1057
      REAL ISBG_SPACING                                                   1057
      EQUIVALENCE (BANK_ISBG(10),ISBG_SPACING,RE_ISBG_SPACING),           1057
     *(NAMES_ISBG(8),NISBG_SPACING)                                       1057
      EQUIVALENCE (COMMEN_ISBG(8),CISBG_SPACING),(MAP_ISBG(1,8),          1057
     *MISBG_SPACING)                                                      1057
      CHARACTER CISBG_SPACING*40/' '/                                     1057
      CHARACTER NISBG_SPACING*12/'R.SPACING'/                             1057
      INTEGER MISBG_SPACING(2)/1,1/                                       1057
      REAL RE_ISBG_SPACING                                                1057
C -                                                                       1057
      REAL ISBG_SENSORWIDTH                                               1057
      EQUIVALENCE (BANK_ISBG(11),ISBG_SENSORWIDTH,RE_ISBG_SENSORWIDTH),   1057
     *(NAMES_ISBG(9),NISBG_SENSORWIDTH)                                   1057
      EQUIVALENCE (COMMEN_ISBG(9),CISBG_SENSORWIDTH),(MAP_ISBG(1,9),      1057
     *MISBG_SENSORWIDTH)                                                  1057
      CHARACTER CISBG_SENSORWIDTH*40/' '/                                 1057
      CHARACTER NISBG_SENSORWIDTH*12/'R.SENSORWIDTH'/                     1057
      INTEGER MISBG_SENSORWIDTH(2)/1,1/                                   1057
      REAL RE_ISBG_SENSORWIDTH                                            1057
C -                                                                       1057
      REAL ISBG_SENSORTHK                                                 1057
      EQUIVALENCE (BANK_ISBG(12),ISBG_SENSORTHK,RE_ISBG_SENSORTHK),       1057
     *(NAMES_ISBG(10),NISBG_SENSORTHK)                                    1057
      EQUIVALENCE (COMMEN_ISBG(10),CISBG_SENSORTHK),(MAP_ISBG(1,10),      1057
     *MISBG_SENSORTHK)                                                    1057
      CHARACTER CISBG_SENSORTHK*40/' '/                                   1057
      CHARACTER NISBG_SENSORTHK*12/'R.SENSORTHK'/                         1057
      INTEGER MISBG_SENSORTHK(2)/1,1/                                     1057
      REAL RE_ISBG_SENSORTHK                                              1057
C -                                                                       1057
      REAL ISBG_SENSORLNGTH                                               1057
      EQUIVALENCE (BANK_ISBG(13),ISBG_SENSORLNGTH,RE_ISBG_SENSORLNGTH),   1057
     *(NAMES_ISBG(11),NISBG_SENSORLNGTH)                                  1057
      EQUIVALENCE (COMMEN_ISBG(11),CISBG_SENSORLNGTH),(MAP_ISBG(1,11),    1057
     *MISBG_SENSORLNGTH)                                                  1057
      CHARACTER CISBG_SENSORLNGTH*40/' '/                                 1057
      CHARACTER NISBG_SENSORLNGTH*12/'R.SENSORLNGTH'/                     1057
      INTEGER MISBG_SENSORLNGTH(2)/1,1/                                   1057
      REAL RE_ISBG_SENSORLNGTH                                            1057
C -                                                                       1057
      REAL ISBG_R                                                         1057
      EQUIVALENCE (BANK_ISBG(14),ISBG_R,RE_ISBG_R),(NAMES_ISBG(12),       1057
     *NISBG_R)                                                            1057
      EQUIVALENCE (COMMEN_ISBG(12),CISBG_R),(MAP_ISBG(1,12),MISBG_R)      1057
      CHARACTER CISBG_R*40/' '/                                           1057
      CHARACTER NISBG_R*12/'R.R'/                                         1057
      INTEGER MISBG_R(2)/1,1/                                             1057
      REAL RE_ISBG_R                                                      1057
C -                                                                       1057
      REAL ISBG_A                                                         1057
      EQUIVALENCE (BANK_ISBG(15),ISBG_A,RE_ISBG_A),(NAMES_ISBG(13),       1057
     *NISBG_A)                                                            1057
      EQUIVALENCE (COMMEN_ISBG(13),CISBG_A),(MAP_ISBG(1,13),MISBG_A)      1057
      CHARACTER CISBG_A*40/' '/                                           1057
      CHARACTER NISBG_A*12/'R.A'/                                         1057
      INTEGER MISBG_A(2)/1,1/                                             1057
      REAL RE_ISBG_A                                                      1057
C -                                                                       1057
      REAL ISBG_PPAROFFSET                                                1057
      EQUIVALENCE (BANK_ISBG(16),ISBG_PPAROFFSET,RE_ISBG_PPAROFFSET),     1057
     *(NAMES_ISBG(14),NISBG_PPAROFFSET)                                   1057
      EQUIVALENCE (COMMEN_ISBG(14),CISBG_PPAROFFSET),(MAP_ISBG(1,14),     1057
     *MISBG_PPAROFFSET)                                                   1057
      CHARACTER CISBG_PPAROFFSET*40/' '/                                  1057
      CHARACTER NISBG_PPAROFFSET*12/'R.PPAROFFSET'/                       1057
      INTEGER MISBG_PPAROFFSET(2)/1,1/                                    1057
      REAL RE_ISBG_PPAROFFSET                                             1057
C -                                                                       1057
      REAL ISBG_PPEROFFSET                                                1057
      EQUIVALENCE (BANK_ISBG(17),ISBG_PPEROFFSET,RE_ISBG_PPEROFFSET),     1057
     *(NAMES_ISBG(15),NISBG_PPEROFFSET)                                   1057
      EQUIVALENCE (COMMEN_ISBG(15),CISBG_PPEROFFSET),(MAP_ISBG(1,15),     1057
     *MISBG_PPEROFFSET)                                                   1057
      CHARACTER CISBG_PPEROFFSET*40/' '/                                  1057
      CHARACTER NISBG_PPEROFFSET*12/'R.PPEROFFSET'/                       1057
      INTEGER MISBG_PPEROFFSET(2)/1,1/                                    1057
      REAL RE_ISBG_PPEROFFSET                                             1057
C -                                                                       1057
      REAL ISBG_AOFFSET                                                   1057
      EQUIVALENCE (BANK_ISBG(18),ISBG_AOFFSET,RE_ISBG_AOFFSET),           1057
     *(NAMES_ISBG(16),NISBG_AOFFSET)                                      1057
      EQUIVALENCE (COMMEN_ISBG(16),CISBG_AOFFSET),(MAP_ISBG(1,16),        1057
     *MISBG_AOFFSET)                                                      1057
      CHARACTER CISBG_AOFFSET*40/' '/                                     1057
      CHARACTER NISBG_AOFFSET*12/'R.AOFFSET'/                             1057
      INTEGER MISBG_AOFFSET(2)/1,1/                                       1057
      REAL RE_ISBG_AOFFSET                                                1057
C -                                                                       1057
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                1057
      PARAMETER (LEN_ISBG=18)                                             1057
      PARAMETER (LLEN_ISBG=16)                                            1057
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           1057
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        1057
      DATA IDNUM_ISBG/10*0/                                               1057
      REAL BANK_ISBG(LEN_ISBG)                                            1057
      CHARACTER*60 BPATH_ISBG/' '/                                        1057
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          1057
     *BPATH_ISBG                                                          1057
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             1057
C *                                                                       1057
C -                                                                       1058
      REAL ISAN_VERSION                                                   1058
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            1058
     *(NAMES_ISAN(1),NISAN_VERSION)                                       1058
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          1058
     *MISAN_VERSION)                                                      1058
      CHARACTER CISAN_VERSION*40/' '/                                     1058
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             1058
      INTEGER MISAN_VERSION(2)/1,1/                                       1058
      REAL RE_ISAN_VERSION                                                1058
C -                                                                       1058
      REAL ISAN_W                                                         1058
      EQUIVALENCE (BANK_ISAN(4),ISAN_W,RE_ISAN_W),(NAMES_ISAN(2),         1058
     *NISAN_W)                                                            1058
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_W),(MAP_ISAN(1,2),MISAN_W)        1058
      CHARACTER CISAN_W*40/' '/                                           1058
      CHARACTER NISAN_W*12/'R.W'/                                         1058
      INTEGER MISAN_W(2)/1,1/                                             1058
      REAL RE_ISAN_W                                                      1058
C -                                                                       1058
      REAL ISAN_H                                                         1058
      EQUIVALENCE (BANK_ISAN(5),ISAN_H,RE_ISAN_H),(NAMES_ISAN(3),         1058
     *NISAN_H)                                                            1058
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_H),(MAP_ISAN(1,3),MISAN_H)        1058
      CHARACTER CISAN_H*40/' '/                                           1058
      CHARACTER NISAN_H*12/'R.H'/                                         1058
      INTEGER MISAN_H(2)/1,1/                                             1058
      REAL RE_ISAN_H                                                      1058
C -                                                                       1058
      REAL ISAN_THK                                                       1058
      EQUIVALENCE (BANK_ISAN(6),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(4),     1058
     *NISAN_THK)                                                          1058
      EQUIVALENCE (COMMEN_ISAN(4),CISAN_THK),(MAP_ISAN(1,4),MISAN_THK)    1058
      CHARACTER CISAN_THK*40/' '/                                         1058
      CHARACTER NISAN_THK*12/'R.THK'/                                     1058
      INTEGER MISAN_THK(2)/1,1/                                           1058
      REAL RE_ISAN_THK                                                    1058
C -                                                                       1058
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                1058
      PARAMETER (LEN_ISAN=6)                                              1058
      PARAMETER (LLEN_ISAN=4)                                             1058
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           1058
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        1058
      DATA IDNUM_ISAN/10*0/                                               1058
      REAL BANK_ISAN(LEN_ISAN)                                            1058
      CHARACTER*60 BPATH_ISAN/' '/                                        1058
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          1058
     *BPATH_ISAN                                                          1058
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             1058
C *                                                                       1058
C -                                                                       1059
      REAL ISHY_VERSION                                                   1059
      EQUIVALENCE (BANK_ISHY(3),ISHY_VERSION,RE_ISHY_VERSION),            1059
     *(NAMES_ISHY(1),NISHY_VERSION)                                       1059
      EQUIVALENCE (COMMEN_ISHY(1),CISHY_VERSION),(MAP_ISHY(1,1),          1059
     *MISHY_VERSION)                                                      1059
      CHARACTER CISHY_VERSION*40/' '/                                     1059
      CHARACTER NISHY_VERSION*12/'R.VERSION'/                             1059
      INTEGER MISHY_VERSION(2)/1,1/                                       1059
      REAL RE_ISHY_VERSION                                                1059
C -                                                                       1059
      REAL ISHY_W                                                         1059
      EQUIVALENCE (BANK_ISHY(4),ISHY_W,RE_ISHY_W),(NAMES_ISHY(2),         1059
     *NISHY_W)                                                            1059
      EQUIVALENCE (COMMEN_ISHY(2),CISHY_W),(MAP_ISHY(1,2),MISHY_W)        1059
      CHARACTER CISHY_W*40/' '/                                           1059
      CHARACTER NISHY_W*12/'R.W'/                                         1059
      INTEGER MISHY_W(2)/1,1/                                             1059
      REAL RE_ISHY_W                                                      1059
C -                                                                       1059
      REAL ISHY_H                                                         1059
      EQUIVALENCE (BANK_ISHY(5),ISHY_H,RE_ISHY_H),(NAMES_ISHY(3),         1059
     *NISHY_H)                                                            1059
      EQUIVALENCE (COMMEN_ISHY(3),CISHY_H),(MAP_ISHY(1,3),MISHY_H)        1059
      CHARACTER CISHY_H*40/' '/                                           1059
      CHARACTER NISHY_H*12/'R.H'/                                         1059
      INTEGER MISHY_H(2)/1,1/                                             1059
      REAL RE_ISHY_H                                                      1059
C -                                                                       1059
      REAL ISHY_THK                                                       1059
      EQUIVALENCE (BANK_ISHY(6),ISHY_THK,RE_ISHY_THK),(NAMES_ISHY(4),     1059
     *NISHY_THK)                                                          1059
      EQUIVALENCE (COMMEN_ISHY(4),CISHY_THK),(MAP_ISHY(1,4),MISHY_THK)    1059
      CHARACTER CISHY_THK*40/' '/                                         1059
      CHARACTER NISHY_THK*12/'R.THK'/                                     1059
      INTEGER MISHY_THK(2)/1,1/                                           1059
      REAL RE_ISHY_THK                                                    1059
C -                                                                       1059
      INTEGER LEN_ISHY,LLEN_ISHY,LINK_ISHY                                1059
      PARAMETER (LEN_ISHY=6)                                              1059
      PARAMETER (LLEN_ISHY=4)                                             1059
      INTEGER FLAG_ISHY/0/,MAP_ISHY(2,LLEN_ISHY),IDNUM_ISHY(10)           1059
      CHARACTER NAMES_ISHY(LLEN_ISHY)*12,COMMEN_ISHY(LLEN_ISHY)*40        1059
      DATA IDNUM_ISHY/10*0/                                               1059
      REAL BANK_ISHY(LEN_ISHY)                                            1059
      CHARACTER*60 BPATH_ISHY/' '/                                        1059
      SAVE FLAG_ISHY,MAP_ISHY,IDNUM_ISHY,NAMES_ISHY,COMMEN_ISHY,          1059
     *BPATH_ISHY                                                          1059
      DATA LINK_ISHY/0/,BANK_ISHY/LEN_ISHY*0/                             1059
C *                                                                       1059
C -                                                                       1060
      REAL ISCU_VERSION                                                   1060
      EQUIVALENCE (BANK_ISCU(3),ISCU_VERSION,RE_ISCU_VERSION),            1060
     *(NAMES_ISCU(1),NISCU_VERSION)                                       1060
      EQUIVALENCE (COMMEN_ISCU(1),CISCU_VERSION),(MAP_ISCU(1,1),          1060
     *MISCU_VERSION)                                                      1060
      CHARACTER CISCU_VERSION*40/' '/                                     1060
      CHARACTER NISCU_VERSION*12/'R.VERSION'/                             1060
      INTEGER MISCU_VERSION(2)/1,1/                                       1060
      REAL RE_ISCU_VERSION                                                1060
C -                                                                       1060
      REAL ISCU_W                                                         1060
      EQUIVALENCE (BANK_ISCU(4),ISCU_W,RE_ISCU_W),(NAMES_ISCU(2),         1060
     *NISCU_W)                                                            1060
      EQUIVALENCE (COMMEN_ISCU(2),CISCU_W),(MAP_ISCU(1,2),MISCU_W)        1060
      CHARACTER CISCU_W*40/' '/                                           1060
      CHARACTER NISCU_W*12/'R.W'/                                         1060
      INTEGER MISCU_W(2)/1,1/                                             1060
      REAL RE_ISCU_W                                                      1060
C -                                                                       1060
      REAL ISCU_H                                                         1060
      EQUIVALENCE (BANK_ISCU(5),ISCU_H,RE_ISCU_H),(NAMES_ISCU(3),         1060
     *NISCU_H)                                                            1060
      EQUIVALENCE (COMMEN_ISCU(3),CISCU_H),(MAP_ISCU(1,3),MISCU_H)        1060
      CHARACTER CISCU_H*40/' '/                                           1060
      CHARACTER NISCU_H*12/'R.H'/                                         1060
      INTEGER MISCU_H(2)/1,1/                                             1060
      REAL RE_ISCU_H                                                      1060
C -                                                                       1060
      REAL ISCU_THK                                                       1060
      EQUIVALENCE (BANK_ISCU(6),ISCU_THK,RE_ISCU_THK),(NAMES_ISCU(4),     1060
     *NISCU_THK)                                                          1060
      EQUIVALENCE (COMMEN_ISCU(4),CISCU_THK),(MAP_ISCU(1,4),MISCU_THK)    1060
      CHARACTER CISCU_THK*40/' '/                                         1060
      CHARACTER NISCU_THK*12/'R.THK'/                                     1060
      INTEGER MISCU_THK(2)/1,1/                                           1060
      REAL RE_ISCU_THK                                                    1060
C -                                                                       1060
      INTEGER LEN_ISCU,LLEN_ISCU,LINK_ISCU                                1060
      PARAMETER (LEN_ISCU=6)                                              1060
      PARAMETER (LLEN_ISCU=4)                                             1060
      INTEGER FLAG_ISCU/0/,MAP_ISCU(2,LLEN_ISCU),IDNUM_ISCU(10)           1060
      CHARACTER NAMES_ISCU(LLEN_ISCU)*12,COMMEN_ISCU(LLEN_ISCU)*40        1060
      DATA IDNUM_ISCU/10*0/                                               1060
      REAL BANK_ISCU(LEN_ISCU)                                            1060
      CHARACTER*60 BPATH_ISCU/' '/                                        1060
      SAVE FLAG_ISCU,MAP_ISCU,IDNUM_ISCU,NAMES_ISCU,COMMEN_ISCU,          1060
     *BPATH_ISCU                                                          1060
      DATA LINK_ISCU/0/,BANK_ISCU/LEN_ISCU*0/                             1060
C *                                                                       1060
C -                                                                       1061
      REAL ISCG_VERSION                                                   1061
      EQUIVALENCE (BANK_ISCG(3),ISCG_VERSION,RE_ISCG_VERSION),            1061
     *(NAMES_ISCG(1),NISCG_VERSION)                                       1061
      EQUIVALENCE (COMMEN_ISCG(1),CISCG_VERSION),(MAP_ISCG(1,1),          1061
     *MISCG_VERSION)                                                      1061
      CHARACTER CISCG_VERSION*40/' '/                                     1061
      CHARACTER NISCG_VERSION*12/'R.VERSION'/                             1061
      INTEGER MISCG_VERSION(2)/1,1/                                       1061
      REAL RE_ISCG_VERSION                                                1061
C -                                                                       1061
      REAL ISCG_W                                                         1061
      EQUIVALENCE (BANK_ISCG(4),ISCG_W,RE_ISCG_W),(NAMES_ISCG(2),         1061
     *NISCG_W)                                                            1061
      EQUIVALENCE (COMMEN_ISCG(2),CISCG_W),(MAP_ISCG(1,2),MISCG_W)        1061
      CHARACTER CISCG_W*40/' '/                                           1061
      CHARACTER NISCG_W*12/'R.W'/                                         1061
      INTEGER MISCG_W(2)/1,1/                                             1061
      REAL RE_ISCG_W                                                      1061
C -                                                                       1061
      REAL ISCG_H                                                         1061
      EQUIVALENCE (BANK_ISCG(5),ISCG_H,RE_ISCG_H),(NAMES_ISCG(3),         1061
     *NISCG_H)                                                            1061
      EQUIVALENCE (COMMEN_ISCG(3),CISCG_H),(MAP_ISCG(1,3),MISCG_H)        1061
      CHARACTER CISCG_H*40/' '/                                           1061
      CHARACTER NISCG_H*12/'R.H'/                                         1061
      INTEGER MISCG_H(2)/1,1/                                             1061
      REAL RE_ISCG_H                                                      1061
C -                                                                       1061
      REAL ISCG_THK                                                       1061
      EQUIVALENCE (BANK_ISCG(6),ISCG_THK,RE_ISCG_THK),(NAMES_ISCG(4),     1061
     *NISCG_THK)                                                          1061
      EQUIVALENCE (COMMEN_ISCG(4),CISCG_THK),(MAP_ISCG(1,4),MISCG_THK)    1061
      CHARACTER CISCG_THK*40/' '/                                         1061
      CHARACTER NISCG_THK*12/'R.THK'/                                     1061
      INTEGER MISCG_THK(2)/1,1/                                           1061
      REAL RE_ISCG_THK                                                    1061
C -                                                                       1061
      INTEGER LEN_ISCG,LLEN_ISCG,LINK_ISCG                                1061
      PARAMETER (LEN_ISCG=6)                                              1061
      PARAMETER (LLEN_ISCG=4)                                             1061
      INTEGER FLAG_ISCG/0/,MAP_ISCG(2,LLEN_ISCG),IDNUM_ISCG(10)           1061
      CHARACTER NAMES_ISCG(LLEN_ISCG)*12,COMMEN_ISCG(LLEN_ISCG)*40        1061
      DATA IDNUM_ISCG/10*0/                                               1061
      REAL BANK_ISCG(LEN_ISCG)                                            1061
      CHARACTER*60 BPATH_ISCG/' '/                                        1061
      SAVE FLAG_ISCG,MAP_ISCG,IDNUM_ISCG,NAMES_ISCG,COMMEN_ISCG,          1061
     *BPATH_ISCG                                                          1061
      DATA LINK_ISCG/0/,BANK_ISCG/LEN_ISCG*0/                             1061
C *                                                                       1061
C -                                                                       1062
      REAL ISGA_VERSION                                                   1062
      EQUIVALENCE (BANK_ISGA(3),ISGA_VERSION,RE_ISGA_VERSION),            1062
     *(NAMES_ISGA(1),NISGA_VERSION)                                       1062
      EQUIVALENCE (COMMEN_ISGA(1),CISGA_VERSION),(MAP_ISGA(1,1),          1062
     *MISGA_VERSION)                                                      1062
      CHARACTER CISGA_VERSION*40/' '/                                     1062
      CHARACTER NISGA_VERSION*12/'R.VERSION'/                             1062
      INTEGER MISGA_VERSION(2)/1,1/                                       1062
      REAL RE_ISGA_VERSION                                                1062
C -                                                                       1062
      REAL ISGA_W                                                         1062
      EQUIVALENCE (BANK_ISGA(4),ISGA_W,RE_ISGA_W),(NAMES_ISGA(2),         1062
     *NISGA_W)                                                            1062
      EQUIVALENCE (COMMEN_ISGA(2),CISGA_W),(MAP_ISGA(1,2),MISGA_W)        1062
      CHARACTER CISGA_W*40/' '/                                           1062
      CHARACTER NISGA_W*12/'R.W'/                                         1062
      INTEGER MISGA_W(2)/1,1/                                             1062
      REAL RE_ISGA_W                                                      1062
C -                                                                       1062
      REAL ISGA_H                                                         1062
      EQUIVALENCE (BANK_ISGA(5),ISGA_H,RE_ISGA_H),(NAMES_ISGA(3),         1062
     *NISGA_H)                                                            1062
      EQUIVALENCE (COMMEN_ISGA(3),CISGA_H),(MAP_ISGA(1,3),MISGA_H)        1062
      CHARACTER CISGA_H*40/' '/                                           1062
      CHARACTER NISGA_H*12/'R.H'/                                         1062
      INTEGER MISGA_H(2)/1,1/                                             1062
      REAL RE_ISGA_H                                                      1062
C -                                                                       1062
      REAL ISGA_THK                                                       1062
      EQUIVALENCE (BANK_ISGA(6),ISGA_THK,RE_ISGA_THK),(NAMES_ISGA(4),     1062
     *NISGA_THK)                                                          1062
      EQUIVALENCE (COMMEN_ISGA(4),CISGA_THK),(MAP_ISGA(1,4),MISGA_THK)    1062
      CHARACTER CISGA_THK*40/' '/                                         1062
      CHARACTER NISGA_THK*12/'R.THK'/                                     1062
      INTEGER MISGA_THK(2)/1,1/                                           1062
      REAL RE_ISGA_THK                                                    1062
C -                                                                       1062
      INTEGER LEN_ISGA,LLEN_ISGA,LINK_ISGA                                1062
      PARAMETER (LEN_ISGA=6)                                              1062
      PARAMETER (LLEN_ISGA=4)                                             1062
      INTEGER FLAG_ISGA/0/,MAP_ISGA(2,LLEN_ISGA),IDNUM_ISGA(10)           1062
      CHARACTER NAMES_ISGA(LLEN_ISGA)*12,COMMEN_ISGA(LLEN_ISGA)*40        1062
      DATA IDNUM_ISGA/10*0/                                               1062
      REAL BANK_ISGA(LEN_ISGA)                                            1062
      CHARACTER*60 BPATH_ISGA/' '/                                        1062
      SAVE FLAG_ISGA,MAP_ISGA,IDNUM_ISGA,NAMES_ISGA,COMMEN_ISGA,          1062
     *BPATH_ISGA                                                          1062
      DATA LINK_ISGA/0/,BANK_ISGA/LEN_ISGA*0/                             1062
C *                                                                       1062
C -                                                                       1063
      REAL ISGB_VERSION                                                   1063
      EQUIVALENCE (BANK_ISGB(3),ISGB_VERSION,RE_ISGB_VERSION),            1063
     *(NAMES_ISGB(1),NISGB_VERSION)                                       1063
      EQUIVALENCE (COMMEN_ISGB(1),CISGB_VERSION),(MAP_ISGB(1,1),          1063
     *MISGB_VERSION)                                                      1063
      CHARACTER CISGB_VERSION*40/' '/                                     1063
      CHARACTER NISGB_VERSION*12/'R.VERSION'/                             1063
      INTEGER MISGB_VERSION(2)/1,1/                                       1063
      REAL RE_ISGB_VERSION                                                1063
C -                                                                       1063
      REAL ISGB_W                                                         1063
      EQUIVALENCE (BANK_ISGB(4),ISGB_W,RE_ISGB_W),(NAMES_ISGB(2),         1063
     *NISGB_W)                                                            1063
      EQUIVALENCE (COMMEN_ISGB(2),CISGB_W),(MAP_ISGB(1,2),MISGB_W)        1063
      CHARACTER CISGB_W*40/' '/                                           1063
      CHARACTER NISGB_W*12/'R.W'/                                         1063
      INTEGER MISGB_W(2)/1,1/                                             1063
      REAL RE_ISGB_W                                                      1063
C -                                                                       1063
      REAL ISGB_H                                                         1063
      EQUIVALENCE (BANK_ISGB(5),ISGB_H,RE_ISGB_H),(NAMES_ISGB(3),         1063
     *NISGB_H)                                                            1063
      EQUIVALENCE (COMMEN_ISGB(3),CISGB_H),(MAP_ISGB(1,3),MISGB_H)        1063
      CHARACTER CISGB_H*40/' '/                                           1063
      CHARACTER NISGB_H*12/'R.H'/                                         1063
      INTEGER MISGB_H(2)/1,1/                                             1063
      REAL RE_ISGB_H                                                      1063
C -                                                                       1063
      REAL ISGB_THK                                                       1063
      EQUIVALENCE (BANK_ISGB(6),ISGB_THK,RE_ISGB_THK),(NAMES_ISGB(4),     1063
     *NISGB_THK)                                                          1063
      EQUIVALENCE (COMMEN_ISGB(4),CISGB_THK),(MAP_ISGB(1,4),MISGB_THK)    1063
      CHARACTER CISGB_THK*40/' '/                                         1063
      CHARACTER NISGB_THK*12/'R.THK'/                                     1063
      INTEGER MISGB_THK(2)/1,1/                                           1063
      REAL RE_ISGB_THK                                                    1063
C -                                                                       1063
      INTEGER LEN_ISGB,LLEN_ISGB,LINK_ISGB                                1063
      PARAMETER (LEN_ISGB=6)                                              1063
      PARAMETER (LLEN_ISGB=4)                                             1063
      INTEGER FLAG_ISGB/0/,MAP_ISGB(2,LLEN_ISGB),IDNUM_ISGB(10)           1063
      CHARACTER NAMES_ISGB(LLEN_ISGB)*12,COMMEN_ISGB(LLEN_ISGB)*40        1063
      DATA IDNUM_ISGB/10*0/                                               1063
      REAL BANK_ISGB(LEN_ISGB)                                            1063
      CHARACTER*60 BPATH_ISGB/' '/                                        1063
      SAVE FLAG_ISGB,MAP_ISGB,IDNUM_ISGB,NAMES_ISGB,COMMEN_ISGB,          1063
     *BPATH_ISGB                                                          1063
      DATA LINK_ISGB/0/,BANK_ISGB/LEN_ISGB*0/                             1063
C *                                                                       1063
C -                                                                       1064
      REAL ISRR_LAYER                                                     1064
      EQUIVALENCE (BANK_ISRR(3),ISRR_LAYER,RE_ISRR_LAYER),                1064
     *(NAMES_ISRR(1),NISRR_LAYER)                                         1064
      EQUIVALENCE (COMMEN_ISRR(1),CISRR_LAYER),(MAP_ISRR(1,1),            1064
     *MISRR_LAYER)                                                        1064
      CHARACTER CISRR_LAYER*40/' '/                                       1064
      CHARACTER NISRR_LAYER*12/'R.LAYER'/                                 1064
      INTEGER MISRR_LAYER(2)/1,1/                                         1064
      REAL RE_ISRR_LAYER                                                  1064
C -                                                                       1064
      REAL ISRR_RIN                                                       1064
      EQUIVALENCE (BANK_ISRR(4),ISRR_RIN,RE_ISRR_RIN),(NAMES_ISRR(2),     1064
     *NISRR_RIN)                                                          1064
      EQUIVALENCE (COMMEN_ISRR(2),CISRR_RIN),(MAP_ISRR(1,2),MISRR_RIN)    1064
      CHARACTER CISRR_RIN*40/' '/                                         1064
      CHARACTER NISRR_RIN*12/'R.RIN'/                                     1064
      INTEGER MISRR_RIN(2)/1,1/                                           1064
      REAL RE_ISRR_RIN                                                    1064
C -                                                                       1064
      REAL ISRR_ROUT                                                      1064
      EQUIVALENCE (BANK_ISRR(5),ISRR_ROUT,RE_ISRR_ROUT),(NAMES_ISRR(3),   1064
     *NISRR_ROUT)                                                         1064
      EQUIVALENCE (COMMEN_ISRR(3),CISRR_ROUT),(MAP_ISRR(1,3),             1064
     *MISRR_ROUT)                                                         1064
      CHARACTER CISRR_ROUT*40/' '/                                        1064
      CHARACTER NISRR_ROUT*12/'R.ROUT'/                                   1064
      INTEGER MISRR_ROUT(2)/1,1/                                          1064
      REAL RE_ISRR_ROUT                                                   1064
C -                                                                       1064
      REAL ISRR_LENGTH                                                    1064
      EQUIVALENCE (BANK_ISRR(6),ISRR_LENGTH,RE_ISRR_LENGTH),              1064
     *(NAMES_ISRR(4),NISRR_LENGTH)                                        1064
      EQUIVALENCE (COMMEN_ISRR(4),CISRR_LENGTH),(MAP_ISRR(1,4),           1064
     *MISRR_LENGTH)                                                       1064
      CHARACTER CISRR_LENGTH*40/' '/                                      1064
      CHARACTER NISRR_LENGTH*12/'R.LENGTH'/                               1064
      INTEGER MISRR_LENGTH(2)/1,1/                                        1064
      REAL RE_ISRR_LENGTH                                                 1064
C -                                                                       1064
      INTEGER LEN_ISRR,LLEN_ISRR,LINK_ISRR                                1064
      PARAMETER (LEN_ISRR=6)                                              1064
      PARAMETER (LLEN_ISRR=4)                                             1064
      INTEGER FLAG_ISRR/0/,MAP_ISRR(2,LLEN_ISRR),IDNUM_ISRR(10)           1064
      CHARACTER NAMES_ISRR(LLEN_ISRR)*12,COMMEN_ISRR(LLEN_ISRR)*40        1064
      DATA IDNUM_ISRR/10*0/                                               1064
      REAL BANK_ISRR(LEN_ISRR)                                            1064
      CHARACTER*60 BPATH_ISRR/' '/                                        1064
      SAVE FLAG_ISRR,MAP_ISRR,IDNUM_ISRR,NAMES_ISRR,COMMEN_ISRR,          1064
     *BPATH_ISRR                                                          1064
      DATA LINK_ISRR/0/,BANK_ISRR/LEN_ISRR*0/                             1064
C *                                                                       1064
C -                                                                       1065
      REAL ISCC_VERSION                                                   1065
      EQUIVALENCE (BANK_ISCC(3),ISCC_VERSION,RE_ISCC_VERSION),            1065
     *(NAMES_ISCC(1),NISCC_VERSION)                                       1065
      EQUIVALENCE (COMMEN_ISCC(1),CISCC_VERSION),(MAP_ISCC(1,1),          1065
     *MISCC_VERSION)                                                      1065
      CHARACTER CISCC_VERSION*40/' '/                                     1065
      CHARACTER NISCC_VERSION*12/'R.VERSION'/                             1065
      INTEGER MISCC_VERSION(2)/1,1/                                       1065
      REAL RE_ISCC_VERSION                                                1065
C -                                                                       1065
      REAL ISCC_RIN1                                                      1065
      EQUIVALENCE (BANK_ISCC(4),ISCC_RIN1,RE_ISCC_RIN1),(NAMES_ISCC(2),   1065
     *NISCC_RIN1)                                                         1065
      EQUIVALENCE (COMMEN_ISCC(2),CISCC_RIN1),(MAP_ISCC(1,2),             1065
     *MISCC_RIN1)                                                         1065
      CHARACTER CISCC_RIN1*40/' '/                                        1065
      CHARACTER NISCC_RIN1*12/'R.RIN1'/                                   1065
      INTEGER MISCC_RIN1(2)/1,1/                                          1065
      REAL RE_ISCC_RIN1                                                   1065
C -                                                                       1065
      REAL ISCC_ROUT1                                                     1065
      EQUIVALENCE (BANK_ISCC(5),ISCC_ROUT1,RE_ISCC_ROUT1),                1065
     *(NAMES_ISCC(3),NISCC_ROUT1)                                         1065
      EQUIVALENCE (COMMEN_ISCC(3),CISCC_ROUT1),(MAP_ISCC(1,3),            1065
     *MISCC_ROUT1)                                                        1065
      CHARACTER CISCC_ROUT1*40/' '/                                       1065
      CHARACTER NISCC_ROUT1*12/'R.ROUT1'/                                 1065
      INTEGER MISCC_ROUT1(2)/1,1/                                         1065
      REAL RE_ISCC_ROUT1                                                  1065
C -                                                                       1065
      REAL ISCC_RIN2                                                      1065
      EQUIVALENCE (BANK_ISCC(6),ISCC_RIN2,RE_ISCC_RIN2),(NAMES_ISCC(4),   1065
     *NISCC_RIN2)                                                         1065
      EQUIVALENCE (COMMEN_ISCC(4),CISCC_RIN2),(MAP_ISCC(1,4),             1065
     *MISCC_RIN2)                                                         1065
      CHARACTER CISCC_RIN2*40/' '/                                        1065
      CHARACTER NISCC_RIN2*12/'R.RIN2'/                                   1065
      INTEGER MISCC_RIN2(2)/1,1/                                          1065
      REAL RE_ISCC_RIN2                                                   1065
C -                                                                       1065
      REAL ISCC_ROUT2                                                     1065
      EQUIVALENCE (BANK_ISCC(7),ISCC_ROUT2,RE_ISCC_ROUT2),                1065
     *(NAMES_ISCC(5),NISCC_ROUT2)                                         1065
      EQUIVALENCE (COMMEN_ISCC(5),CISCC_ROUT2),(MAP_ISCC(1,5),            1065
     *MISCC_ROUT2)                                                        1065
      CHARACTER CISCC_ROUT2*40/' '/                                       1065
      CHARACTER NISCC_ROUT2*12/'R.ROUT2'/                                 1065
      INTEGER MISCC_ROUT2(2)/1,1/                                         1065
      REAL RE_ISCC_ROUT2                                                  1065
C -                                                                       1065
      REAL ISCC_LENGTH                                                    1065
      EQUIVALENCE (BANK_ISCC(8),ISCC_LENGTH,RE_ISCC_LENGTH),              1065
     *(NAMES_ISCC(6),NISCC_LENGTH)                                        1065
      EQUIVALENCE (COMMEN_ISCC(6),CISCC_LENGTH),(MAP_ISCC(1,6),           1065
     *MISCC_LENGTH)                                                       1065
      CHARACTER CISCC_LENGTH*40/' '/                                      1065
      CHARACTER NISCC_LENGTH*12/'R.LENGTH'/                               1065
      INTEGER MISCC_LENGTH(2)/1,1/                                        1065
      REAL RE_ISCC_LENGTH                                                 1065
C -                                                                       1065
      INTEGER LEN_ISCC,LLEN_ISCC,LINK_ISCC                                1065
      PARAMETER (LEN_ISCC=8)                                              1065
      PARAMETER (LLEN_ISCC=6)                                             1065
      INTEGER FLAG_ISCC/0/,MAP_ISCC(2,LLEN_ISCC),IDNUM_ISCC(10)           1065
      CHARACTER NAMES_ISCC(LLEN_ISCC)*12,COMMEN_ISCC(LLEN_ISCC)*40        1065
      DATA IDNUM_ISCC/10*0/                                               1065
      REAL BANK_ISCC(LEN_ISCC)                                            1065
      CHARACTER*60 BPATH_ISCC/' '/                                        1065
      SAVE FLAG_ISCC,MAP_ISCC,IDNUM_ISCC,NAMES_ISCC,COMMEN_ISCC,          1065
     *BPATH_ISCC                                                          1065
      DATA LINK_ISCC/0/,BANK_ISCC/LEN_ISCC*0/                             1065
C *                                                                       1065
C -                                                                       1067
      REAL ISVR_VERSION                                                   1067
      EQUIVALENCE (BANK_ISVR(3),ISVR_VERSION,RE_ISVR_VERSION),            1067
     *(NAMES_ISVR(1),NISVR_VERSION)                                       1067
      EQUIVALENCE (COMMEN_ISVR(1),CISVR_VERSION),(MAP_ISVR(1,1),          1067
     *MISVR_VERSION)                                                      1067
      CHARACTER CISVR_VERSION*40/' '/                                     1067
      CHARACTER NISVR_VERSION*12/'R.VERSION'/                             1067
      INTEGER MISVR_VERSION(2)/1,1/                                       1067
      REAL RE_ISVR_VERSION                                                1067
C -                                                                       1067
      REAL ISVR_CODE                                                      1067
      EQUIVALENCE (BANK_ISVR(4),ISVR_CODE,RE_ISVR_CODE),(NAMES_ISVR(2),   1067
     *NISVR_CODE)                                                         1067
      EQUIVALENCE (COMMEN_ISVR(2),CISVR_CODE),(MAP_ISVR(1,2),             1067
     *MISVR_CODE)                                                         1067
      CHARACTER CISVR_CODE*40/' '/                                        1067
      CHARACTER NISVR_CODE*12/'R.CODE'/                                   1067
      INTEGER MISVR_CODE(2)/1,1/                                          1067
      REAL RE_ISVR_CODE                                                   1067
C -                                                                       1067
      INTEGER LEN_ISVR,LLEN_ISVR,LINK_ISVR                                1067
      PARAMETER (LEN_ISVR=4)                                              1067
      PARAMETER (LLEN_ISVR=2)                                             1067
      INTEGER FLAG_ISVR/0/,MAP_ISVR(2,LLEN_ISVR),IDNUM_ISVR(10)           1067
      CHARACTER NAMES_ISVR(LLEN_ISVR)*12,COMMEN_ISVR(LLEN_ISVR)*40        1067
      DATA IDNUM_ISVR/10*0/                                               1067
      REAL BANK_ISVR(LEN_ISVR)                                            1067
      CHARACTER*60 BPATH_ISVR/' '/                                        1067
      SAVE FLAG_ISVR,MAP_ISVR,IDNUM_ISVR,NAMES_ISVR,COMMEN_ISVR,          1067
     *BPATH_ISVR                                                          1067
      DATA LINK_ISVR/0/,BANK_ISVR/LEN_ISVR*0/                             1067
C *                                                                       1067
* -------------------------------------------------------
C *                                                                       1069
      CALL AGSBEGM(MODULE,IPRIN)                                          1069
      IF (IPRIN.LT.0) RETURN                                              1069
C Filling bank ISMG - MOTHER VOLUME WHOLE DETECTOR                        1069
      BANK_TITLE='MOTHER VOLUME WHOLE DETECTOR'                           1069
      BPATH_ISMG='ISMG*'                                                  1069
      IDNUM_ISMG(1)=0                                                     1070
C VERSION                                                                 1070
      ISMG_LAYER=1                                                        1070
      CISMG_LAYER='VERSION'                                               1070
C INNER RADIUS                                                            1071
      ISMG_RIN=11.10                                                      1071
      CISMG_RIN='INNER RADIUS'                                            1071
C OUTER RADIUS                                                            1072
      ISMG_ROUT=18.00                                                     1072
      CISMG_ROUT='OUTER RADIUS'                                           1072
C OVERAL LENGTH OF THE DETECTOR                                           1073
      ISMG_TOTALLENGTH=54.50                                              1073
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE DETECTOR'                   1073
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1074
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1074
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1074
C *                                                                       1074
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1074
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1074
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1074
C *                                                                       1076
      CALL AGSBEGM(MODULE,IPRIN)                                          1076
      IF (IPRIN.LT.0) RETURN                                              1076
C Filling bank ISMG - MOTHER VOLUME INNER LAYER                           1076
      BANK_TITLE='MOTHER VOLUME INNER LAYER'                              1076
      BPATH_ISMG='ISMG*'                                                  1076
      IDNUM_ISMG(1)=0                                                     1077
C VERSION                                                                 1077
      ISMG_LAYER=2                                                        1077
      CISMG_LAYER='VERSION'                                               1077
C INNER RADIUS                                                            1078
      ISMG_RIN=11.10                                                      1078
      CISMG_RIN='INNER RADIUS'                                            1078
C OUTER RADIUS                                                            1079
      ISMG_ROUT=14.00                                                     1079
      CISMG_ROUT='OUTER RADIUS'                                           1079
C OVERAL LENGTH OF THE LAYER                                              1080
      ISMG_TOTALLENGTH=44.00                                              1080
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      1080
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1081
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1081
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1081
C *                                                                       1081
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1081
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1081
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1081
C *                                                                       1083
      CALL AGSBEGM(MODULE,IPRIN)                                          1083
      IF (IPRIN.LT.0) RETURN                                              1083
C Filling bank ISMG - MOTHER VOLUME OUTER LAYER                           1083
      BANK_TITLE='MOTHER VOLUME OUTER LAYER'                              1083
      BPATH_ISMG='ISMG*'                                                  1083
      IDNUM_ISMG(1)=0                                                     1084
C VERSION                                                                 1084
      ISMG_LAYER=3                                                        1084
      CISMG_LAYER='VERSION'                                               1084
C INNER RADIUS                                                            1085
      ISMG_RIN=15.00                                                      1085
      CISMG_RIN='INNER RADIUS'                                            1085
C OUTER RADIUS                                                            1086
      ISMG_ROUT=18.00                                                     1086
      CISMG_ROUT='OUTER RADIUS'                                           1086
C OVERAL LENGTH OF THE LAYER                                              1087
      ISMG_TOTALLENGTH=54.50                                              1087
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      1087
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1088
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1088
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1088
C *                                                                       1088
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1088
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1088
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1088
*--------------------------------------------------------
C *                                                                       1091
      CALL AGSBEGM(MODULE,IPRIN)                                          1091
      IF (IPRIN.LT.0) RETURN                                              1091
C Filling bank ISBG - INNER SILICON TRACKER DATA                          1091
      BANK_TITLE='INNER SILICON TRACKER DATA'                             1091
      BPATH_ISBG='ISBG*'                                                  1091
      IDNUM_ISBG(1)=0                                                     1092
C LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE                             1092
      ISBG_LAYER=1                                                        1092
      CISBG_LAYER='LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE'           1092
C LADDER COUNT                                                            1093
      ISBG_NLADDER=11                                                     1093
      CISBG_NLADDER='LADDER COUNT'                                        1093
C SENSOR UNITS PER LADDER                                                 1094
      ISBG_NUNIT=7                                                        1094
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               1094
C OVERAL LENGTH OF THE DETECTOR                                           1095
      ISBG_LENGTH=28.0                                                    1095
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        1095
C 1ST LADDER NOMINAL RADIUS                                               1096
      ISBG_R=7.0                                                          1096
      CISBG_R='1ST LADDER NOMINAL RADIUS'                                 1096
C 1ST LADDER NOMINAL POSITION ANGLE                                       1097
      ISBG_A=0.0                                                          1097
      CISBG_A='1ST LADDER NOMINAL POSITION ANGLE'                         1097
C ANGULAR OFFSET                                                          1098
      ISBG_AOFFSET=81.0                                                   1098
      CISBG_AOFFSET='ANGULAR OFFSET'                                      1098
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    1099
      ISBG_PPAROFFSET=0.0                                                 1099
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  1099
     *DULE'                                                               1099
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               1100
      ISBG_PPEROFFSET=0.0                                                 1100
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  1100
     *HE MODULE'                                                          1100
C LADDER WIDTH                                                            1101
      ISBG_LADDERWIDTH=4.0                                                1101
      CISBG_LADDERWIDTH='LADDER WIDTH'                                    1101
C LADDER THICKNESS                                                        1102
      ISBG_LADDERTHK=0.4626                                               1102
      CISBG_LADDERTHK='LADDER THICKNESS'                                  1102
C MODULE THICKNESS                                                        1103
      ISBG_SENSATHK=0.4282                                                1103
      CISBG_SENSATHK='MODULE THICKNESS'                                   1103
C SENSOR WIDTH                                                            1104
      ISBG_SENSORWIDTH=4.0                                                1104
      CISBG_SENSORWIDTH='SENSOR WIDTH'                                    1104
C SENSOR LENGTH                                                           1105
      ISBG_SENSORLNGTH=4.0                                                1105
      CISBG_SENSORLNGTH='SENSOR LENGTH'                                   1105
C SENSOR THICKNESS                                                        1106
      ISBG_SENSORTHK=0.0300                                               1106
      CISBG_SENSORTHK='SENSOR THICKNESS'                                  1106
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1107
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1107
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1107
C *                                                                       1107
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1107
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1107
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1107
C *                                                                       1109
      CALL AGSBEGM(MODULE,IPRIN)                                          1109
      IF (IPRIN.LT.0) RETURN                                              1109
C Filling bank ISBG - INNER SILICON TRACKER DATA                          1109
      BANK_TITLE='INNER SILICON TRACKER DATA'                             1109
      BPATH_ISBG='ISBG*'                                                  1109
      IDNUM_ISBG(1)=0                                                     1110
C LAYER INDEX                                                             1110
      ISBG_LAYER=2                                                        1110
      CISBG_LAYER='LAYER INDEX'                                           1110
C LADDER COUNT                                                            1111
      ISBG_NLADDER=19                                                     1111
      CISBG_NLADDER='LADDER COUNT'                                        1111
C SENSOR UNITS PER LADDER                                                 1112
      ISBG_NUNIT=10                                                       1112
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               1112
C OVERAL LENGTH OF THE DETECTOR                                           1113
      ISBG_LENGTH=40.0                                                    1113
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        1113
C 2ND LADDER NOMINAL RADIUS                                               1114
      ISBG_R=12.0                                                         1114
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 1114
C 2ND LADDER NOMINAL POSITION ANGLE                                       1115
      ISBG_A=0.0                                                          1115
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         1115
C ANGULAR OFFSET                                                          1116
      ISBG_AOFFSET=81.0                                                   1116
      CISBG_AOFFSET='ANGULAR OFFSET'                                      1116
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    1117
      ISBG_PPAROFFSET=0.0                                                 1117
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  1117
     *DULE'                                                               1117
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               1118
      ISBG_PPEROFFSET=0.0                                                 1118
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  1118
     *HE MODULE'                                                          1118
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1119
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1119
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1119
C *                                                                       1119
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1119
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1119
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1119
C *                                                                       1121
      CALL AGSBEGM(MODULE,IPRIN)                                          1121
      IF (IPRIN.LT.0) RETURN                                              1121
C Filling bank ISBG - INNER SILICON TRACKER DATA                          1121
      BANK_TITLE='INNER SILICON TRACKER DATA'                             1121
      BPATH_ISBG='ISBG*'                                                  1121
      IDNUM_ISBG(1)=0                                                     1122
C LAYER INDEX                                                             1122
      ISBG_LAYER=3                                                        1122
      CISBG_LAYER='LAYER INDEX'                                           1122
C LADDER COUNT                                                            1123
      ISBG_NLADDER=27                                                     1123
      CISBG_NLADDER='LADDER COUNT'                                        1123
C SENSOR UNITS PER LADDER                                                 1124
      ISBG_NUNIT=13                                                       1124
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               1124
C OVERAL LENGTH OF THE DETECTOR                                           1125
      ISBG_LENGTH=52.0                                                    1125
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        1125
C 2ND LADDER NOMINAL RADIUS                                               1126
      ISBG_R=17.0                                                         1126
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 1126
C 2ND LADDER NOMINAL POSITION ANGLE                                       1127
      ISBG_A=0.0                                                          1127
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         1127
C ANGULAR OFFSET                                                          1128
      ISBG_AOFFSET=81.0                                                   1128
      CISBG_AOFFSET='ANGULAR OFFSET'                                      1128
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    1129
      ISBG_PPAROFFSET=0.0                                                 1129
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  1129
     *DULE'                                                               1129
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               1130
      ISBG_PPEROFFSET=0.0                                                 1130
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  1130
     *HE MODULE'                                                          1130
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1131
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1131
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1131
C *                                                                       1131
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1131
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1131
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1131
*--------------------------------------------------------
C *                                                                       1134
      CALL AGSBEGM(MODULE,IPRIN)                                          1134
      IF (IPRIN.LT.0) RETURN                                              1134
C Filling bank ISAN - THERMAL CONDUCTIVE CARBON FOAM PLATE                1134
      BANK_TITLE='THERMAL CONDUCTIVE CARBON FOAM PLATE'                   1134
      BPATH_ISAN='ISAN*'                                                  1134
      IDNUM_ISAN(1)=0                                                     1135
C MAY HAVE A FEW                                                          1135
      ISAN_VERSION=1                                                      1135
      CISAN_VERSION='MAY HAVE A FEW'                                      1135
C WIDTH                                                                   1136
      ISAN_W=4.0                                                          1136
      CISAN_W='WIDTH'                                                     1136
C LENGTH                                                                  1137
      ISAN_H=4.0                                                          1137
      CISAN_H='LENGTH'                                                    1137
C THICKNESS                                                               1138
      ISAN_THK=0.1686                                                     1138
      CISAN_THK='THICKNESS'                                               1138
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    1139
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           1139
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   1139
C *                                                                       1139
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    1139
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           1139
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   1139
*--------------------------------------------------------
C *                                                                       1142
      CALL AGSBEGM(MODULE,IPRIN)                                          1142
      IF (IPRIN.LT.0) RETURN                                              1142
C Filling bank ISHY - KAPTON HYBRID                                       1142
      BANK_TITLE='KAPTON HYBRID'                                          1142
      BPATH_ISHY='ISHY*'                                                  1142
      IDNUM_ISHY(1)=0                                                     1143
C MAY HAVE A FEW                                                          1143
      ISHY_VERSION=1                                                      1143
      CISHY_VERSION='MAY HAVE A FEW'                                      1143
C WIDTH                                                                   1144
      ISHY_W=4.0                                                          1144
      CISHY_W='WIDTH'                                                     1144
C LENGTH                                                                  1145
      ISHY_H=4.0                                                          1145
      CISHY_H='LENGTH'                                                    1145
C THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2MIL KAPTON        1146
      ISHY_THK=0.0050                                                     1146
      CISHY_THK='THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2M  1146
     *IL KAPTON'                                                          1146
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    1147
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           1147
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   1147
C *                                                                       1147
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    1147
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           1147
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   1147
*--------------------------------------------------------
C *                                                                       1150
      CALL AGSBEGM(MODULE,IPRIN)                                          1150
      IF (IPRIN.LT.0) RETURN                                              1150
C Filling bank ISCU - COPPER TRACES ON HYBRID                             1150
      BANK_TITLE='COPPER TRACES ON HYBRID'                                1150
      BPATH_ISCU='ISCU*'                                                  1150
      IDNUM_ISCU(1)=0                                                     1151
C MAY HAVE A FEW                                                          1151
      ISCU_VERSION=1                                                      1151
      CISCU_VERSION='MAY HAVE A FEW'                                      1151
C WIDTH                                                                   1152
      ISCU_W=4.0                                                          1152
      CISCU_W='WIDTH'                                                     1152
C LENGTH                                                                  1153
      ISCU_H=4.0                                                          1153
      CISCU_H='LENGTH'                                                    1153
C THICKNESS, 0.7MIL CU                                                    1154
      ISCU_THK=0.0018                                                     1154
      CISCU_THK='THICKNESS, 0.7MIL CU'                                    1154
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    1155
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           1155
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   1155
C *                                                                       1155
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    1155
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           1155
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   1155
*--------------------------------------------------------
C *                                                                       1158
      CALL AGSBEGM(MODULE,IPRIN)                                          1158
      IF (IPRIN.LT.0) RETURN                                              1158
C Filling bank ISCG - READOUT CHIP GEOMETRY, FIRST APPROX.                1158
      BANK_TITLE='READOUT CHIP GEOMETRY, FIRST APPROX.'                   1158
      BPATH_ISCG='ISCG*'                                                  1158
      IDNUM_ISCG(1)=0                                                     1159
C WE MAY HAVE A FEW DIFFERENT CHIPS                                       1159
      ISCG_VERSION=1                                                      1159
      CISCG_VERSION='WE MAY HAVE A FEW DIFFERENT CHIPS'                   1159
C WIDTH                                                                   1160
      ISCG_W=0.8055                                                       1160
      CISCG_W='WIDTH'                                                     1160
C HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)                          1161
      ISCG_H=4.0                                                          1161
      CISCG_H='HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)'            1161
C THICKNESS                                                               1162
      ISCG_THK=0.0762                                                     1162
      CISCG_THK='THICKNESS'                                               1162
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    1163
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           1163
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   1163
C *                                                                       1163
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    1163
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           1163
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   1163
*--------------------------------------------------------
C *                                                                       1166
      CALL AGSBEGM(MODULE,IPRIN)                                          1166
      IF (IPRIN.LT.0) RETURN                                              1166
C Filling bank ISGA - GLUE LAYER, SAME SIZE AS SENSOR                     1166
      BANK_TITLE='GLUE LAYER, SAME SIZE AS SENSOR'                        1166
      BPATH_ISGA='ISGA*'                                                  1166
      IDNUM_ISGA(1)=0                                                     1167
C MAY HAVE A FEW                                                          1167
      ISGA_VERSION=1                                                      1167
      CISGA_VERSION='MAY HAVE A FEW'                                      1167
C WIDTH                                                                   1168
      ISGA_W=4.0                                                          1168
      CISGA_W='WIDTH'                                                     1168
C LENGTH                                                                  1169
      ISGA_H=4.0                                                          1169
      CISGA_H='LENGTH'                                                    1169
C THICKNESS, USE 50UM                                                     1170
      ISGA_THK=0.0050                                                     1170
      CISGA_THK='THICKNESS, USE 50UM'                                     1170
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    1171
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           1171
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   1171
C *                                                                       1171
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    1171
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           1171
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   1171
*--------------------------------------------------------
C *                                                                       1174
      CALL AGSBEGM(MODULE,IPRIN)                                          1174
      IF (IPRIN.LT.0) RETURN                                              1174
C Filling bank ISGB - GLUE LAYER, SAME SIZE AS CHIP                       1174
      BANK_TITLE='GLUE LAYER, SAME SIZE AS CHIP'                          1174
      BPATH_ISGB='ISGB*'                                                  1174
      IDNUM_ISGB(1)=0                                                     1175
C MAY HAVE A FEW                                                          1175
      ISGB_VERSION=1                                                      1175
      CISGB_VERSION='MAY HAVE A FEW'                                      1175
C WIDTH                                                                   1176
      ISGB_W=0.8055                                                       1176
      CISGB_W='WIDTH'                                                     1176
C LENGTH                                                                  1177
      ISGB_H=4.0                                                          1177
      CISGB_H='LENGTH'                                                    1177
C THICKNESS, USE 50UM                                                     1178
      ISGB_THK=0.0050                                                     1178
      CISGB_THK='THICKNESS, USE 50UM'                                     1178
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    1179
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           1179
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   1179
C *                                                                       1179
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    1179
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           1179
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   1179
* -------------------------------------------------------
C *                                                                       1181
      CALL AGSBEGM(MODULE,IPRIN)                                          1181
      IF (IPRIN.LT.0) RETURN                                              1181
C Filling bank ISRR - SUPPORT RING FOR LAYER 1                            1181
      BANK_TITLE='SUPPORT RING FOR LAYER 1'                               1181
      BPATH_ISRR='ISRR*'                                                  1181
      IDNUM_ISRR(1)=0                                                     1182
C LAYER                                                                   1182
      ISRR_LAYER=1                                                        1182
      CISRR_LAYER='LAYER'                                                 1182
C INNER RADIUS                                                            1183
      ISRR_RIN=6.00                                                       1183
      CISRR_RIN='INNER RADIUS'                                            1183
C OUTER RADIUS                                                            1184
      ISRR_ROUT=9.00                                                      1184
      CISRR_ROUT='OUTER RADIUS'                                           1184
C THICKNESS OF THE RING                                                   1185
      ISRR_LENGTH=2.00                                                    1185
      CISRR_LENGTH='THICKNESS OF THE RING'                                1185
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1186
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1186
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1186
C *                                                                       1186
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1186
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1186
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1186
C *                                                                       1188
      CALL AGSBEGM(MODULE,IPRIN)                                          1188
      IF (IPRIN.LT.0) RETURN                                              1188
C Filling bank ISRR - SUPPORT RING FOR LAYER 2                            1188
      BANK_TITLE='SUPPORT RING FOR LAYER 2'                               1188
      BPATH_ISRR='ISRR*'                                                  1188
      IDNUM_ISRR(1)=0                                                     1189
C LAYER                                                                   1189
      ISRR_LAYER=2                                                        1189
      CISRR_LAYER='LAYER'                                                 1189
C INNER RADIUS                                                            1190
      ISRR_RIN=11.10                                                      1190
      CISRR_RIN='INNER RADIUS'                                            1190
C OUTER RADIUS                                                            1191
      ISRR_ROUT=14.00                                                     1191
      CISRR_ROUT='OUTER RADIUS'                                           1191
C THICKNESS OF THE RING                                                   1192
      ISRR_LENGTH=2.00                                                    1192
      CISRR_LENGTH='THICKNESS OF THE RING'                                1192
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1193
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1193
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1193
C *                                                                       1193
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1193
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1193
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1193
C *                                                                       1195
      CALL AGSBEGM(MODULE,IPRIN)                                          1195
      IF (IPRIN.LT.0) RETURN                                              1195
C Filling bank ISRR - SUPPORT RING FOR LAYER 3                            1195
      BANK_TITLE='SUPPORT RING FOR LAYER 3'                               1195
      BPATH_ISRR='ISRR*'                                                  1195
      IDNUM_ISRR(1)=0                                                     1196
C LAYER                                                                   1196
      ISRR_LAYER=3                                                        1196
      CISRR_LAYER='LAYER'                                                 1196
C INNER RADIUS                                                            1197
      ISRR_RIN=15.00                                                      1197
      CISRR_RIN='INNER RADIUS'                                            1197
C OUTER RADIUS                                                            1198
      ISRR_ROUT=18.00                                                     1198
      CISRR_ROUT='OUTER RADIUS'                                           1198
C THICKNESS OF THE RING                                                   1199
      ISRR_LENGTH=1.25                                                    1199
      CISRR_LENGTH='THICKNESS OF THE RING'                                1199
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1200
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1200
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1200
C *                                                                       1200
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1200
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1200
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1200
* -------------------------------------------------------
C *                                                                       1202
      CALL AGSBEGM(MODULE,IPRIN)                                          1202
      IF (IPRIN.LT.0) RETURN                                              1202
C Filling bank ISCC - INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3          1202
      BANK_TITLE='INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3'             1202
      BPATH_ISCC='ISCC*'                                                  1202
      IDNUM_ISCC(1)=0                                                     1203
C VERSION                                                                 1203
      ISCC_VERSION=1                                                      1203
      CISCC_VERSION='VERSION'                                             1203
C INNER RADIUS SMALL                                                      1204
      ISCC_RIN1=13.00                                                     1204
      CISCC_RIN1='INNER RADIUS SMALL'                                     1204
C OUTER RADIUS SMALL                                                      1205
      ISCC_ROUT1=14.00                                                    1205
      CISCC_ROUT1='OUTER RADIUS SMALL'                                    1205
C INNER RADIUS LARGE                                                      1206
      ISCC_RIN2=15.00                                                     1206
      CISCC_RIN2='INNER RADIUS LARGE'                                     1206
C OUTER RADIUS LARGE                                                      1207
      ISCC_ROUT2=16.00                                                    1207
      CISCC_ROUT2='OUTER RADIUS LARGE'                                    1207
C THICKNESS OF THE RING                                                   1208
      ISCC_LENGTH=4.00                                                    1208
      CISCC_LENGTH='THICKNESS OF THE RING'                                1208
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    1209
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           1209
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   1209
C *                                                                       1209
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    1209
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           1209
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   1209
* -------------------------------------------------------
C *                                                                       1211
      CALL AGSBEGM(MODULE,IPRIN)                                          1211
      IF (IPRIN.LT.0) RETURN                                              1211
C Filling bank ISVR - CODE VERSION FOR G2T_VOLUME_ID                      1211
      BANK_TITLE='CODE VERSION FOR G2T_VOLUME_ID'                         1211
      BPATH_ISVR='ISVR*'                                                  1211
      IDNUM_ISVR(1)=0                                                     1212
C VERSION                                                                 1212
      ISVR_VERSION=2                                                      1212
      CISVR_VERSION='VERSION'                                             1212
C VERSION                                                                 1213
      ISVR_CODE=2                                                         1213
      CISVR_CODE='VERSION'                                                1213
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    1214
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           1214
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   1214
C *                                                                       1214
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    1214
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           1214
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   1214
* -------------------------------------------------------
* -------------------------------------------------------
      RADDEG = 3.14159265/180.0                                           1218
* -------------------------------------------------------
C use ISMG bank                                                           1220
      BPATH_ISMG='ISMG*'                                                  1220
      IDNUM_ISMG(1)=0                                                     1220
      ISMG_LAYER=1                                                        1220
      CALL AGDGETP('ISTBGEO2','*',-999,'ISMG',NISMG_LAYER,RE_ISMG_LAYER,  1220
     *BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,BANK_ISMG,LEN_ISMG,     1220
     *LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                                      1220
C use default ISVR bank                                                   1221
      BPATH_ISVR='ISVR*'                                                  1221
      IDNUM_ISVR(1)=0                                                     1221
      CALL AGDGETP('ISTBGEO2','*',-999,'ISVR',' ',BANK_ISVR, BPATH_ISVR,  1221
     *IDNUM_ISVR,1,MAP_ISVR,NAMES_ISVR,BANK_ISVR,LEN_ISVR,LLEN_ISVR,      1221
     *LINK_ISVR,FLAG_ISVR)                                                1221
      CALL AGSBEGM(MODULE,IPRIN)                                          1223
C Check IPRIN<0                                                           1223
      IF (IPRIN.LT.0) RETURN                                              1223
C Create IBMO :                                                           1223
C Call To Local Procedure IBMO                                            1223
      ASSIGN 5020 TO BLOCK_IBMO                                           1223
      GO TO  5010                                                         1223
5020  CONTINUE                                                            1223
C *                                                                       1223
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           1224
      CALL AGSRESET                                                       1224
      AG_MOTHER = 'CAVE'                                                  1224
      AG_TITLE = 'IBMO'                                                   1224
      AG_EXNAME = 'POSITION'                                              1224
      AG_PARLIST = 'MOTHER'                                               1224
      CALL AXPOSITION                                                     1224
C *                                                                       1224
      WRITE (*,*) 'ISTB mother - IBMO - created'                          1226
* -------------------------------------------------------
      CALL AGSENDM                                                        1228
      RETURN                                                              1228
C Begin Local Procedure IBMO                                              1228
C IBMO IS THE MOTHER OF THE ISTB DETECTOR                                 1228
5010  CONTINUE                                                            1228
         AG_TITLE='IBMO'                                                  1228
         AG_MODULE=MODULE                                                 1228
         AG_MARK='V00'                                                    1228
         CALL AGSPUSH                                                     1228
         AG_MODULE=MODULE                                                 1228
C    *                                                                    1228
C    Geant MATERIAL : AIR ===> inherited arguments used <===              1229
         CALL AGSRESET                                                    1229
         AG_TITLE = 'AIR'                                                 1229
         AG_EXNAME = 'MATERIAL'                                           1229
         AG_PARLIST = 'NONE'                                              1229
         CALL AXMATERIAL                                                  1229
C    *                                                                    1229
C    Geant ATTRIBUTE : IBMO ===> SEEN=1 COLO=1 <===                       1229
         CALL AGSRESET                                                    1230
         AG_SEEN = 1                                                      1230
         AG_COLO = 1                                                      1230
         AG_TITLE = 'IBMO'                                                1230
         AG_EXNAME = 'ATTRIBUTE'                                          1230
         AG_PARLIST = 'SEEN_COLO'                                         1230
         CALL AXATTRIBUTE                                                 1230
C    *                                                                    1230
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  1234
C    LLENGTH/2.0 <===                                                     1234
         CALL AGSRESET                                                    1234
         AG_RMIN = ISMG_RIN                                               1234
         AG_RMAX = ISMG_ROUT                                              1234
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     1234
         AG_TITLE = 'TUBE'                                                1234
         AG_EXNAME = 'SHAPE'                                              1234
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      1234
         CALL AXSHAPE                                                     1234
C    *                                                                    1234
* -- Some administration to calculate the thickness of a module
* -- Kept for (private) future use
C    use ISAN bank                                                        1238
         BPATH_ISAN='ISAN*'                                               1238
         IDNUM_ISAN(1)=0                                                  1238
         ISAN_VERSION=1                                                   1238
         CALL AGDGETP('ISTBGEO2','*',-999,'ISAN',NISAN_VERSION,           1238
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     1238
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                1238
C    use ISGA bank                                                        1239
         BPATH_ISGA='ISGA*'                                               1239
         IDNUM_ISGA(1)=0                                                  1239
         ISGA_VERSION=1                                                   1239
         CALL AGDGETP('ISTBGEO2','*',-999,'ISGA',NISGA_VERSION,           1239
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     1239
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                1239
C    use ISBG bank                                                        1240
         BPATH_ISBG='ISBG*'                                               1240
         IDNUM_ISBG(1)=0                                                  1240
         ISBG_LAYER=1                                                     1240
         CALL AGDGETP('ISTBGEO2','*',-999,'ISBG',NISBG_LAYER,             1240
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       1240
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                1240
C    use ISGA bank                                                        1241
         BPATH_ISGA='ISGA*'                                               1241
         IDNUM_ISGA(1)=0                                                  1241
         ISGA_VERSION=1                                                   1241
         CALL AGDGETP('ISTBGEO2','*',-999,'ISGA',NISGA_VERSION,           1241
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     1241
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                1241
C    use ISHY bank                                                        1242
         BPATH_ISHY='ISHY*'                                               1242
         IDNUM_ISHY(1)=0                                                  1242
         ISHY_VERSION=1                                                   1242
         CALL AGDGETP('ISTBGEO2','*',-999,'ISHY',NISHY_VERSION,           1242
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     1242
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                1242
C    use ISCU bank                                                        1243
         BPATH_ISCU='ISCU*'                                               1243
         IDNUM_ISCU(1)=0                                                  1243
         ISCU_VERSION=1                                                   1243
         CALL AGDGETP('ISTBGEO2','*',-999,'ISCU',NISCU_VERSION,           1243
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     1243
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                1243
C    use ISGB bank                                                        1244
         BPATH_ISGB='ISGB*'                                               1244
         IDNUM_ISGB(1)=0                                                  1244
         ISGB_VERSION=1                                                   1244
         CALL AGDGETP('ISTBGEO2','*',-999,'ISGB',NISGB_VERSION,           1244
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     1244
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                1244
C    use ISCG bank                                                        1245
         BPATH_ISCG='ISCG*'                                               1245
         IDNUM_ISCG(1)=0                                                  1245
         ISCG_VERSION=1                                                   1245
         CALL AGDGETP('ISTBGEO2','*',-999,'ISCG',NISCG_VERSION,           1245
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     1245
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                1245
         MOD_THK = 2.0*(ISAN_THK/                                         1247
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+                   1247
     *   ISCU_THK+ISGB_THK+ISCG_THK)                                      1247
C    *                                                                    1249
         ISTLAYER=2                                                       1249
            GO TO 5033                                                    1249
5031        ISTLAYER=ISTLAYER+1                                           1249
5033        IF(ISTLAYER-(3).GT.0) GO TO 5032                              1249
C       use ISMG bank                                                     1250
            BPATH_ISMG='ISMG*'                                            1250
            IDNUM_ISMG(1)=0                                               1250
            ISMG_LAYER=ISTLAYER                                           1250
            CALL AGDGETP('ISTBGEO2','*',-999,'ISMG',NISMG_LAYER,          1250
     *      RE_ISMG_LAYER,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,    1250
     *      BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)             1250
C       use ISBG bank                                                     1251
            BPATH_ISBG='ISBG*'                                            1251
            IDNUM_ISBG(1)=0                                               1251
            ISBG_LAYER=ISTLAYER                                           1251
            CALL AGDGETP('ISTBGEO2','*',-999,'ISBG',NISBG_LAYER,          1251
     *      RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,    1251
     *      BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)             1251
C       use ISRR bank                                                     1252
            BPATH_ISRR='ISRR*'                                            1252
            IDNUM_ISRR(1)=0                                               1252
            ISRR_LAYER=ISTLAYER                                           1252
            CALL AGDGETP('ISTBGEO2','*',-999,'ISRR',NISRR_LAYER,          1252
     *      RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,    1252
     *      BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)             1252
C       Create IBMY :                                                     1253
C       Call To Local Procedure IBMY                                      1253
            ASSIGN 5050 TO BLOCK_IBMY                                     1253
            GO TO  5040                                                   1253
5050        CONTINUE                                                      1253
C       *                                                                 1253
C       Geant POSITION : IBMY ===> inherited arguments used <===          1254
            CALL AGSRESET                                                 1254
            AG_TITLE = 'IBMY'                                             1254
            AG_EXNAME = 'POSITION'                                        1254
            AG_PARLIST = 'NONE'                                           1254
            CALL AXPOSITION                                               1254
C       *                                                                 1254
         GO TO 5031                                                       1255
5032     CONTINUE                                                         1255
*     place the interconnects, east and west side
C    use ISBG bank                                                        1258
         BPATH_ISBG='ISBG*'                                               1258
         IDNUM_ISBG(1)=0                                                  1258
         ISBG_LAYER=2                                                     1258
         CALL AGDGETP('ISTBGEO2','*',-999,'ISBG',NISBG_LAYER,             1258
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       1258
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                1258
C    use ISRR bank                                                        1259
         BPATH_ISRR='ISRR*'                                               1259
         IDNUM_ISRR(1)=0                                                  1259
         ISRR_LAYER=2                                                     1259
         CALL AGDGETP('ISTBGEO2','*',-999,'ISRR',NISRR_LAYER,             1259
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       1259
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                1259
C    use ISCC bank                                                        1260
         BPATH_ISCC='ISCC*'                                               1260
         IDNUM_ISCC(1)=0                                                  1260
         ISCC_VERSION=1                                                   1260
         CALL AGDGETP('ISTBGEO2','*',-999,'ISCC',NISCC_VERSION,           1260
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     1260
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                1260
C    Create IBME :                                                        1261
C    Call To Local Procedure IBME                                         1261
         ASSIGN 5070 TO BLOCK_IBME                                        1261
         GO TO  5060                                                      1261
5070     CONTINUE                                                         1261
C    *                                                                    1261
C    Geant POSITION : IBME ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  1264
C    R_LENGTH+ISCC_LENGTH/2.0) <===                                       1264
         CALL AGSRESET                                                    1264
         AG_X = 0.0                                                       1264
         AG_Y = 0.0                                                       1264
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)         1264
         AG_TITLE = 'IBME'                                                1264
         AG_EXNAME = 'POSITION'                                           1264
         AG_PARLIST = 'X_Y_Z'                                             1264
         CALL AXPOSITION                                                  1264
C    *                                                                    1264
C    Create IBMW :                                                        1265
C    Call To Local Procedure IBMW                                         1265
         ASSIGN 5090 TO BLOCK_IBMW                                        1265
         GO TO  5080                                                      1265
5090     CONTINUE                                                         1265
C    *                                                                    1265
C    Geant POSITION : IBMW ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  1268
C    RR_LENGTH+ISCC_LENGTH/2.0) <===                                      1268
         CALL AGSRESET                                                    1268
         AG_X = 0.0                                                       1268
         AG_Y = 0.0                                                       1268
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)        1268
         AG_TITLE = 'IBMW'                                                1268
         AG_EXNAME = 'POSITION'                                           1268
         AG_PARLIST = 'X_Y_Z'                                             1268
         CALL AXPOSITION                                                  1268
C    *                                                                    1268
5011  CALL AGSPOPB                                                        1270
      GO TO BLOCK_IBMO, (5010 ,5020)                                      1270
C End of Local Procedure                                                  1270
* -------------------------------------------------------
C Begin Local Procedure IBMY                                              1273
C IBMY IS THE MOTHER OF THE INNER IST LAYER                               1273
5040  CONTINUE                                                            1273
         AG_TITLE='IBMY'                                                  1273
         AG_MODULE=MODULE                                                 1273
         AG_MARK='V00'                                                    1273
         CALL AGSPUSH                                                     1273
         AG_MODULE=MODULE                                                 1273
C    *                                                                    1273
C    Geant MATERIAL : AIR ===> inherited arguments used <===              1274
         CALL AGSRESET                                                    1274
         AG_TITLE = 'AIR'                                                 1274
         AG_EXNAME = 'MATERIAL'                                           1274
         AG_PARLIST = 'NONE'                                              1274
         CALL AXMATERIAL                                                  1274
C    *                                                                    1274
C    Geant ATTRIBUTE : IBMY ===> SEEN=0 COLO=6 SERIAL=ISTLAYER <===       1274
         CALL AGSRESET                                                    1275
         AG_SEEN = 0                                                      1275
         AG_COLO = 6                                                      1275
         AG_SERIAL = ISTLAYER                                             1275
         AG_TITLE = 'IBMY'                                                1275
         AG_EXNAME = 'ATTRIBUTE'                                          1275
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  1275
         CALL AXATTRIBUTE                                                 1275
C    *                                                                    1275
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  1279
C    LLENGTH/2.0 <===                                                     1279
         CALL AGSRESET                                                    1279
         AG_RMIN = ISMG_RIN                                               1279
         AG_RMAX = ISMG_ROUT                                              1279
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     1279
         AG_TITLE = 'TUBE'                                                1279
         AG_EXNAME = 'SHAPE'                                              1279
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      1279
         CALL AXSHAPE                                                     1279
C    *                                                                    1279
         WRITE(*,*) '===>GEOINFO/istbgeo: Creating IST layer',            1282
     *   ISBG_LAYER,' Rin=',ISMG_RIN,' Rout=',ISMG_ROUT                   1282
C    *                                                                    1283
         NL=1                                                             1283
            GO TO 5103                                                    1283
5101        NL=NL+1                                                       1283
5103        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5102                         1283
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                1283
C       BASE TILT, TO BE FURTHER CORRECTED                                1285
            ANGLE = (360.0/ISBG_NLADDER)*NL                               1285
*       GvN Offset perpendicular to the length of the module/ladder
*       this to move the midpoint of the sensors back on the required
*       radius after the tilting
            RLAD = ISBG_R+ISBG_PPEROFFSET                                 1290
*       Individual ladders can be individually tilted by using
*       the aOffset parameter (angular offset), and the pOffset
*       (position offset), which is the individual lateral
*       displacement.
            ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                        1297
*       The anglePos defines the POSITION of the center of the ladder
*       in space, along the lines of x=r*cos(...), y=r*sin(...)
*       have to correct and convert to radians:
C       SEE ABOVE COMMENT                                                 1303
            ANGLEPOS = ANGLE*RADDEG - ANGLECORR                           1303
            TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                      1304
C       Create IBAM :                                                     1306
C       Call To Local Procedure IBAM                                      1306
            ASSIGN 5120 TO BLOCK_IBAM                                     1306
            GO TO  5110                                                   1306
5120        CONTINUE                                                      1306
C       *                                                                 1306
C       Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(ANG  1310
C       LEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===                   1310
            CALL AGSRESET                                                 1310
            AG_X = TRUER*COS(ANGLEPOS)                                    1310
            AG_Y = TRUER*SIN(ANGLEPOS)                                    1310
            AG_Z = 0.0                                                    1310
            AG_ALPHAN=AG_ALPHAN+1                                         1310
            AG_ALPHAK(AG_ALPHAN)=3                                        1310
            AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                       1310
            AG_TITLE = 'IBAM'                                             1310
            AG_EXNAME = 'POSITION'                                        1310
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   1310
            CALL AXPOSITION                                               1310
C       *                                                                 1310
         GO TO 5101                                                       1312
5102     CONTINUE                                                         1312
*     place 2 support rings at both ends of the ladders
C    Create ISRI :                                                        1315
C    Call To Local Procedure ISRI                                         1315
         ASSIGN 5140 TO BLOCK_ISRI                                        1315
         GO TO  5130                                                      1315
5140     CONTINUE                                                         1315
C    *                                                                    1315
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  1318
C    R_LENGTH/2.0) <===                                                   1318
         CALL AGSRESET                                                    1318
         AG_X = 0.0                                                       1318
         AG_Y = 0.0                                                       1318
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                     1318
         AG_TITLE = 'ISRI'                                                1318
         AG_EXNAME = 'POSITION'                                           1318
         AG_PARLIST = 'X_Y_Z'                                             1318
         CALL AXPOSITION                                                  1318
C    *                                                                    1318
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  1318
C    RR_LENGTH/2.0) <===                                                  1318
         CALL AGSRESET                                                    1321
         AG_X = 0.0                                                       1321
         AG_Y = 0.0                                                       1321
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                    1321
         AG_TITLE = 'ISRI'                                                1321
         AG_EXNAME = 'POSITION'                                           1321
         AG_PARLIST = 'X_Y_Z'                                             1321
         CALL AXPOSITION                                                  1321
C    *                                                                    1321
5041  CALL AGSPOPB                                                        1323
      GO TO BLOCK_IBMY, (5040 ,5050)                                      1323
C End of Local Procedure                                                  1323
* -----------------------------------------------------------------------------
C Begin Local Procedure IBME                                              1325
C IBME IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE WEST SIDE      1325
5060  CONTINUE                                                            1325
         AG_TITLE='IBME'                                                  1325
         AG_MODULE=MODULE                                                 1325
         AG_MARK='V00'                                                    1325
         CALL AGSPUSH                                                     1325
         AG_MODULE=MODULE                                                 1325
C    *                                                                    1325
C    Geant MATERIAL : AIR ===> inherited arguments used <===              1326
         CALL AGSRESET                                                    1326
         AG_TITLE = 'AIR'                                                 1326
         AG_EXNAME = 'MATERIAL'                                           1326
         AG_PARLIST = 'NONE'                                              1326
         CALL AXMATERIAL                                                  1326
C    *                                                                    1326
C    Geant ATTRIBUTE : IBME ===> SEEN=0 COLO=2 <===                       1326
         CALL AGSRESET                                                    1327
         AG_SEEN = 0                                                      1327
         AG_COLO = 2                                                      1327
         AG_TITLE = 'IBME'                                                1327
         AG_EXNAME = 'ATTRIBUTE'                                          1327
         AG_PARLIST = 'SEEN_COLO'                                         1327
         CALL AXATTRIBUTE                                                 1327
C    *                                                                    1327
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  1333
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     1333
         CALL AGSRESET                                                    1333
         AG_RMN1 = ISCC_RIN1                                              1333
         AG_RMX1 = ISCC_ROUT1                                             1333
         AG_RMN2 = ISCC_RIN2                                              1333
         AG_RMX2 = ISCC_ROUT2                                             1333
         AG_DZ = ISCC_LENGTH/2.0                                          1333
         AG_TITLE = 'CONE'                                                1333
         AG_EXNAME = 'SHAPE'                                              1333
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            1333
         CALL AXSHAPE                                                     1333
C    *                                                                    1333
C    use ISBG bank                                                        1335
         BPATH_ISBG='ISBG*'                                               1335
         IDNUM_ISBG(1)=0                                                  1335
         ISBG_LAYER=2                                                     1335
         CALL AGDGETP('ISTBGEO2','*',-999,'ISBG',NISBG_LAYER,             1335
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       1335
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                1335
C    use ISRR bank                                                        1336
         BPATH_ISRR='ISRR*'                                               1336
         IDNUM_ISRR(1)=0                                                  1336
         ISRR_LAYER=2                                                     1336
         CALL AGDGETP('ISTBGEO2','*',-999,'ISRR',NISRR_LAYER,             1336
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       1336
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                1336
C    use ISCC bank                                                        1337
         BPATH_ISCC='ISCC*'                                               1337
         IDNUM_ISCC(1)=0                                                  1337
         ISCC_VERSION=1                                                   1337
         CALL AGDGETP('ISTBGEO2','*',-999,'ISCC',NISCC_VERSION,           1337
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     1337
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                1337
C    Create ISCO :                                                        1338
C    Call To Local Procedure ISCO                                         1338
         ASSIGN 5160 TO BLOCK_ISCO                                        1338
         GO TO  5150                                                      1338
5160     CONTINUE                                                         1338
C    *                                                                    1338
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 <===                  1341
         CALL AGSRESET                                                    1341
         AG_X = 0.0                                                       1341
         AG_Y = 0.0                                                       1341
         AG_Z = 0.0                                                       1341
         AG_TITLE = 'ISCO'                                                1341
         AG_EXNAME = 'POSITION'                                           1341
         AG_PARLIST = 'X_Y_Z'                                             1341
         CALL AXPOSITION                                                  1341
C    *                                                                    1341
5061  CALL AGSPOPB                                                        1343
      GO TO BLOCK_IBME, (5060 ,5070)                                      1343
C End of Local Procedure                                                  1343
* -----------------------------------------------------------------------------
C Begin Local Procedure IBMW                                              1346
C IBMW IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE EAST SIDE      1346
5080  CONTINUE                                                            1346
         AG_TITLE='IBMW'                                                  1346
         AG_MODULE=MODULE                                                 1346
         AG_MARK='V00'                                                    1346
         CALL AGSPUSH                                                     1346
         AG_MODULE=MODULE                                                 1346
C    *                                                                    1346
C    Geant MATERIAL : AIR ===> inherited arguments used <===              1347
         CALL AGSRESET                                                    1347
         AG_TITLE = 'AIR'                                                 1347
         AG_EXNAME = 'MATERIAL'                                           1347
         AG_PARLIST = 'NONE'                                              1347
         CALL AXMATERIAL                                                  1347
C    *                                                                    1347
C    Geant ATTRIBUTE : IBMW ===> SEEN=0 COLO=2 <===                       1347
         CALL AGSRESET                                                    1348
         AG_SEEN = 0                                                      1348
         AG_COLO = 2                                                      1348
         AG_TITLE = 'IBMW'                                                1348
         AG_EXNAME = 'ATTRIBUTE'                                          1348
         AG_PARLIST = 'SEEN_COLO'                                         1348
         CALL AXATTRIBUTE                                                 1348
C    *                                                                    1348
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN2 RMX1=ISCC_ROUT2 RMN2 = ISCC_  1348
C    RIN1 RMX2 = ISCC_ROUT1 DZ = ISCC_LENGTH/2.0 <===                     1348
         CALL AGSRESET                                                    1353
         AG_RMN1 = ISCC_RIN2                                              1353
         AG_RMX1 = ISCC_ROUT2                                             1353
         AG_RMN2 = ISCC_RIN1                                              1353
         AG_RMX2 = ISCC_ROUT1                                             1353
         AG_DZ = ISCC_LENGTH/2.0                                          1353
         AG_TITLE = 'CONE'                                                1353
         AG_EXNAME = 'SHAPE'                                              1353
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            1353
         CALL AXSHAPE                                                     1353
C    *                                                                    1353
C    use ISBG bank                                                        1355
         BPATH_ISBG='ISBG*'                                               1355
         IDNUM_ISBG(1)=0                                                  1355
         ISBG_LAYER=2                                                     1355
         CALL AGDGETP('ISTBGEO2','*',-999,'ISBG',NISBG_LAYER,             1355
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       1355
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                1355
C    use ISRR bank                                                        1356
         BPATH_ISRR='ISRR*'                                               1356
         IDNUM_ISRR(1)=0                                                  1356
         ISRR_LAYER=2                                                     1356
         CALL AGDGETP('ISTBGEO2','*',-999,'ISRR',NISRR_LAYER,             1356
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       1356
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                1356
C    use ISCC bank                                                        1357
         BPATH_ISCC='ISCC*'                                               1357
         IDNUM_ISCC(1)=0                                                  1357
         ISCC_VERSION=1                                                   1357
         CALL AGDGETP('ISTBGEO2','*',-999,'ISCC',NISCC_VERSION,           1357
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     1357
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                1357
C    Create ISCO :                                                        1358
C    Call To Local Procedure ISCO                                         1358
         ASSIGN 5170 TO BLOCK_ISCO                                        1358
         GO TO  5150                                                      1358
5170     CONTINUE                                                         1358
C    *                                                                    1358
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 ALPHAX = 180 <===     1362
         CALL AGSRESET                                                    1362
         AG_X = 0.0                                                       1362
         AG_Y = 0.0                                                       1362
         AG_Z = 0.0                                                       1362
         AG_ALPHAN=AG_ALPHAN+1                                            1362
         AG_ALPHAK(AG_ALPHAN)=1                                           1362
         AG_ALPHAL(AG_ALPHAN)=180                                         1362
         AG_TITLE = 'ISCO'                                                1362
         AG_EXNAME = 'POSITION'                                           1362
         AG_PARLIST = 'X_Y_Z_ALPHAX'                                      1362
         CALL AXPOSITION                                                  1362
C    *                                                                    1362
5081  CALL AGSPOPB                                                        1364
      GO TO BLOCK_IBMW, (5080 ,5090)                                      1364
C End of Local Procedure                                                  1364
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              1367
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             1367
5110  CONTINUE                                                            1367
         AG_TITLE='IBAM'                                                  1367
         AG_MODULE=MODULE                                                 1367
         AG_MARK='V00'                                                    1367
         CALL AGSPUSH                                                     1367
         AG_MODULE=MODULE                                                 1367
C    *                                                                    1367
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=2 <===                       1368
         CALL AGSRESET                                                    1368
         AG_SEEN = 0                                                      1368
         AG_COLO = 2                                                      1368
         AG_TITLE = 'IBAM'                                                1368
         AG_EXNAME = 'ATTRIBUTE'                                          1368
         AG_PARLIST = 'SEEN_COLO'                                         1368
         CALL AXATTRIBUTE                                                 1368
C    *                                                                    1368
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_LADDERTHK/2.  1372
C    0 DZ = ISBG_LENGTH/2.0 <===                                          1372
         CALL AGSRESET                                                    1372
         AG_DX = ISBG_LADDERWIDTH/2.0                                     1372
         AG_DY = ISBG_LADDERTHK/2.0                                       1372
         AG_DZ = ISBG_LENGTH/2.0                                          1372
         AG_TITLE = 'BOX'                                                 1372
         AG_EXNAME = 'SHAPE'                                              1372
         AG_PARLIST = 'DX_DY_DZ'                                          1372
         CALL AXSHAPE                                                     1372
C    *                                                                    1372
C    use ISHY bank                                                        1374
         BPATH_ISHY='ISHY*'                                               1374
         IDNUM_ISHY(1)=0                                                  1374
         ISHY_VERSION=1                                                   1374
         CALL AGDGETP('ISTBGEO2','*',-999,'ISHY',NISHY_VERSION,           1374
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     1374
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                1374
C    Create ISKH :                                                        1375
C    Call To Local Procedure ISKH                                         1375
         ASSIGN 5190 TO BLOCK_ISKH                                        1375
         GO TO  5180                                                      1375
5190     CONTINUE                                                         1375
C    *                                                                    1375
C    Create ISCL :                                                        1376
C    Call To Local Procedure ISCL                                         1376
         ASSIGN 5210 TO BLOCK_ISCL                                        1376
         GO TO  5200                                                      1376
5210     CONTINUE                                                         1376
C    *                                                                    1376
C    Create IBLM :                                                        1377
C    Call To Local Procedure IBLM                                         1377
         ASSIGN 5230 TO BLOCK_IBLM                                        1377
         GO TO  5220                                                      1377
5230     CONTINUE                                                         1377
C    *                                                                    1377
C    *                                                                    1378
         NU=1                                                             1378
            GO TO 5243                                                    1378
5241        NU=NU+1                                                       1378
5243        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5242                           1378
* --    IST modules
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -ISBG_LENGTH/2.0+ISBG  1382
C       _SENSORWIDTH*(NU-0.5) <===                                        1382
            CALL AGSRESET                                                 1382
            AG_X = 0.0                                                    1382
            AG_Y = 0.0                                                    1382
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1382
            AG_TITLE = 'IBLM'                                             1382
            AG_EXNAME = 'POSITION'                                        1382
            AG_PARLIST = 'X_Y_Z'                                          1382
            CALL AXPOSITION                                               1382
C       *                                                                 1382
* --    Dummy readout cables (Kapton+Copper) stacked on top of modules
* --    Note that the first part of the cable (the hybrid) is already part of the module
* --    daisy chain cables as: 5 sensors + 5 sensors             (for layer 2)
* --                           5 sensors + 5 sensors + 3 sensors (for layer 3)
C       Check NU>5                                                        1387
            IF (NU.GT.5) THEN                                             1387
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK/2.0  1390
C       ) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===             1390
            CALL AGSRESET                                                 1390
            AG_X = 0.0                                                    1390
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK/2.0)                         1390
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1390
            AG_TITLE = 'ISKH'                                             1390
            AG_EXNAME = 'POSITION'                                        1390
            AG_PARLIST = 'X_Y_Z'                                          1390
            CALL AXPOSITION                                               1390
C       *                                                                 1390
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  1390
C       U_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===    1390
            CALL AGSRESET                                                 1393
            AG_X = 0.0                                                    1393
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)                1393
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1393
            AG_TITLE = 'ISCL'                                             1393
            AG_EXNAME = 'POSITION'                                        1393
            AG_PARLIST = 'X_Y_Z'                                          1393
            CALL AXPOSITION                                               1393
C       *                                                                 1393
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK/2.  1393
C       0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===            1393
            CALL AGSRESET                                                 1396
            AG_X = 0.0                                                    1396
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK/2.0)                        1396
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1396
            AG_TITLE = 'ISKH'                                             1396
            AG_EXNAME = 'POSITION'                                        1396
            AG_PARLIST = 'X_Y_Z'                                          1396
            CALL AXPOSITION                                               1396
C       *                                                                 1396
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  1396
C       CU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===   1396
            CALL AGSRESET                                                 1399
            AG_X = 0.0                                                    1399
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)               1399
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1399
            AG_TITLE = 'ISCL'                                             1399
            AG_EXNAME = 'POSITION'                                        1399
            AG_PARLIST = 'X_Y_Z'                                          1399
            CALL AXPOSITION                                               1399
C       *                                                                 1399
            ENDIF                                                         1399
C       Check NU>10                                                       1401
            IF (NU.GT.10) THEN                                            1401
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  1404
C       U_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.  1404
C       5) <===                                                           1404
            CALL AGSRESET                                                 1404
            AG_X = 0.0                                                    1404
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)       1404
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1404
            AG_TITLE = 'ISKH'                                             1404
            AG_EXNAME = 'POSITION'                                        1404
            AG_PARLIST = 'X_Y_Z'                                          1404
            CALL AXPOSITION                                               1404
C       *                                                                 1404
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  1404
C       U_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWID  1404
C       TH*(NU-0.5) <===                                                  1404
            CALL AGSRESET                                                 1407
            AG_X = 0.0                                                    1407
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/  1407
     *      2.0)                                                          1407
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1407
            AG_TITLE = 'ISCL'                                             1407
            AG_EXNAME = 'POSITION'                                        1407
            AG_PARLIST = 'X_Y_Z'                                          1407
            CALL AXPOSITION                                               1407
C       *                                                                 1407
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  1407
C       CU_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0  1407
C       .5) <===                                                          1407
            CALL AGSRESET                                                 1410
            AG_X = 0.0                                                    1410
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)      1410
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1410
            AG_TITLE = 'ISKH'                                             1410
            AG_EXNAME = 'POSITION'                                        1410
            AG_PARLIST = 'X_Y_Z'                                          1410
            CALL AXPOSITION                                               1410
C       *                                                                 1410
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  1410
C       CU_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWI  1410
C       DTH*(NU-0.5) <===                                                 1410
            CALL AGSRESET                                                 1413
            AG_X = 0.0                                                    1413
            AG_Y = -1.0*(MOD_THK/                                         1413
     *      2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/2.0)                  1413
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1413
            AG_TITLE = 'ISCL'                                             1413
            AG_EXNAME = 'POSITION'                                        1413
            AG_PARLIST = 'X_Y_Z'                                          1413
            CALL AXPOSITION                                               1413
C       *                                                                 1413
            ENDIF                                                         1413
         GO TO 5241                                                       1416
5242     CONTINUE                                                         1416
5111  CALL AGSPOPB                                                        1418
      GO TO BLOCK_IBAM, (5110 ,5120)                                      1418
C End of Local Procedure                                                  1418
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              1421
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               1421
5220  CONTINUE                                                            1421
         AG_TITLE='IBLM'                                                  1421
         AG_MODULE=MODULE                                                 1421
         AG_MARK='V00'                                                    1421
         CALL AGSPUSH                                                     1421
         AG_MODULE=MODULE                                                 1421
C    *                                                                    1421
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=2 SERIAL=ISTLAYER <===       1422
         CALL AGSRESET                                                    1422
         AG_SEEN = 0                                                      1422
         AG_COLO = 2                                                      1422
         AG_SERIAL = ISTLAYER                                             1422
         AG_TITLE = 'IBLM'                                                1422
         AG_EXNAME = 'ATTRIBUTE'                                          1422
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  1422
         CALL AXATTRIBUTE                                                 1422
C    *                                                                    1422
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_SENSATHK/2.0  1426
C     DZ = ISBG_SENSORLNGTH/2.0 <===                                      1426
         CALL AGSRESET                                                    1426
         AG_DX = ISBG_LADDERWIDTH/2.0                                     1426
         AG_DY = ISBG_SENSATHK/2.0                                        1426
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     1426
         AG_TITLE = 'BOX'                                                 1426
         AG_EXNAME = 'SHAPE'                                              1426
         AG_PARLIST = 'DX_DY_DZ'                                          1426
         CALL AXSHAPE                                                     1426
C    *                                                                    1426
* -- Start stacking all the parts of the module
* -- Note that the module are mirror symmetric wrt the x-z plane
* -- with exception of the readout chips (minimize average material!)
* -- Carbon foam
C    use ISAN bank                                                        1433
         BPATH_ISAN='ISAN*'                                               1433
         IDNUM_ISAN(1)=0                                                  1433
         ISAN_VERSION=1                                                   1433
         CALL AGDGETP('ISTBGEO2','*',-999,'ISAN',NISAN_VERSION,           1433
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     1433
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                1433
C    Create ISTP :                                                        1434
C    Call To Local Procedure ISTP                                         1434
         ASSIGN 5260 TO BLOCK_ISTP                                        1434
         GO TO  5250                                                      1434
5260     CONTINUE                                                         1434
C    *                                                                    1434
C    Geant POSITION : ISTP ===> X=0.0 Y=0.0 Z = 0.0 <===                  1437
         CALL AGSRESET                                                    1437
         AG_X = 0.0                                                       1437
         AG_Y = 0.0                                                       1437
         AG_Z = 0.0                                                       1437
         AG_TITLE = 'ISTP'                                                1437
         AG_EXNAME = 'POSITION'                                           1437
         AG_PARLIST = 'X_Y_Z'                                             1437
         CALL AXPOSITION                                                  1437
C    *                                                                    1437
* -- Glue layers between foam and silicon
C    use ISGA bank                                                        1440
         BPATH_ISGA='ISGA*'                                               1440
         IDNUM_ISGA(1)=0                                                  1440
         ISGA_VERSION=1                                                   1440
         CALL AGDGETP('ISTBGEO2','*',-999,'ISGA',NISGA_VERSION,           1440
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     1440
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                1440
C    Create ISXA :                                                        1441
C    Call To Local Procedure ISXA                                         1441
         ASSIGN 5280 TO BLOCK_ISXA                                        1441
         GO TO  5270                                                      1441
5280     CONTINUE                                                         1441
C    *                                                                    1441
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK/2.0 Z   1444
C    = 0.0 <===                                                           1444
         CALL AGSRESET                                                    1444
         AG_X = 0.0                                                       1444
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK/2.0                             1444
         AG_Z = 0.0                                                       1444
         AG_TITLE = 'ISXA'                                                1444
         AG_EXNAME = 'POSITION'                                           1444
         AG_PARLIST = 'X_Y_Z'                                             1444
         CALL AXPOSITION                                                  1444
C    *                                                                    1444
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK/2.0 Z  1444
C     = 0.0 <===                                                          1444
         CALL AGSRESET                                                    1447
         AG_X = 0.0                                                       1447
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK/2.0                            1447
         AG_Z = 0.0                                                       1447
         AG_TITLE = 'ISXA'                                                1447
         AG_EXNAME = 'POSITION'                                           1447
         AG_PARLIST = 'X_Y_Z'                                             1447
         CALL AXPOSITION                                                  1447
C    *                                                                    1447
* -- Silicon Sensors
C    Create IBSS :                                                        1450
C    Call To Local Procedure IBSS                                         1450
         ASSIGN 5300 TO BLOCK_IBSS                                        1450
         GO TO  5290                                                      1450
5300     CONTINUE                                                         1450
C    *                                                                    1450
C    Geant POSITION : IBSS ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  1453
C    ENSORTHK/2.0 Z = 0.0 <===                                            1453
         CALL AGSRESET                                                    1453
         AG_X = 0.0                                                       1453
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK/2.0              1453
         AG_Z = 0.0                                                       1453
         AG_TITLE = 'IBSS'                                                1453
         AG_EXNAME = 'POSITION'                                           1453
         AG_PARLIST = 'X_Y_Z'                                             1453
         CALL AXPOSITION                                                  1453
C    *                                                                    1453
C    Geant POSITION : IBSS ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  1453
C    SENSORTHK/2.0 Z = 0.0 ALPHAZ = 180 <===                              1453
         CALL AGSRESET                                                    1457
         AG_X = 0.0                                                       1457
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK/2.0             1457
         AG_Z = 0.0                                                       1457
         AG_ALPHAN=AG_ALPHAN+1                                            1457
         AG_ALPHAK(AG_ALPHAN)=3                                           1457
         AG_ALPHAL(AG_ALPHAN)=180                                         1457
         AG_TITLE = 'IBSS'                                                1457
         AG_EXNAME = 'POSITION'                                           1457
         AG_PARLIST = 'X_Y_Z_ALPHAZ'                                      1457
         CALL AXPOSITION                                                  1457
C    *                                                                    1457
* -- Glue layers between silicon and hybrid
C    use ISGA bank                                                        1460
         BPATH_ISGA='ISGA*'                                               1460
         IDNUM_ISGA(1)=0                                                  1460
         ISGA_VERSION=1                                                   1460
         CALL AGDGETP('ISTBGEO2','*',-999,'ISGA',NISGA_VERSION,           1460
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     1460
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                1460
C    Create ISXA :                                                        1461
C    Call To Local Procedure ISXA                                         1461
         ASSIGN 5310 TO BLOCK_ISXA                                        1461
         GO TO  5270                                                      1461
5310     CONTINUE                                                         1461
C    *                                                                    1461
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  1464
C    ENSORTHK+ISGA_THK/2.0 Z = 0.0 <===                                   1464
         CALL AGSRESET                                                    1464
         AG_X = 0.0                                                       1464
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK/2.0     1464
         AG_Z = 0.0                                                       1464
         AG_TITLE = 'ISXA'                                                1464
         AG_EXNAME = 'POSITION'                                           1464
         AG_PARLIST = 'X_Y_Z'                                             1464
         CALL AXPOSITION                                                  1464
C    *                                                                    1464
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  1464
C    SENSORTHK-ISGA_THK/2.0 Z = 0.0 <===                                  1464
         CALL AGSRESET                                                    1467
         AG_X = 0.0                                                       1467
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK/2.0    1467
         AG_Z = 0.0                                                       1467
         AG_TITLE = 'ISXA'                                                1467
         AG_EXNAME = 'POSITION'                                           1467
         AG_PARLIST = 'X_Y_Z'                                             1467
         CALL AXPOSITION                                                  1467
C    *                                                                    1467
* -- Kapton hybrids
C    use ISHY bank                                                        1470
         BPATH_ISHY='ISHY*'                                               1470
         IDNUM_ISHY(1)=0                                                  1470
         ISHY_VERSION=1                                                   1470
         CALL AGDGETP('ISTBGEO2','*',-999,'ISHY',NISHY_VERSION,           1470
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     1470
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                1470
C    Create ISKH :                                                        1471
C    Call To Local Procedure ISKH                                         1471
         ASSIGN 5320 TO BLOCK_ISKH                                        1471
         GO TO  5180                                                      1471
5320     CONTINUE                                                         1471
C    *                                                                    1471
C    Geant POSITION : ISKH ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  1474
C    ENSORTHK+ISGA_THK+ISHY_THK/2.0 Z = 0.0 <===                          1474
         CALL AGSRESET                                                    1474
         AG_X = 0.0                                                       1474
         AG_Y = 1.0*ISAN_THK/                                             1474
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK/2.0                1474
         AG_Z = 0.0                                                       1474
         AG_TITLE = 'ISKH'                                                1474
         AG_EXNAME = 'POSITION'                                           1474
         AG_PARLIST = 'X_Y_Z'                                             1474
         CALL AXPOSITION                                                  1474
C    *                                                                    1474
C    Geant POSITION : ISKH ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  1474
C    SENSORTHK-ISGA_THK-ISHY_THK/2.0 Z = 0.0 <===                         1474
         CALL AGSRESET                                                    1477
         AG_X = 0.0                                                       1477
         AG_Y = -1.0*ISAN_THK/                                            1477
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK/2.0                1477
         AG_Z = 0.0                                                       1477
         AG_TITLE = 'ISKH'                                                1477
         AG_EXNAME = 'POSITION'                                           1477
         AG_PARLIST = 'X_Y_Z'                                             1477
         CALL AXPOSITION                                                  1477
C    *                                                                    1477
* -- Copper on the hybrid, 10 um total for couple of 5um lines at 50% coverage + ground plane
C    use ISCU bank                                                        1480
         BPATH_ISCU='ISCU*'                                               1480
         IDNUM_ISCU(1)=0                                                  1480
         ISCU_VERSION=1                                                   1480
         CALL AGDGETP('ISTBGEO2','*',-999,'ISCU',NISCU_VERSION,           1480
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     1480
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                1480
C    Create ISCL :                                                        1481
C    Call To Local Procedure ISCL                                         1481
         ASSIGN 5330 TO BLOCK_ISCL                                        1481
         GO TO  5200                                                      1481
5330     CONTINUE                                                         1481
C    *                                                                    1481
C    Geant POSITION : ISCL ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  1484
C    ENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0 Z = 0.0 <===                 1484
         CALL AGSRESET                                                    1484
         AG_X = 0.0                                                       1484
         AG_Y = 1.0*ISAN_THK/                                             1484
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0       1484
         AG_Z = 0.0                                                       1484
         AG_TITLE = 'ISCL'                                                1484
         AG_EXNAME = 'POSITION'                                           1484
         AG_PARLIST = 'X_Y_Z'                                             1484
         CALL AXPOSITION                                                  1484
C    *                                                                    1484
C    Geant POSITION : ISCL ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  1484
C    SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0 Z = 0.0 <===                1484
         CALL AGSRESET                                                    1487
         AG_X = 0.0                                                       1487
         AG_Y = -1.0*ISAN_THK/                                            1487
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0       1487
         AG_Z = 0.0                                                       1487
         AG_TITLE = 'ISCL'                                                1487
         AG_EXNAME = 'POSITION'                                           1487
         AG_PARLIST = 'X_Y_Z'                                             1487
         CALL AXPOSITION                                                  1487
C    *                                                                    1487
* -- Glue layers between hybrid and chip
C    use ISGB bank                                                        1490
         BPATH_ISGB='ISGB*'                                               1490
         IDNUM_ISGB(1)=0                                                  1490
         ISGB_VERSION=1                                                   1490
         CALL AGDGETP('ISTBGEO2','*',-999,'ISGB',NISGB_VERSION,           1490
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     1490
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                1490
C    Create ISLB :                                                        1491
C    Call To Local Procedure ISLB                                         1491
         ASSIGN 5350 TO BLOCK_ISLB                                        1491
         GO TO  5340                                                      1491
5350     CONTINUE                                                         1491
C    *                                                                    1491
C    Geant POSITION : ISLB ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  1494
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  1494
C    _THK+ISGB_THK/2.0 Z = 0.0 <===                                       1494
         CALL AGSRESET                                                    1494
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   1494
         AG_Y = 1.0*ISAN_THK/                                             1494
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          1494
     *   ISGB_THK/2.0                                                     1494
         AG_Z = 0.0                                                       1494
         AG_TITLE = 'ISLB'                                                1494
         AG_EXNAME = 'POSITION'                                           1494
         AG_PARLIST = 'X_Y_Z'                                             1494
         CALL AXPOSITION                                                  1494
C    *                                                                    1494
C    Geant POSITION : ISLB ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  1494
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  1494
C    CU_THK-ISGB_THK/2.0 Z = 0.0 <===                                     1494
         CALL AGSRESET                                                    1497
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  1497
         AG_Y = -1.0*ISAN_THK/                                            1497
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          1497
     *   ISGB_THK/2.0                                                     1497
         AG_Z = 0.0                                                       1497
         AG_TITLE = 'ISLB'                                                1497
         AG_EXNAME = 'POSITION'                                           1497
         AG_PARLIST = 'X_Y_Z'                                             1497
         CALL AXPOSITION                                                  1497
C    *                                                                    1497
* -- Readout chips, put at 2mm from the edge of the sensor
C    use ISCG bank                                                        1500
         BPATH_ISCG='ISCG*'                                               1500
         IDNUM_ISCG(1)=0                                                  1500
         ISCG_VERSION=1                                                   1500
         CALL AGDGETP('ISTBGEO2','*',-999,'ISCG',NISCG_VERSION,           1500
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     1500
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                1500
C    Create ISSC :                                                        1501
C    Call To Local Procedure ISSC                                         1501
         ASSIGN 5370 TO BLOCK_ISSC                                        1501
         GO TO  5360                                                      1501
5370     CONTINUE                                                         1501
C    *                                                                    1501
C    Geant POSITION : ISSC ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  1504
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  1504
C    _THK+ISGB_THK+ISCG_THK/2.0 Z = 0.0 <===                              1504
         CALL AGSRESET                                                    1504
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   1504
         AG_Y = 1.0*ISAN_THK/                                             1504
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          1504
     *   ISGB_THK+ISCG_THK/2.0                                            1504
         AG_Z = 0.0                                                       1504
         AG_TITLE = 'ISSC'                                                1504
         AG_EXNAME = 'POSITION'                                           1504
         AG_PARLIST = 'X_Y_Z'                                             1504
         CALL AXPOSITION                                                  1504
C    *                                                                    1504
C    Geant POSITION : ISSC ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  1504
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  1504
C    CU_THK-ISGB_THK-ISCG_THK/2.0 Z = 0.0 <===                            1504
         CALL AGSRESET                                                    1507
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  1507
         AG_Y = -1.0*ISAN_THK/                                            1507
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          1507
     *   ISGB_THK-ISCG_THK/2.0                                            1507
         AG_Z = 0.0                                                       1507
         AG_TITLE = 'ISSC'                                                1507
         AG_EXNAME = 'POSITION'                                           1507
         AG_PARLIST = 'X_Y_Z'                                             1507
         CALL AXPOSITION                                                  1507
C    *                                                                    1507
5221  CALL AGSPOPB                                                        1507
      GO TO BLOCK_IBLM, (5220 ,5230)                                      1508
C End of Local Procedure                                                  1508
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              1511
C IBSS IS THE SILICON SENSOR                                              1511
5290  CONTINUE                                                            1511
         AG_TITLE='IBSS'                                                  1511
         AG_MODULE=MODULE                                                 1511
         AG_MARK='V00'                                                    1511
         CALL AGSPUSH                                                     1511
         AG_MODULE=MODULE                                                 1511
C    *                                                                    1511
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          1512
         CALL AGSRESET                                                    1512
         AG_TITLE = 'SILICON'                                             1512
         AG_EXNAME = 'MATERIAL'                                           1512
         AG_PARLIST = 'NONE'                                              1512
         CALL AXMATERIAL                                                  1512
C    *                                                                    1512
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         1512
         CALL AGSRESET                                                    1513
         AG_ISVOL = 1                                                     1513
         AG_TITLE = 'SENSITIVE'                                           1513
         AG_EXNAME = 'MATERIAL'                                           1513
         AG_PARLIST = 'ISVOL'                                             1513
         CALL AXMATERIAL                                                  1513
C    *                                                                    1513
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=38 <===                      1515
         CALL AGSRESET                                                    1515
         AG_SEEN = 1                                                      1515
         AG_COLO = 38                                                     1515
         AG_TITLE = 'IBSS'                                                1515
         AG_EXNAME = 'ATTRIBUTE'                                          1515
         AG_PARLIST = 'SEEN_COLO'                                         1515
         CALL AXATTRIBUTE                                                 1515
C    *                                                                    1515
C    Geant SHAPE : BOX ===> DX=ISBG_SENSORWIDTH/2.0 DY=ISBG_SENSORTHK/2.  1519
C    0 DZ = ISBG_SENSORLNGTH/2.0 <===                                     1519
         CALL AGSRESET                                                    1519
         AG_DX = ISBG_SENSORWIDTH/2.0                                     1519
         AG_DY = ISBG_SENSORTHK/2.0                                       1519
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     1519
         AG_TITLE = 'BOX'                                                 1519
         AG_EXNAME = 'SHAPE'                                              1519
         AG_PARLIST = 'DX_DY_DZ'                                          1519
         CALL AXSHAPE                                                     1519
C    *                                                                    1519
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  1523
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  1523
C    ,0.001)                                                              1523
         AG_TITLE = 'IBSS'                                                1523
         AG_EXNAME = 'HITS'                                               1523
         AG_TYPE=AG_MAGIC                                                 1523
         CALL AGSDETV('IBSS')                                             1523
C    *                                                                    1523
         AG_PARLIST='Z'                                                   1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = AG_MAGIC                                              1523
         AG_BIN=.001                                                      1523
         AG_OPTION='S'                                                    1523
         AG_FHMIN = AG_MAGIC                                              1523
         AG_FHMAX = AG_MAGIC                                              1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='Y'                                                   1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = AG_MAGIC                                              1523
         AG_BIN=.001                                                      1523
         AG_FHMIN=AG_MAGIC                                                1523
         AG_FHMAX=AG_MAGIC                                                1523
         AG_OPTION='*'                                                    1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='X'                                                   1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = AG_MAGIC                                              1523
         AG_BIN=.001                                                      1523
         AG_FHMIN=AG_MAGIC                                                1523
         AG_FHMAX=AG_MAGIC                                                1523
         AG_OPTION='*'                                                    1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='PTOT'                                                1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = 16                                                    1523
         AG_BIN=AG_MAGIC                                                  1523
         AG_OPTION='*'                                                    1523
         AG_FHMIN = 0                                                     1523
         AG_FHMAX = 100                                                   1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='CX'                                                  1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = 10                                                    1523
         AG_BIN=AG_MAGIC                                                  1523
         AG_FHMIN=AG_MAGIC                                                1523
         AG_FHMAX=AG_MAGIC                                                1523
         AG_OPTION='*'                                                    1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='CY'                                                  1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = 10                                                    1523
         AG_BIN=AG_MAGIC                                                  1523
         AG_FHMIN=AG_MAGIC                                                1523
         AG_FHMAX=AG_MAGIC                                                1523
         AG_OPTION='*'                                                    1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='CZ'                                                  1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = 10                                                    1523
         AG_BIN=AG_MAGIC                                                  1523
         AG_FHMIN=AG_MAGIC                                                1523
         AG_FHMAX=AG_MAGIC                                                1523
         AG_OPTION='*'                                                    1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='SLENG'                                               1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = 16                                                    1523
         AG_BIN=AG_MAGIC                                                  1523
         AG_OPTION='*'                                                    1523
         AG_FHMIN = 0                                                     1523
         AG_FHMAX = 500                                                   1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='TOF'                                                 1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = 16                                                    1523
         AG_BIN=AG_MAGIC                                                  1523
         AG_OPTION='*'                                                    1523
         AG_FHMIN = 0                                                     1523
         AG_FHMAX = 1.E-6                                                 1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='STEP'                                                1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = AG_MAGIC                                              1523
         AG_BIN=.01                                                       1523
         AG_FHMIN=AG_MAGIC                                                1523
         AG_FHMAX=AG_MAGIC                                                1523
         AG_OPTION='*'                                                    1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         AG_PARLIST='ELOSS'                                               1523
         AG_TITLE = 'DETH'                                                1523
         AG_NBITS = 16                                                    1523
         AG_BIN=AG_MAGIC                                                  1523
         AG_OPTION='*'                                                    1523
         AG_FHMIN = 0                                                     1523
         AG_FHMAX = 0.001                                                 1523
         CALL AGSDETH (0)                                                 1523
C    *                                                                    1523
         CALL AGSDETU('IBSS')                                             1523
C    *                                                                    1523
5291  CALL AGSPOPB                                                        1525
      GO TO BLOCK_IBSS, (5290 ,5300)                                      1525
C End of Local Procedure                                                  1525
* -----------------------------------------------------------------------------
C Begin Local Procedure ISKH                                              1528
C ISKH IS THE KAPTON HYBRID                                               1528
5180  CONTINUE                                                            1528
         AG_TITLE='ISKH'                                                  1528
         AG_MODULE=MODULE                                                 1528
         AG_MARK='V00'                                                    1528
         CALL AGSPUSH                                                     1528
         AG_MODULE=MODULE                                                 1528
C    *                                                                    1528
C    Geant ATTRIBUTE : ISKH ===> SEEN=1 COLO=42 <===                      1529
         CALL AGSRESET                                                    1529
         AG_SEEN = 1                                                      1529
         AG_COLO = 42                                                     1529
         AG_TITLE = 'ISKH'                                                1529
         AG_EXNAME = 'ATTRIBUTE'                                          1529
         AG_PARLIST = 'SEEN_COLO'                                         1529
         CALL AXATTRIBUTE                                                 1529
C    *                                                                    1529
C    KAPTON C22-H10-N2-O4                                                 1531
C    Geant COMPONENT : C ===> A=12 Z=6 W=22.0*12.0/366.0 <===             1532
         CALL AGSRESET                                                    1532
         AG_A = 12                                                        1532
         AG_Z = 6                                                         1532
         AG_W = 22.0*12.0/366.0                                           1532
         AG_TITLE = 'C'                                                   1532
         AG_EXNAME = 'COMPONENT'                                          1532
         AG_PARLIST = 'A_Z_W'                                             1532
         CALL AXCOMPONENT                                                 1532
C    *                                                                    1532
C    Geant COMPONENT : H ===> A=1 Z=1 W=10.0*1.0/366.0 <===               1532
         CALL AGSRESET                                                    1533
         AG_A = 1                                                         1533
         AG_Z = 1                                                         1533
         AG_W = 10.0*1.0/366.0                                            1533
         AG_TITLE = 'H'                                                   1533
         AG_EXNAME = 'COMPONENT'                                          1533
         AG_PARLIST = 'A_Z_W'                                             1533
         CALL AXCOMPONENT                                                 1533
C    *                                                                    1533
C    Geant COMPONENT : N ===> A=14 Z=7 W=2.0*14.0/366.0 <===              1533
         CALL AGSRESET                                                    1534
         AG_A = 14                                                        1534
         AG_Z = 7                                                         1534
         AG_W = 2.0*14.0/366.0                                            1534
         AG_TITLE = 'N'                                                   1534
         AG_EXNAME = 'COMPONENT'                                          1534
         AG_PARLIST = 'A_Z_W'                                             1534
         CALL AXCOMPONENT                                                 1534
C    *                                                                    1534
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/366.0 <===              1534
         CALL AGSRESET                                                    1535
         AG_A = 16                                                        1535
         AG_Z = 8                                                         1535
         AG_W = 4.0*16.0/366.0                                            1535
         AG_TITLE = 'O'                                                   1535
         AG_EXNAME = 'COMPONENT'                                          1535
         AG_PARLIST = 'A_Z_W'                                             1535
         CALL AXCOMPONENT                                                 1535
C    *                                                                    1535
C    Geant MIXTURE : KAPTON ===> DENS=1.42 <===                           1535
         CALL AGSRESET                                                    1536
         AG_DENS = 1.42                                                   1536
         AG_TITLE = 'KAPTON'                                              1536
         AG_EXNAME = 'MIXTURE'                                            1536
         AG_PARLIST = 'DENS'                                              1536
         CALL AXMIXTURE                                                   1536
C    *                                                                    1536
C    Geant SHAPE : BOX ===> DX=ISHY_H/2.0 DY=ISHY_THK/2.0 DZ = ISHY_W/2.  1540
C    0 <===                                                               1540
         CALL AGSRESET                                                    1540
         AG_DX = ISHY_H/2.0                                               1540
         AG_DY = ISHY_THK/2.0                                             1540
         AG_DZ = ISHY_W/2.0                                               1540
         AG_TITLE = 'BOX'                                                 1540
         AG_EXNAME = 'SHAPE'                                              1540
         AG_PARLIST = 'DX_DY_DZ'                                          1540
         CALL AXSHAPE                                                     1540
C    *                                                                    1540
5181  CALL AGSPOPB                                                        1542
      GO TO BLOCK_ISKH, (5180 ,5190,5320)                                 1542
C End of Local Procedure                                                  1542
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCL                                              1545
C ISCL IS THE COPPER LAYER ON THE KAPTON HYBRID                           1545
5200  CONTINUE                                                            1545
         AG_TITLE='ISCL'                                                  1545
         AG_MODULE=MODULE                                                 1545
         AG_MARK='V00'                                                    1545
         CALL AGSPUSH                                                     1545
         AG_MODULE=MODULE                                                 1545
C    *                                                                    1545
C    Geant ATTRIBUTE : ISCL ===> SEEN=1 COLO=46 <===                      1546
         CALL AGSRESET                                                    1546
         AG_SEEN = 1                                                      1546
         AG_COLO = 46                                                     1546
         AG_TITLE = 'ISCL'                                                1546
         AG_EXNAME = 'ATTRIBUTE'                                          1546
         AG_PARLIST = 'SEEN_COLO'                                         1546
         CALL AXATTRIBUTE                                                 1546
C    *                                                                    1546
C    Geant MATERIAL : COPPER ===> inherited arguments used <===           1548
         CALL AGSRESET                                                    1548
         AG_TITLE = 'COPPER'                                              1548
         AG_EXNAME = 'MATERIAL'                                           1548
         AG_PARLIST = 'NONE'                                              1548
         CALL AXMATERIAL                                                  1548
C    *                                                                    1548
C    Geant SHAPE : BOX ===> DX=ISCU_H/2.0 DY=ISCU_THK/2.0 DZ = ISCU_W/2.  1552
C    0 <===                                                               1552
         CALL AGSRESET                                                    1552
         AG_DX = ISCU_H/2.0                                               1552
         AG_DY = ISCU_THK/2.0                                             1552
         AG_DZ = ISCU_W/2.0                                               1552
         AG_TITLE = 'BOX'                                                 1552
         AG_EXNAME = 'SHAPE'                                              1552
         AG_PARLIST = 'DX_DY_DZ'                                          1552
         CALL AXSHAPE                                                     1552
C    *                                                                    1552
5201  CALL AGSPOPB                                                        1554
      GO TO BLOCK_ISCL, (5200 ,5210,5330)                                 1554
C End of Local Procedure                                                  1554
* -----------------------------------------------------------------------------
C Begin Local Procedure ISTP                                              1557
C ISTP IS THE CARBON FOAM                                                 1557
5250  CONTINUE                                                            1557
         AG_TITLE='ISTP'                                                  1557
         AG_MODULE=MODULE                                                 1557
         AG_MARK='V00'                                                    1557
         CALL AGSPUSH                                                     1557
         AG_MODULE=MODULE                                                 1557
C    *                                                                    1557
C    Geant ATTRIBUTE : ISTP ===> SEEN=1 COLO=13 <===                      1558
         CALL AGSRESET                                                    1558
         AG_SEEN = 1                                                      1558
         AG_COLO = 13                                                     1558
         AG_TITLE = 'ISTP'                                                1558
         AG_EXNAME = 'ATTRIBUTE'                                          1558
         AG_PARLIST = 'SEEN_COLO'                                         1558
         CALL AXATTRIBUTE                                                 1558
C    *                                                                    1558
C    CARBON FOAM DENSITY 0.24                                             1560
C    0.1 COMES FROM 4-5% OF CARBON DENSITY FOR CARBON FOAM                1561
C    0.24 IS WHEN WE ARTICIALLY INCREASE THE DENSITY TO SQUEEZE INTO 1.6  1562
C    86 MM                                                                1562
C    BETWEEN THE SENSORS                                                  1563
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        1564
         CALL AGSRESET                                                    1564
         AG_A = 12                                                        1564
         AG_Z = 6                                                         1564
         AG_W = 0.05                                                      1564
         AG_TITLE = 'C'                                                   1564
         AG_EXNAME = 'COMPONENT'                                          1564
         AG_PARLIST = 'A_Z_W'                                             1564
         CALL AXCOMPONENT                                                 1564
C    *                                                                    1564
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        1564
         CALL AGSRESET                                                    1565
         AG_A = 14                                                        1565
         AG_Z = 7                                                         1565
         AG_W = 0.95                                                      1565
         AG_TITLE = 'N'                                                   1565
         AG_EXNAME = 'COMPONENT'                                          1565
         AG_PARLIST = 'A_Z_W'                                             1565
         CALL AXCOMPONENT                                                 1565
C    *                                                                    1565
C    Geant MIXTURE : CFOAM ===> DENS=0.24 <===                            1565
         CALL AGSRESET                                                    1566
         AG_DENS = 0.24                                                   1566
         AG_TITLE = 'CFOAM'                                               1566
         AG_EXNAME = 'MIXTURE'                                            1566
         AG_PARLIST = 'DENS'                                              1566
         CALL AXMIXTURE                                                   1566
C    *                                                                    1566
C    Geant SHAPE : BOX ===> DX=ISAN_H/2.0 DY=ISAN_THK/2.0 DZ = ISAN_W/2.  1570
C    0 <===                                                               1570
         CALL AGSRESET                                                    1570
         AG_DX = ISAN_H/2.0                                               1570
         AG_DY = ISAN_THK/2.0                                             1570
         AG_DZ = ISAN_W/2.0                                               1570
         AG_TITLE = 'BOX'                                                 1570
         AG_EXNAME = 'SHAPE'                                              1570
         AG_PARLIST = 'DX_DY_DZ'                                          1570
         CALL AXSHAPE                                                     1570
C    *                                                                    1570
5251  CALL AGSPOPB                                                        1572
      GO TO BLOCK_ISTP, (5250 ,5260)                                      1572
C End of Local Procedure                                                  1572
* -----------------------------------------------------------------------------
C Begin Local Procedure ISSC                                              1575
C ISSC IS THE READOUT CHIP                                                1575
5360  CONTINUE                                                            1575
         AG_TITLE='ISSC'                                                  1575
         AG_MODULE=MODULE                                                 1575
         AG_MARK='V00'                                                    1575
         CALL AGSPUSH                                                     1575
         AG_MODULE=MODULE                                                 1575
C    *                                                                    1575
C    Geant ATTRIBUTE : ISSC ===> SEEN=1 COLO=37 <===                      1576
         CALL AGSRESET                                                    1576
         AG_SEEN = 1                                                      1576
         AG_COLO = 37                                                     1576
         AG_TITLE = 'ISSC'                                                1576
         AG_EXNAME = 'ATTRIBUTE'                                          1576
         AG_PARLIST = 'SEEN_COLO'                                         1576
         CALL AXATTRIBUTE                                                 1576
C    *                                                                    1576
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          1578
         CALL AGSRESET                                                    1578
         AG_TITLE = 'SILICON'                                             1578
         AG_EXNAME = 'MATERIAL'                                           1578
         AG_PARLIST = 'NONE'                                              1578
         CALL AXMATERIAL                                                  1578
C    *                                                                    1578
C    Geant SHAPE : BOX ===> DX=ISCG_W/2.0 DY=ISCG_THK/2.0 DZ = ISCG_H/2.  1582
C    0 <===                                                               1582
         CALL AGSRESET                                                    1582
         AG_DX = ISCG_W/2.0                                               1582
         AG_DY = ISCG_THK/2.0                                             1582
         AG_DZ = ISCG_H/2.0                                               1582
         AG_TITLE = 'BOX'                                                 1582
         AG_EXNAME = 'SHAPE'                                              1582
         AG_PARLIST = 'DX_DY_DZ'                                          1582
         CALL AXSHAPE                                                     1582
C    *                                                                    1582
5361  CALL AGSPOPB                                                        1584
      GO TO BLOCK_ISSC, (5360 ,5370)                                      1584
C End of Local Procedure                                                  1584
* -----------------------------------------------------------------------------
C Begin Local Procedure ISXA                                              1587
C ISXA IS THE LARGE GLUE LAYER BETWEEN CARBON FOAM AND SENSOR (AND SENSO  1587
C R AND HYBRID)                                                           1587
5270  CONTINUE                                                            1587
         AG_TITLE='ISXA'                                                  1587
         AG_MODULE=MODULE                                                 1587
         AG_MARK='V00'                                                    1587
         CALL AGSPUSH                                                     1587
         AG_MODULE=MODULE                                                 1587
C    *                                                                    1587
C    Geant ATTRIBUTE : ISXA ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      1588
         CALL AGSRESET                                                    1588
         AG_SEEN = 1                                                      1588
         AG_COLO = 11                                                     1588
         AG_SERIAL = ISTLAYER                                             1588
         AG_TITLE = 'ISXA'                                                1588
         AG_EXNAME = 'ATTRIBUTE'                                          1588
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  1588
         CALL AXATTRIBUTE                                                 1588
C    *                                                                    1588
C    EPOXY C8-H14-O4                                                      1590
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              1591
         CALL AGSRESET                                                    1591
         AG_A = 12                                                        1591
         AG_Z = 6                                                         1591
         AG_W = 8.0*12.0/174.0                                            1591
         AG_TITLE = 'C'                                                   1591
         AG_EXNAME = 'COMPONENT'                                          1591
         AG_PARLIST = 'A_Z_W'                                             1591
         CALL AXCOMPONENT                                                 1591
C    *                                                                    1591
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               1591
         CALL AGSRESET                                                    1592
         AG_A = 1                                                         1592
         AG_Z = 1                                                         1592
         AG_W = 14.0*1.0/174.0                                            1592
         AG_TITLE = 'H'                                                   1592
         AG_EXNAME = 'COMPONENT'                                          1592
         AG_PARLIST = 'A_Z_W'                                             1592
         CALL AXCOMPONENT                                                 1592
C    *                                                                    1592
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              1592
         CALL AGSRESET                                                    1593
         AG_A = 16                                                        1593
         AG_Z = 8                                                         1593
         AG_W = 4.0*16.0/174.0                                            1593
         AG_TITLE = 'O'                                                   1593
         AG_EXNAME = 'COMPONENT'                                          1593
         AG_PARLIST = 'A_Z_W'                                             1593
         CALL AXCOMPONENT                                                 1593
C    *                                                                    1593
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             1593
         CALL AGSRESET                                                    1594
         AG_DENS = 1.3                                                    1594
         AG_TITLE = 'EPOXY'                                               1594
         AG_EXNAME = 'MIXTURE'                                            1594
         AG_PARLIST = 'DENS'                                              1594
         CALL AXMIXTURE                                                   1594
C    *                                                                    1594
C    Geant SHAPE : BOX ===> DX=ISGA_W/2.0 DY=ISGA_THK/2.0 DZ = ISGA_H/2.  1598
C    0 <===                                                               1598
         CALL AGSRESET                                                    1598
         AG_DX = ISGA_W/2.0                                               1598
         AG_DY = ISGA_THK/2.0                                             1598
         AG_DZ = ISGA_H/2.0                                               1598
         AG_TITLE = 'BOX'                                                 1598
         AG_EXNAME = 'SHAPE'                                              1598
         AG_PARLIST = 'DX_DY_DZ'                                          1598
         CALL AXSHAPE                                                     1598
C    *                                                                    1598
5271  CALL AGSPOPB                                                        1600
      GO TO BLOCK_ISXA, (5270 ,5280,5310)                                 1600
C End of Local Procedure                                                  1600
* -----------------------------------------------------------------------------
C Begin Local Procedure ISLB                                              1603
C ISLB IS THE SMALL GLUE LAYER BETWEEN HYBRID AND CHIP                    1603
5340  CONTINUE                                                            1603
         AG_TITLE='ISLB'                                                  1603
         AG_MODULE=MODULE                                                 1603
         AG_MARK='V00'                                                    1603
         CALL AGSPUSH                                                     1603
         AG_MODULE=MODULE                                                 1603
C    *                                                                    1603
C    Geant ATTRIBUTE : ISLB ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      1604
         CALL AGSRESET                                                    1604
         AG_SEEN = 1                                                      1604
         AG_COLO = 11                                                     1604
         AG_SERIAL = ISTLAYER                                             1604
         AG_TITLE = 'ISLB'                                                1604
         AG_EXNAME = 'ATTRIBUTE'                                          1604
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  1604
         CALL AXATTRIBUTE                                                 1604
C    *                                                                    1604
C    EPOXY C8-H14-O4                                                      1606
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              1607
         CALL AGSRESET                                                    1607
         AG_A = 12                                                        1607
         AG_Z = 6                                                         1607
         AG_W = 8.0*12.0/174.0                                            1607
         AG_TITLE = 'C'                                                   1607
         AG_EXNAME = 'COMPONENT'                                          1607
         AG_PARLIST = 'A_Z_W'                                             1607
         CALL AXCOMPONENT                                                 1607
C    *                                                                    1607
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               1607
         CALL AGSRESET                                                    1608
         AG_A = 1                                                         1608
         AG_Z = 1                                                         1608
         AG_W = 14.0*1.0/174.0                                            1608
         AG_TITLE = 'H'                                                   1608
         AG_EXNAME = 'COMPONENT'                                          1608
         AG_PARLIST = 'A_Z_W'                                             1608
         CALL AXCOMPONENT                                                 1608
C    *                                                                    1608
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              1608
         CALL AGSRESET                                                    1609
         AG_A = 16                                                        1609
         AG_Z = 8                                                         1609
         AG_W = 4.0*16.0/174.0                                            1609
         AG_TITLE = 'O'                                                   1609
         AG_EXNAME = 'COMPONENT'                                          1609
         AG_PARLIST = 'A_Z_W'                                             1609
         CALL AXCOMPONENT                                                 1609
C    *                                                                    1609
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             1609
         CALL AGSRESET                                                    1610
         AG_DENS = 1.3                                                    1610
         AG_TITLE = 'EPOXY'                                               1610
         AG_EXNAME = 'MIXTURE'                                            1610
         AG_PARLIST = 'DENS'                                              1610
         CALL AXMIXTURE                                                   1610
C    *                                                                    1610
C    Geant SHAPE : BOX ===> DX=ISGB_W/2.0 DY=ISGB_THK/2.0 DZ = ISGB_H/2.  1614
C    0 <===                                                               1614
         CALL AGSRESET                                                    1614
         AG_DX = ISGB_W/2.0                                               1614
         AG_DY = ISGB_THK/2.0                                             1614
         AG_DZ = ISGB_H/2.0                                               1614
         AG_TITLE = 'BOX'                                                 1614
         AG_EXNAME = 'SHAPE'                                              1614
         AG_PARLIST = 'DX_DY_DZ'                                          1614
         CALL AXSHAPE                                                     1614
C    *                                                                    1614
5341  CALL AGSPOPB                                                        1616
      GO TO BLOCK_ISLB, (5340 ,5350)                                      1616
C End of Local Procedure                                                  1616
* -----------------------------------------------------------------------------
C Begin Local Procedure ISRI                                              1619
C ISRI IS THE SUPPORT RING FOR THE LAYERS                                 1619
5130  CONTINUE                                                            1619
         AG_TITLE='ISRI'                                                  1619
         AG_MODULE=MODULE                                                 1619
         AG_MARK='V00'                                                    1619
         CALL AGSPUSH                                                     1619
         AG_MODULE=MODULE                                                 1619
C    *                                                                    1619
C    Geant ATTRIBUTE : ISRA ===> SEEN=1 COLO=13 <===                      1620
         CALL AGSRESET                                                    1620
         AG_SEEN = 1                                                      1620
         AG_COLO = 13                                                     1620
         AG_TITLE = 'ISRA'                                                1620
         AG_EXNAME = 'ATTRIBUTE'                                          1620
         AG_PARLIST = 'SEEN_COLO'                                         1620
         CALL AXATTRIBUTE                                                 1620
C    *                                                                    1620
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        1622
         CALL AGSRESET                                                    1622
         AG_A = 12                                                        1622
         AG_Z = 6                                                         1622
         AG_W = 0.05                                                      1622
         AG_TITLE = 'C'                                                   1622
         AG_EXNAME = 'COMPONENT'                                          1622
         AG_PARLIST = 'A_Z_W'                                             1622
         CALL AXCOMPONENT                                                 1622
C    *                                                                    1622
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        1622
         CALL AGSRESET                                                    1623
         AG_A = 14                                                        1623
         AG_Z = 7                                                         1623
         AG_W = 0.95                                                      1623
         AG_TITLE = 'N'                                                   1623
         AG_EXNAME = 'COMPONENT'                                          1623
         AG_PARLIST = 'A_Z_W'                                             1623
         CALL AXCOMPONENT                                                 1623
C    *                                                                    1623
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            1623
         CALL AGSRESET                                                    1624
         AG_DENS = 0.10                                                   1624
         AG_TITLE = 'CFOAM'                                               1624
         AG_EXNAME = 'MIXTURE'                                            1624
         AG_PARLIST = 'DENS'                                              1624
         CALL AXMIXTURE                                                   1624
C    *                                                                    1624
C    Geant SHAPE : TUBE ===> RMIN=ISRR_RIN RMAX=ISRR_ROUT DZ = ISRR_LENG  1628
C    TH/2.0 <===                                                          1628
         CALL AGSRESET                                                    1628
         AG_RMIN = ISRR_RIN                                               1628
         AG_RMAX = ISRR_ROUT                                              1628
         AG_DZ = ISRR_LENGTH/2.0                                          1628
         AG_TITLE = 'TUBE'                                                1628
         AG_EXNAME = 'SHAPE'                                              1628
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      1628
         CALL AXSHAPE                                                     1628
C    *                                                                    1628
5131  CALL AGSPOPB                                                        1630
      GO TO BLOCK_ISRI, (5130 ,5140)                                      1630
C End of Local Procedure                                                  1630
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCO                                              1633
C ISCO IS THE INTERCONNECT BETWEEN THE SUPPORT RINGS                      1633
5150  CONTINUE                                                            1633
         AG_TITLE='ISCO'                                                  1633
         AG_MODULE=MODULE                                                 1633
         AG_MARK='V00'                                                    1633
         CALL AGSPUSH                                                     1633
         AG_MODULE=MODULE                                                 1633
C    *                                                                    1633
C    Geant ATTRIBUTE : ISCO ===> SEEN=1 COLO=13 <===                      1634
         CALL AGSRESET                                                    1634
         AG_SEEN = 1                                                      1634
         AG_COLO = 13                                                     1634
         AG_TITLE = 'ISCO'                                                1634
         AG_EXNAME = 'ATTRIBUTE'                                          1634
         AG_PARLIST = 'SEEN_COLO'                                         1634
         CALL AXATTRIBUTE                                                 1634
C    *                                                                    1634
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        1636
         CALL AGSRESET                                                    1636
         AG_A = 12                                                        1636
         AG_Z = 6                                                         1636
         AG_W = 0.05                                                      1636
         AG_TITLE = 'C'                                                   1636
         AG_EXNAME = 'COMPONENT'                                          1636
         AG_PARLIST = 'A_Z_W'                                             1636
         CALL AXCOMPONENT                                                 1636
C    *                                                                    1636
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        1636
         CALL AGSRESET                                                    1637
         AG_A = 14                                                        1637
         AG_Z = 7                                                         1637
         AG_W = 0.95                                                      1637
         AG_TITLE = 'N'                                                   1637
         AG_EXNAME = 'COMPONENT'                                          1637
         AG_PARLIST = 'A_Z_W'                                             1637
         CALL AXCOMPONENT                                                 1637
C    *                                                                    1637
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            1637
         CALL AGSRESET                                                    1638
         AG_DENS = 0.10                                                   1638
         AG_TITLE = 'CFOAM'                                               1638
         AG_EXNAME = 'MIXTURE'                                            1638
         AG_PARLIST = 'DENS'                                              1638
         CALL AXMIXTURE                                                   1638
C    *                                                                    1638
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  1644
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     1644
         CALL AGSRESET                                                    1644
         AG_RMN1 = ISCC_RIN1                                              1644
         AG_RMX1 = ISCC_ROUT1                                             1644
         AG_RMN2 = ISCC_RIN2                                              1644
         AG_RMX2 = ISCC_ROUT2                                             1644
         AG_DZ = ISCC_LENGTH/2.0                                          1644
         AG_TITLE = 'CONE'                                                1644
         AG_EXNAME = 'SHAPE'                                              1644
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            1644
         CALL AXSHAPE                                                     1644
C    *                                                                    1644
5151  CALL AGSPOPB                                                        1646
      GO TO BLOCK_ISCO, (5150 ,5160,5170)                                 1646
C End of Local Procedure                                                  1646
* -------------------------------------------------------
      END                                                                 1650
* $Id: istbgeo3.g,v 1.3 2006/12/18 02:36:49 potekhin Exp $
* $Log: istbgeo3.g,v $
* Revision 1.3  2006/12/18 02:36:49  potekhin
* Added a code field to the main stata structure,
* in order to properly version volume id. Same festure
* incorporated in files 4 and 5
*
* Revision 1.2  2006/12/14 21:38:20  potekhin
* Add CVS tags for this new config (outer layer only)
*
*****************************************************************
* HFT+HPD+IST2 configuration
*****************************************************************
      SUBROUTINE ISTBGEO3                                                 1664
C ISTBGEO3 IS THE GEOMETRY OF THE INNER SILICON TRACKER                   1664
      IMPLICIT NONE                                                       1664
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       1664
      DATA MODULE/'ISTBGEO3'/, BANK_TITLE/'*'/                            1664
      DATA MCOMMENT/'IS THE GEOMETRY OF THE INNER SILICON TRACKER'/       1664
      LOGICAL FIRST                                                       1664
      DATA FIRST/.TRUE./                                                  1664
      SAVE FIRST                                                          1664
      INTEGER JUMPAD                                                      1664
      EXTERNAL JUMPAD                                                     1664
      INTEGER OK                                                          1664
      PARAMETER (OK=0)                                                    1664
      INTEGER AG_I,AG_J                                                   1664
      SAVE AG_I,AG_J                                                      1664
C CREATED 12/12/06                                                        1664
      DATA AG_I/0/,AG_J/0/                                                1665
      CHARACTER*40 CREATED /'12/12/06'/                                   1665
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  1665
C AUTHOR GERRIT VAN NIEUWENHUIZEN                                         1665
      CHARACTER*40 AUTHOR /'GERRIT VAN NIEUWENHUIZEN'/                    1666
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  1666
*****************************************************************
C - Advanced Geant interface                                              1668
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      1668
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       1668
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         1668
     *AG_OPTION,AG_ORT,AG_MARK                                            1668
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         1668
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     1668
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     1668
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    1668
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          1668
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   1668
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     1668
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        1668
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   1668
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 1668
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     1668
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       1668
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        1668
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       1668
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       1668
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       1668
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         1668
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     1668
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       1668
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   1668
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       1668
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     1668
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          1668
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         1668
     *-696969,AG_LDETU=250)                                               1668
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    1668
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  1668
     *AG_IMFLD,AG_ISIMU                                                   1668
C Inherited variables a: saved during internal calls                      1668
C b: reset at the entry in a block and then saved                         1668
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        1668
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       1668
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         1668
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     1668
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       1668
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         1668
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           1668
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        1668
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        1668
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            1668
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           1668
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    1668
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      1668
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           1668
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          1668
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                1668
C local variables valid inside same block                                 1668
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       1668
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  1668
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         1668
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    1668
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          1668
     *AG_OPTION                                                           1668
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        1668
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             1668
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              1668
C temporarly                                                              1668
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           1668
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    1668
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       1668
     *AG_HY)                                                              1668
      REAL MIL_P,INCH_P                                                   1668
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               1668
C - GEANT description of logical units                                    1668
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            1668
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      1668
      COMMON/GCMAIL/ CHMAIL                                               1668
      CHARACTER*132 CHMAIL                                                1668
* ---
      REAL ANGLE, ANGLEPOS, ANGLECORR, TRUER, RADDEG, RLAD                1670
      INTEGER NL, LY, NU, CABLE, ISTLAYER                                 1671
      REAL MOD_THK                                                        1672
* ---
      INTEGER BLOCK_IBMO                                                  1676
      INTEGER BLOCK_IBLM                                                  1676
      INTEGER BLOCK_IBAM                                                  1676
      INTEGER BLOCK_IBSS                                                  1676
      INTEGER BLOCK_ISTP                                                  1676
      INTEGER BLOCK_ISKH                                                  1676
      INTEGER BLOCK_ISCL                                                  1676
      INTEGER BLOCK_ISSC                                                  1676
      INTEGER BLOCK_ISXA                                                  1676
      INTEGER BLOCK_ISLB                                                  1676
      INTEGER BLOCK_ISRI                                                  1676
      INTEGER BLOCK_ISCO                                                  1676
      INTEGER BLOCK_IBMY                                                  1676
C -                                                                       1678
      REAL ISMG_LAYER                                                     1678
      EQUIVALENCE (BANK_ISMG(3),ISMG_LAYER,RE_ISMG_LAYER),                1678
     *(NAMES_ISMG(1),NISMG_LAYER)                                         1678
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_LAYER),(MAP_ISMG(1,1),            1678
     *MISMG_LAYER)                                                        1678
      CHARACTER CISMG_LAYER*40/' '/                                       1678
      CHARACTER NISMG_LAYER*12/'R.LAYER'/                                 1678
      INTEGER MISMG_LAYER(2)/1,1/                                         1678
      REAL RE_ISMG_LAYER                                                  1678
C -                                                                       1678
      REAL ISMG_RIN                                                       1678
      EQUIVALENCE (BANK_ISMG(4),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(2),     1678
     *NISMG_RIN)                                                          1678
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_RIN),(MAP_ISMG(1,2),MISMG_RIN)    1678
      CHARACTER CISMG_RIN*40/' '/                                         1678
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     1678
      INTEGER MISMG_RIN(2)/1,1/                                           1678
      REAL RE_ISMG_RIN                                                    1678
C -                                                                       1678
      REAL ISMG_ROUT                                                      1678
      EQUIVALENCE (BANK_ISMG(5),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(3),   1678
     *NISMG_ROUT)                                                         1678
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_ROUT),(MAP_ISMG(1,3),             1678
     *MISMG_ROUT)                                                         1678
      CHARACTER CISMG_ROUT*40/' '/                                        1678
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   1678
      INTEGER MISMG_ROUT(2)/1,1/                                          1678
      REAL RE_ISMG_ROUT                                                   1678
C -                                                                       1678
      REAL ISMG_TOTALLENGTH                                               1678
      EQUIVALENCE (BANK_ISMG(6),ISMG_TOTALLENGTH,RE_ISMG_TOTALLENGTH),    1678
     *(NAMES_ISMG(4),NISMG_TOTALLENGTH)                                   1678
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_TOTALLENGTH),(MAP_ISMG(1,4),      1678
     *MISMG_TOTALLENGTH)                                                  1678
      CHARACTER CISMG_TOTALLENGTH*40/' '/                                 1678
      CHARACTER NISMG_TOTALLENGTH*12/'R.TOTALLENGTH'/                     1678
      INTEGER MISMG_TOTALLENGTH(2)/1,1/                                   1678
      REAL RE_ISMG_TOTALLENGTH                                            1678
C -                                                                       1678
      REAL ISMG_CODE                                                      1678
      EQUIVALENCE (BANK_ISMG(7),ISMG_CODE,RE_ISMG_CODE),(NAMES_ISMG(5),   1678
     *NISMG_CODE)                                                         1678
      EQUIVALENCE (COMMEN_ISMG(5),CISMG_CODE),(MAP_ISMG(1,5),             1678
     *MISMG_CODE)                                                         1678
      CHARACTER CISMG_CODE*40/' '/                                        1678
      CHARACTER NISMG_CODE*12/'R.CODE'/                                   1678
      INTEGER MISMG_CODE(2)/1,1/                                          1678
      REAL RE_ISMG_CODE                                                   1678
C -                                                                       1678
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                1678
      PARAMETER (LEN_ISMG=7)                                              1678
      PARAMETER (LLEN_ISMG=5)                                             1678
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           1678
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        1678
      DATA IDNUM_ISMG/10*0/                                               1678
      REAL BANK_ISMG(LEN_ISMG)                                            1678
      CHARACTER*60 BPATH_ISMG/' '/                                        1678
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          1678
     *BPATH_ISMG                                                          1678
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             1678
C *                                                                       1678
C -                                                                       1682
      REAL ISBG_LAYER                                                     1682
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                1682
     *(NAMES_ISBG(1),NISBG_LAYER)                                         1682
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            1682
     *MISBG_LAYER)                                                        1682
      CHARACTER CISBG_LAYER*40/' '/                                       1682
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 1682
      INTEGER MISBG_LAYER(2)/1,1/                                         1682
      REAL RE_ISBG_LAYER                                                  1682
C -                                                                       1682
      REAL ISBG_NLADDER                                                   1682
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            1682
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       1682
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          1682
     *MISBG_NLADDER)                                                      1682
      CHARACTER CISBG_NLADDER*40/' '/                                     1682
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             1682
      INTEGER MISBG_NLADDER(2)/1,1/                                       1682
      REAL RE_ISBG_NLADDER                                                1682
C -                                                                       1682
      REAL ISBG_NUNIT                                                     1682
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                1682
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         1682
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            1682
     *MISBG_NUNIT)                                                        1682
      CHARACTER CISBG_NUNIT*40/' '/                                       1682
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 1682
      INTEGER MISBG_NUNIT(2)/1,1/                                         1682
      REAL RE_ISBG_NUNIT                                                  1682
C -                                                                       1682
      REAL ISBG_LENGTH                                                    1682
      EQUIVALENCE (BANK_ISBG(6),ISBG_LENGTH,RE_ISBG_LENGTH),              1682
     *(NAMES_ISBG(4),NISBG_LENGTH)                                        1682
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_LENGTH),(MAP_ISBG(1,4),           1682
     *MISBG_LENGTH)                                                       1682
      CHARACTER CISBG_LENGTH*40/' '/                                      1682
      CHARACTER NISBG_LENGTH*12/'R.LENGTH'/                               1682
      INTEGER MISBG_LENGTH(2)/1,1/                                        1682
      REAL RE_ISBG_LENGTH                                                 1682
C -                                                                       1682
      REAL ISBG_LADDERWIDTH                                               1682
      EQUIVALENCE (BANK_ISBG(7),ISBG_LADDERWIDTH,RE_ISBG_LADDERWIDTH),    1682
     *(NAMES_ISBG(5),NISBG_LADDERWIDTH)                                   1682
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_LADDERWIDTH),(MAP_ISBG(1,5),      1682
     *MISBG_LADDERWIDTH)                                                  1682
      CHARACTER CISBG_LADDERWIDTH*40/' '/                                 1682
      CHARACTER NISBG_LADDERWIDTH*12/'R.LADDERWIDTH'/                     1682
      INTEGER MISBG_LADDERWIDTH(2)/1,1/                                   1682
      REAL RE_ISBG_LADDERWIDTH                                            1682
C -                                                                       1682
      REAL ISBG_LADDERTHK                                                 1682
      EQUIVALENCE (BANK_ISBG(8),ISBG_LADDERTHK,RE_ISBG_LADDERTHK),        1682
     *(NAMES_ISBG(6),NISBG_LADDERTHK)                                     1682
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_LADDERTHK),(MAP_ISBG(1,6),        1682
     *MISBG_LADDERTHK)                                                    1682
      CHARACTER CISBG_LADDERTHK*40/' '/                                   1682
      CHARACTER NISBG_LADDERTHK*12/'R.LADDERTHK'/                         1682
      INTEGER MISBG_LADDERTHK(2)/1,1/                                     1682
      REAL RE_ISBG_LADDERTHK                                              1682
C -                                                                       1682
      REAL ISBG_SENSATHK                                                  1682
      EQUIVALENCE (BANK_ISBG(9),ISBG_SENSATHK,RE_ISBG_SENSATHK),          1682
     *(NAMES_ISBG(7),NISBG_SENSATHK)                                      1682
      EQUIVALENCE (COMMEN_ISBG(7),CISBG_SENSATHK),(MAP_ISBG(1,7),         1682
     *MISBG_SENSATHK)                                                     1682
      CHARACTER CISBG_SENSATHK*40/' '/                                    1682
      CHARACTER NISBG_SENSATHK*12/'R.SENSATHK'/                           1682
      INTEGER MISBG_SENSATHK(2)/1,1/                                      1682
      REAL RE_ISBG_SENSATHK                                               1682
C -                                                                       1682
      REAL ISBG_SPACING                                                   1682
      EQUIVALENCE (BANK_ISBG(10),ISBG_SPACING,RE_ISBG_SPACING),           1682
     *(NAMES_ISBG(8),NISBG_SPACING)                                       1682
      EQUIVALENCE (COMMEN_ISBG(8),CISBG_SPACING),(MAP_ISBG(1,8),          1682
     *MISBG_SPACING)                                                      1682
      CHARACTER CISBG_SPACING*40/' '/                                     1682
      CHARACTER NISBG_SPACING*12/'R.SPACING'/                             1682
      INTEGER MISBG_SPACING(2)/1,1/                                       1682
      REAL RE_ISBG_SPACING                                                1682
C -                                                                       1682
      REAL ISBG_SENSORWIDTH                                               1682
      EQUIVALENCE (BANK_ISBG(11),ISBG_SENSORWIDTH,RE_ISBG_SENSORWIDTH),   1682
     *(NAMES_ISBG(9),NISBG_SENSORWIDTH)                                   1682
      EQUIVALENCE (COMMEN_ISBG(9),CISBG_SENSORWIDTH),(MAP_ISBG(1,9),      1682
     *MISBG_SENSORWIDTH)                                                  1682
      CHARACTER CISBG_SENSORWIDTH*40/' '/                                 1682
      CHARACTER NISBG_SENSORWIDTH*12/'R.SENSORWIDTH'/                     1682
      INTEGER MISBG_SENSORWIDTH(2)/1,1/                                   1682
      REAL RE_ISBG_SENSORWIDTH                                            1682
C -                                                                       1682
      REAL ISBG_SENSORTHK                                                 1682
      EQUIVALENCE (BANK_ISBG(12),ISBG_SENSORTHK,RE_ISBG_SENSORTHK),       1682
     *(NAMES_ISBG(10),NISBG_SENSORTHK)                                    1682
      EQUIVALENCE (COMMEN_ISBG(10),CISBG_SENSORTHK),(MAP_ISBG(1,10),      1682
     *MISBG_SENSORTHK)                                                    1682
      CHARACTER CISBG_SENSORTHK*40/' '/                                   1682
      CHARACTER NISBG_SENSORTHK*12/'R.SENSORTHK'/                         1682
      INTEGER MISBG_SENSORTHK(2)/1,1/                                     1682
      REAL RE_ISBG_SENSORTHK                                              1682
C -                                                                       1682
      REAL ISBG_SENSORLNGTH                                               1682
      EQUIVALENCE (BANK_ISBG(13),ISBG_SENSORLNGTH,RE_ISBG_SENSORLNGTH),   1682
     *(NAMES_ISBG(11),NISBG_SENSORLNGTH)                                  1682
      EQUIVALENCE (COMMEN_ISBG(11),CISBG_SENSORLNGTH),(MAP_ISBG(1,11),    1682
     *MISBG_SENSORLNGTH)                                                  1682
      CHARACTER CISBG_SENSORLNGTH*40/' '/                                 1682
      CHARACTER NISBG_SENSORLNGTH*12/'R.SENSORLNGTH'/                     1682
      INTEGER MISBG_SENSORLNGTH(2)/1,1/                                   1682
      REAL RE_ISBG_SENSORLNGTH                                            1682
C -                                                                       1682
      REAL ISBG_R                                                         1682
      EQUIVALENCE (BANK_ISBG(14),ISBG_R,RE_ISBG_R),(NAMES_ISBG(12),       1682
     *NISBG_R)                                                            1682
      EQUIVALENCE (COMMEN_ISBG(12),CISBG_R),(MAP_ISBG(1,12),MISBG_R)      1682
      CHARACTER CISBG_R*40/' '/                                           1682
      CHARACTER NISBG_R*12/'R.R'/                                         1682
      INTEGER MISBG_R(2)/1,1/                                             1682
      REAL RE_ISBG_R                                                      1682
C -                                                                       1682
      REAL ISBG_A                                                         1682
      EQUIVALENCE (BANK_ISBG(15),ISBG_A,RE_ISBG_A),(NAMES_ISBG(13),       1682
     *NISBG_A)                                                            1682
      EQUIVALENCE (COMMEN_ISBG(13),CISBG_A),(MAP_ISBG(1,13),MISBG_A)      1682
      CHARACTER CISBG_A*40/' '/                                           1682
      CHARACTER NISBG_A*12/'R.A'/                                         1682
      INTEGER MISBG_A(2)/1,1/                                             1682
      REAL RE_ISBG_A                                                      1682
C -                                                                       1682
      REAL ISBG_PPAROFFSET                                                1682
      EQUIVALENCE (BANK_ISBG(16),ISBG_PPAROFFSET,RE_ISBG_PPAROFFSET),     1682
     *(NAMES_ISBG(14),NISBG_PPAROFFSET)                                   1682
      EQUIVALENCE (COMMEN_ISBG(14),CISBG_PPAROFFSET),(MAP_ISBG(1,14),     1682
     *MISBG_PPAROFFSET)                                                   1682
      CHARACTER CISBG_PPAROFFSET*40/' '/                                  1682
      CHARACTER NISBG_PPAROFFSET*12/'R.PPAROFFSET'/                       1682
      INTEGER MISBG_PPAROFFSET(2)/1,1/                                    1682
      REAL RE_ISBG_PPAROFFSET                                             1682
C -                                                                       1682
      REAL ISBG_PPEROFFSET                                                1682
      EQUIVALENCE (BANK_ISBG(17),ISBG_PPEROFFSET,RE_ISBG_PPEROFFSET),     1682
     *(NAMES_ISBG(15),NISBG_PPEROFFSET)                                   1682
      EQUIVALENCE (COMMEN_ISBG(15),CISBG_PPEROFFSET),(MAP_ISBG(1,15),     1682
     *MISBG_PPEROFFSET)                                                   1682
      CHARACTER CISBG_PPEROFFSET*40/' '/                                  1682
      CHARACTER NISBG_PPEROFFSET*12/'R.PPEROFFSET'/                       1682
      INTEGER MISBG_PPEROFFSET(2)/1,1/                                    1682
      REAL RE_ISBG_PPEROFFSET                                             1682
C -                                                                       1682
      REAL ISBG_AOFFSET                                                   1682
      EQUIVALENCE (BANK_ISBG(18),ISBG_AOFFSET,RE_ISBG_AOFFSET),           1682
     *(NAMES_ISBG(16),NISBG_AOFFSET)                                      1682
      EQUIVALENCE (COMMEN_ISBG(16),CISBG_AOFFSET),(MAP_ISBG(1,16),        1682
     *MISBG_AOFFSET)                                                      1682
      CHARACTER CISBG_AOFFSET*40/' '/                                     1682
      CHARACTER NISBG_AOFFSET*12/'R.AOFFSET'/                             1682
      INTEGER MISBG_AOFFSET(2)/1,1/                                       1682
      REAL RE_ISBG_AOFFSET                                                1682
C -                                                                       1682
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                1682
      PARAMETER (LEN_ISBG=18)                                             1682
      PARAMETER (LLEN_ISBG=16)                                            1682
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           1682
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        1682
      DATA IDNUM_ISBG/10*0/                                               1682
      REAL BANK_ISBG(LEN_ISBG)                                            1682
      CHARACTER*60 BPATH_ISBG/' '/                                        1682
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          1682
     *BPATH_ISBG                                                          1682
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             1682
C *                                                                       1682
C -                                                                       1683
      REAL ISAN_VERSION                                                   1683
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            1683
     *(NAMES_ISAN(1),NISAN_VERSION)                                       1683
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          1683
     *MISAN_VERSION)                                                      1683
      CHARACTER CISAN_VERSION*40/' '/                                     1683
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             1683
      INTEGER MISAN_VERSION(2)/1,1/                                       1683
      REAL RE_ISAN_VERSION                                                1683
C -                                                                       1683
      REAL ISAN_W                                                         1683
      EQUIVALENCE (BANK_ISAN(4),ISAN_W,RE_ISAN_W),(NAMES_ISAN(2),         1683
     *NISAN_W)                                                            1683
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_W),(MAP_ISAN(1,2),MISAN_W)        1683
      CHARACTER CISAN_W*40/' '/                                           1683
      CHARACTER NISAN_W*12/'R.W'/                                         1683
      INTEGER MISAN_W(2)/1,1/                                             1683
      REAL RE_ISAN_W                                                      1683
C -                                                                       1683
      REAL ISAN_H                                                         1683
      EQUIVALENCE (BANK_ISAN(5),ISAN_H,RE_ISAN_H),(NAMES_ISAN(3),         1683
     *NISAN_H)                                                            1683
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_H),(MAP_ISAN(1,3),MISAN_H)        1683
      CHARACTER CISAN_H*40/' '/                                           1683
      CHARACTER NISAN_H*12/'R.H'/                                         1683
      INTEGER MISAN_H(2)/1,1/                                             1683
      REAL RE_ISAN_H                                                      1683
C -                                                                       1683
      REAL ISAN_THK                                                       1683
      EQUIVALENCE (BANK_ISAN(6),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(4),     1683
     *NISAN_THK)                                                          1683
      EQUIVALENCE (COMMEN_ISAN(4),CISAN_THK),(MAP_ISAN(1,4),MISAN_THK)    1683
      CHARACTER CISAN_THK*40/' '/                                         1683
      CHARACTER NISAN_THK*12/'R.THK'/                                     1683
      INTEGER MISAN_THK(2)/1,1/                                           1683
      REAL RE_ISAN_THK                                                    1683
C -                                                                       1683
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                1683
      PARAMETER (LEN_ISAN=6)                                              1683
      PARAMETER (LLEN_ISAN=4)                                             1683
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           1683
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        1683
      DATA IDNUM_ISAN/10*0/                                               1683
      REAL BANK_ISAN(LEN_ISAN)                                            1683
      CHARACTER*60 BPATH_ISAN/' '/                                        1683
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          1683
     *BPATH_ISAN                                                          1683
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             1683
C *                                                                       1683
C -                                                                       1684
      REAL ISHY_VERSION                                                   1684
      EQUIVALENCE (BANK_ISHY(3),ISHY_VERSION,RE_ISHY_VERSION),            1684
     *(NAMES_ISHY(1),NISHY_VERSION)                                       1684
      EQUIVALENCE (COMMEN_ISHY(1),CISHY_VERSION),(MAP_ISHY(1,1),          1684
     *MISHY_VERSION)                                                      1684
      CHARACTER CISHY_VERSION*40/' '/                                     1684
      CHARACTER NISHY_VERSION*12/'R.VERSION'/                             1684
      INTEGER MISHY_VERSION(2)/1,1/                                       1684
      REAL RE_ISHY_VERSION                                                1684
C -                                                                       1684
      REAL ISHY_W                                                         1684
      EQUIVALENCE (BANK_ISHY(4),ISHY_W,RE_ISHY_W),(NAMES_ISHY(2),         1684
     *NISHY_W)                                                            1684
      EQUIVALENCE (COMMEN_ISHY(2),CISHY_W),(MAP_ISHY(1,2),MISHY_W)        1684
      CHARACTER CISHY_W*40/' '/                                           1684
      CHARACTER NISHY_W*12/'R.W'/                                         1684
      INTEGER MISHY_W(2)/1,1/                                             1684
      REAL RE_ISHY_W                                                      1684
C -                                                                       1684
      REAL ISHY_H                                                         1684
      EQUIVALENCE (BANK_ISHY(5),ISHY_H,RE_ISHY_H),(NAMES_ISHY(3),         1684
     *NISHY_H)                                                            1684
      EQUIVALENCE (COMMEN_ISHY(3),CISHY_H),(MAP_ISHY(1,3),MISHY_H)        1684
      CHARACTER CISHY_H*40/' '/                                           1684
      CHARACTER NISHY_H*12/'R.H'/                                         1684
      INTEGER MISHY_H(2)/1,1/                                             1684
      REAL RE_ISHY_H                                                      1684
C -                                                                       1684
      REAL ISHY_THK                                                       1684
      EQUIVALENCE (BANK_ISHY(6),ISHY_THK,RE_ISHY_THK),(NAMES_ISHY(4),     1684
     *NISHY_THK)                                                          1684
      EQUIVALENCE (COMMEN_ISHY(4),CISHY_THK),(MAP_ISHY(1,4),MISHY_THK)    1684
      CHARACTER CISHY_THK*40/' '/                                         1684
      CHARACTER NISHY_THK*12/'R.THK'/                                     1684
      INTEGER MISHY_THK(2)/1,1/                                           1684
      REAL RE_ISHY_THK                                                    1684
C -                                                                       1684
      INTEGER LEN_ISHY,LLEN_ISHY,LINK_ISHY                                1684
      PARAMETER (LEN_ISHY=6)                                              1684
      PARAMETER (LLEN_ISHY=4)                                             1684
      INTEGER FLAG_ISHY/0/,MAP_ISHY(2,LLEN_ISHY),IDNUM_ISHY(10)           1684
      CHARACTER NAMES_ISHY(LLEN_ISHY)*12,COMMEN_ISHY(LLEN_ISHY)*40        1684
      DATA IDNUM_ISHY/10*0/                                               1684
      REAL BANK_ISHY(LEN_ISHY)                                            1684
      CHARACTER*60 BPATH_ISHY/' '/                                        1684
      SAVE FLAG_ISHY,MAP_ISHY,IDNUM_ISHY,NAMES_ISHY,COMMEN_ISHY,          1684
     *BPATH_ISHY                                                          1684
      DATA LINK_ISHY/0/,BANK_ISHY/LEN_ISHY*0/                             1684
C *                                                                       1684
C -                                                                       1685
      REAL ISCU_VERSION                                                   1685
      EQUIVALENCE (BANK_ISCU(3),ISCU_VERSION,RE_ISCU_VERSION),            1685
     *(NAMES_ISCU(1),NISCU_VERSION)                                       1685
      EQUIVALENCE (COMMEN_ISCU(1),CISCU_VERSION),(MAP_ISCU(1,1),          1685
     *MISCU_VERSION)                                                      1685
      CHARACTER CISCU_VERSION*40/' '/                                     1685
      CHARACTER NISCU_VERSION*12/'R.VERSION'/                             1685
      INTEGER MISCU_VERSION(2)/1,1/                                       1685
      REAL RE_ISCU_VERSION                                                1685
C -                                                                       1685
      REAL ISCU_W                                                         1685
      EQUIVALENCE (BANK_ISCU(4),ISCU_W,RE_ISCU_W),(NAMES_ISCU(2),         1685
     *NISCU_W)                                                            1685
      EQUIVALENCE (COMMEN_ISCU(2),CISCU_W),(MAP_ISCU(1,2),MISCU_W)        1685
      CHARACTER CISCU_W*40/' '/                                           1685
      CHARACTER NISCU_W*12/'R.W'/                                         1685
      INTEGER MISCU_W(2)/1,1/                                             1685
      REAL RE_ISCU_W                                                      1685
C -                                                                       1685
      REAL ISCU_H                                                         1685
      EQUIVALENCE (BANK_ISCU(5),ISCU_H,RE_ISCU_H),(NAMES_ISCU(3),         1685
     *NISCU_H)                                                            1685
      EQUIVALENCE (COMMEN_ISCU(3),CISCU_H),(MAP_ISCU(1,3),MISCU_H)        1685
      CHARACTER CISCU_H*40/' '/                                           1685
      CHARACTER NISCU_H*12/'R.H'/                                         1685
      INTEGER MISCU_H(2)/1,1/                                             1685
      REAL RE_ISCU_H                                                      1685
C -                                                                       1685
      REAL ISCU_THK                                                       1685
      EQUIVALENCE (BANK_ISCU(6),ISCU_THK,RE_ISCU_THK),(NAMES_ISCU(4),     1685
     *NISCU_THK)                                                          1685
      EQUIVALENCE (COMMEN_ISCU(4),CISCU_THK),(MAP_ISCU(1,4),MISCU_THK)    1685
      CHARACTER CISCU_THK*40/' '/                                         1685
      CHARACTER NISCU_THK*12/'R.THK'/                                     1685
      INTEGER MISCU_THK(2)/1,1/                                           1685
      REAL RE_ISCU_THK                                                    1685
C -                                                                       1685
      INTEGER LEN_ISCU,LLEN_ISCU,LINK_ISCU                                1685
      PARAMETER (LEN_ISCU=6)                                              1685
      PARAMETER (LLEN_ISCU=4)                                             1685
      INTEGER FLAG_ISCU/0/,MAP_ISCU(2,LLEN_ISCU),IDNUM_ISCU(10)           1685
      CHARACTER NAMES_ISCU(LLEN_ISCU)*12,COMMEN_ISCU(LLEN_ISCU)*40        1685
      DATA IDNUM_ISCU/10*0/                                               1685
      REAL BANK_ISCU(LEN_ISCU)                                            1685
      CHARACTER*60 BPATH_ISCU/' '/                                        1685
      SAVE FLAG_ISCU,MAP_ISCU,IDNUM_ISCU,NAMES_ISCU,COMMEN_ISCU,          1685
     *BPATH_ISCU                                                          1685
      DATA LINK_ISCU/0/,BANK_ISCU/LEN_ISCU*0/                             1685
C *                                                                       1685
C -                                                                       1686
      REAL ISCG_VERSION                                                   1686
      EQUIVALENCE (BANK_ISCG(3),ISCG_VERSION,RE_ISCG_VERSION),            1686
     *(NAMES_ISCG(1),NISCG_VERSION)                                       1686
      EQUIVALENCE (COMMEN_ISCG(1),CISCG_VERSION),(MAP_ISCG(1,1),          1686
     *MISCG_VERSION)                                                      1686
      CHARACTER CISCG_VERSION*40/' '/                                     1686
      CHARACTER NISCG_VERSION*12/'R.VERSION'/                             1686
      INTEGER MISCG_VERSION(2)/1,1/                                       1686
      REAL RE_ISCG_VERSION                                                1686
C -                                                                       1686
      REAL ISCG_W                                                         1686
      EQUIVALENCE (BANK_ISCG(4),ISCG_W,RE_ISCG_W),(NAMES_ISCG(2),         1686
     *NISCG_W)                                                            1686
      EQUIVALENCE (COMMEN_ISCG(2),CISCG_W),(MAP_ISCG(1,2),MISCG_W)        1686
      CHARACTER CISCG_W*40/' '/                                           1686
      CHARACTER NISCG_W*12/'R.W'/                                         1686
      INTEGER MISCG_W(2)/1,1/                                             1686
      REAL RE_ISCG_W                                                      1686
C -                                                                       1686
      REAL ISCG_H                                                         1686
      EQUIVALENCE (BANK_ISCG(5),ISCG_H,RE_ISCG_H),(NAMES_ISCG(3),         1686
     *NISCG_H)                                                            1686
      EQUIVALENCE (COMMEN_ISCG(3),CISCG_H),(MAP_ISCG(1,3),MISCG_H)        1686
      CHARACTER CISCG_H*40/' '/                                           1686
      CHARACTER NISCG_H*12/'R.H'/                                         1686
      INTEGER MISCG_H(2)/1,1/                                             1686
      REAL RE_ISCG_H                                                      1686
C -                                                                       1686
      REAL ISCG_THK                                                       1686
      EQUIVALENCE (BANK_ISCG(6),ISCG_THK,RE_ISCG_THK),(NAMES_ISCG(4),     1686
     *NISCG_THK)                                                          1686
      EQUIVALENCE (COMMEN_ISCG(4),CISCG_THK),(MAP_ISCG(1,4),MISCG_THK)    1686
      CHARACTER CISCG_THK*40/' '/                                         1686
      CHARACTER NISCG_THK*12/'R.THK'/                                     1686
      INTEGER MISCG_THK(2)/1,1/                                           1686
      REAL RE_ISCG_THK                                                    1686
C -                                                                       1686
      INTEGER LEN_ISCG,LLEN_ISCG,LINK_ISCG                                1686
      PARAMETER (LEN_ISCG=6)                                              1686
      PARAMETER (LLEN_ISCG=4)                                             1686
      INTEGER FLAG_ISCG/0/,MAP_ISCG(2,LLEN_ISCG),IDNUM_ISCG(10)           1686
      CHARACTER NAMES_ISCG(LLEN_ISCG)*12,COMMEN_ISCG(LLEN_ISCG)*40        1686
      DATA IDNUM_ISCG/10*0/                                               1686
      REAL BANK_ISCG(LEN_ISCG)                                            1686
      CHARACTER*60 BPATH_ISCG/' '/                                        1686
      SAVE FLAG_ISCG,MAP_ISCG,IDNUM_ISCG,NAMES_ISCG,COMMEN_ISCG,          1686
     *BPATH_ISCG                                                          1686
      DATA LINK_ISCG/0/,BANK_ISCG/LEN_ISCG*0/                             1686
C *                                                                       1686
C -                                                                       1687
      REAL ISGA_VERSION                                                   1687
      EQUIVALENCE (BANK_ISGA(3),ISGA_VERSION,RE_ISGA_VERSION),            1687
     *(NAMES_ISGA(1),NISGA_VERSION)                                       1687
      EQUIVALENCE (COMMEN_ISGA(1),CISGA_VERSION),(MAP_ISGA(1,1),          1687
     *MISGA_VERSION)                                                      1687
      CHARACTER CISGA_VERSION*40/' '/                                     1687
      CHARACTER NISGA_VERSION*12/'R.VERSION'/                             1687
      INTEGER MISGA_VERSION(2)/1,1/                                       1687
      REAL RE_ISGA_VERSION                                                1687
C -                                                                       1687
      REAL ISGA_W                                                         1687
      EQUIVALENCE (BANK_ISGA(4),ISGA_W,RE_ISGA_W),(NAMES_ISGA(2),         1687
     *NISGA_W)                                                            1687
      EQUIVALENCE (COMMEN_ISGA(2),CISGA_W),(MAP_ISGA(1,2),MISGA_W)        1687
      CHARACTER CISGA_W*40/' '/                                           1687
      CHARACTER NISGA_W*12/'R.W'/                                         1687
      INTEGER MISGA_W(2)/1,1/                                             1687
      REAL RE_ISGA_W                                                      1687
C -                                                                       1687
      REAL ISGA_H                                                         1687
      EQUIVALENCE (BANK_ISGA(5),ISGA_H,RE_ISGA_H),(NAMES_ISGA(3),         1687
     *NISGA_H)                                                            1687
      EQUIVALENCE (COMMEN_ISGA(3),CISGA_H),(MAP_ISGA(1,3),MISGA_H)        1687
      CHARACTER CISGA_H*40/' '/                                           1687
      CHARACTER NISGA_H*12/'R.H'/                                         1687
      INTEGER MISGA_H(2)/1,1/                                             1687
      REAL RE_ISGA_H                                                      1687
C -                                                                       1687
      REAL ISGA_THK                                                       1687
      EQUIVALENCE (BANK_ISGA(6),ISGA_THK,RE_ISGA_THK),(NAMES_ISGA(4),     1687
     *NISGA_THK)                                                          1687
      EQUIVALENCE (COMMEN_ISGA(4),CISGA_THK),(MAP_ISGA(1,4),MISGA_THK)    1687
      CHARACTER CISGA_THK*40/' '/                                         1687
      CHARACTER NISGA_THK*12/'R.THK'/                                     1687
      INTEGER MISGA_THK(2)/1,1/                                           1687
      REAL RE_ISGA_THK                                                    1687
C -                                                                       1687
      INTEGER LEN_ISGA,LLEN_ISGA,LINK_ISGA                                1687
      PARAMETER (LEN_ISGA=6)                                              1687
      PARAMETER (LLEN_ISGA=4)                                             1687
      INTEGER FLAG_ISGA/0/,MAP_ISGA(2,LLEN_ISGA),IDNUM_ISGA(10)           1687
      CHARACTER NAMES_ISGA(LLEN_ISGA)*12,COMMEN_ISGA(LLEN_ISGA)*40        1687
      DATA IDNUM_ISGA/10*0/                                               1687
      REAL BANK_ISGA(LEN_ISGA)                                            1687
      CHARACTER*60 BPATH_ISGA/' '/                                        1687
      SAVE FLAG_ISGA,MAP_ISGA,IDNUM_ISGA,NAMES_ISGA,COMMEN_ISGA,          1687
     *BPATH_ISGA                                                          1687
      DATA LINK_ISGA/0/,BANK_ISGA/LEN_ISGA*0/                             1687
C *                                                                       1687
C -                                                                       1688
      REAL ISGB_VERSION                                                   1688
      EQUIVALENCE (BANK_ISGB(3),ISGB_VERSION,RE_ISGB_VERSION),            1688
     *(NAMES_ISGB(1),NISGB_VERSION)                                       1688
      EQUIVALENCE (COMMEN_ISGB(1),CISGB_VERSION),(MAP_ISGB(1,1),          1688
     *MISGB_VERSION)                                                      1688
      CHARACTER CISGB_VERSION*40/' '/                                     1688
      CHARACTER NISGB_VERSION*12/'R.VERSION'/                             1688
      INTEGER MISGB_VERSION(2)/1,1/                                       1688
      REAL RE_ISGB_VERSION                                                1688
C -                                                                       1688
      REAL ISGB_W                                                         1688
      EQUIVALENCE (BANK_ISGB(4),ISGB_W,RE_ISGB_W),(NAMES_ISGB(2),         1688
     *NISGB_W)                                                            1688
      EQUIVALENCE (COMMEN_ISGB(2),CISGB_W),(MAP_ISGB(1,2),MISGB_W)        1688
      CHARACTER CISGB_W*40/' '/                                           1688
      CHARACTER NISGB_W*12/'R.W'/                                         1688
      INTEGER MISGB_W(2)/1,1/                                             1688
      REAL RE_ISGB_W                                                      1688
C -                                                                       1688
      REAL ISGB_H                                                         1688
      EQUIVALENCE (BANK_ISGB(5),ISGB_H,RE_ISGB_H),(NAMES_ISGB(3),         1688
     *NISGB_H)                                                            1688
      EQUIVALENCE (COMMEN_ISGB(3),CISGB_H),(MAP_ISGB(1,3),MISGB_H)        1688
      CHARACTER CISGB_H*40/' '/                                           1688
      CHARACTER NISGB_H*12/'R.H'/                                         1688
      INTEGER MISGB_H(2)/1,1/                                             1688
      REAL RE_ISGB_H                                                      1688
C -                                                                       1688
      REAL ISGB_THK                                                       1688
      EQUIVALENCE (BANK_ISGB(6),ISGB_THK,RE_ISGB_THK),(NAMES_ISGB(4),     1688
     *NISGB_THK)                                                          1688
      EQUIVALENCE (COMMEN_ISGB(4),CISGB_THK),(MAP_ISGB(1,4),MISGB_THK)    1688
      CHARACTER CISGB_THK*40/' '/                                         1688
      CHARACTER NISGB_THK*12/'R.THK'/                                     1688
      INTEGER MISGB_THK(2)/1,1/                                           1688
      REAL RE_ISGB_THK                                                    1688
C -                                                                       1688
      INTEGER LEN_ISGB,LLEN_ISGB,LINK_ISGB                                1688
      PARAMETER (LEN_ISGB=6)                                              1688
      PARAMETER (LLEN_ISGB=4)                                             1688
      INTEGER FLAG_ISGB/0/,MAP_ISGB(2,LLEN_ISGB),IDNUM_ISGB(10)           1688
      CHARACTER NAMES_ISGB(LLEN_ISGB)*12,COMMEN_ISGB(LLEN_ISGB)*40        1688
      DATA IDNUM_ISGB/10*0/                                               1688
      REAL BANK_ISGB(LEN_ISGB)                                            1688
      CHARACTER*60 BPATH_ISGB/' '/                                        1688
      SAVE FLAG_ISGB,MAP_ISGB,IDNUM_ISGB,NAMES_ISGB,COMMEN_ISGB,          1688
     *BPATH_ISGB                                                          1688
      DATA LINK_ISGB/0/,BANK_ISGB/LEN_ISGB*0/                             1688
C *                                                                       1688
C -                                                                       1689
      REAL ISRR_LAYER                                                     1689
      EQUIVALENCE (BANK_ISRR(3),ISRR_LAYER,RE_ISRR_LAYER),                1689
     *(NAMES_ISRR(1),NISRR_LAYER)                                         1689
      EQUIVALENCE (COMMEN_ISRR(1),CISRR_LAYER),(MAP_ISRR(1,1),            1689
     *MISRR_LAYER)                                                        1689
      CHARACTER CISRR_LAYER*40/' '/                                       1689
      CHARACTER NISRR_LAYER*12/'R.LAYER'/                                 1689
      INTEGER MISRR_LAYER(2)/1,1/                                         1689
      REAL RE_ISRR_LAYER                                                  1689
C -                                                                       1689
      REAL ISRR_RIN                                                       1689
      EQUIVALENCE (BANK_ISRR(4),ISRR_RIN,RE_ISRR_RIN),(NAMES_ISRR(2),     1689
     *NISRR_RIN)                                                          1689
      EQUIVALENCE (COMMEN_ISRR(2),CISRR_RIN),(MAP_ISRR(1,2),MISRR_RIN)    1689
      CHARACTER CISRR_RIN*40/' '/                                         1689
      CHARACTER NISRR_RIN*12/'R.RIN'/                                     1689
      INTEGER MISRR_RIN(2)/1,1/                                           1689
      REAL RE_ISRR_RIN                                                    1689
C -                                                                       1689
      REAL ISRR_ROUT                                                      1689
      EQUIVALENCE (BANK_ISRR(5),ISRR_ROUT,RE_ISRR_ROUT),(NAMES_ISRR(3),   1689
     *NISRR_ROUT)                                                         1689
      EQUIVALENCE (COMMEN_ISRR(3),CISRR_ROUT),(MAP_ISRR(1,3),             1689
     *MISRR_ROUT)                                                         1689
      CHARACTER CISRR_ROUT*40/' '/                                        1689
      CHARACTER NISRR_ROUT*12/'R.ROUT'/                                   1689
      INTEGER MISRR_ROUT(2)/1,1/                                          1689
      REAL RE_ISRR_ROUT                                                   1689
C -                                                                       1689
      REAL ISRR_LENGTH                                                    1689
      EQUIVALENCE (BANK_ISRR(6),ISRR_LENGTH,RE_ISRR_LENGTH),              1689
     *(NAMES_ISRR(4),NISRR_LENGTH)                                        1689
      EQUIVALENCE (COMMEN_ISRR(4),CISRR_LENGTH),(MAP_ISRR(1,4),           1689
     *MISRR_LENGTH)                                                       1689
      CHARACTER CISRR_LENGTH*40/' '/                                      1689
      CHARACTER NISRR_LENGTH*12/'R.LENGTH'/                               1689
      INTEGER MISRR_LENGTH(2)/1,1/                                        1689
      REAL RE_ISRR_LENGTH                                                 1689
C -                                                                       1689
      INTEGER LEN_ISRR,LLEN_ISRR,LINK_ISRR                                1689
      PARAMETER (LEN_ISRR=6)                                              1689
      PARAMETER (LLEN_ISRR=4)                                             1689
      INTEGER FLAG_ISRR/0/,MAP_ISRR(2,LLEN_ISRR),IDNUM_ISRR(10)           1689
      CHARACTER NAMES_ISRR(LLEN_ISRR)*12,COMMEN_ISRR(LLEN_ISRR)*40        1689
      DATA IDNUM_ISRR/10*0/                                               1689
      REAL BANK_ISRR(LEN_ISRR)                                            1689
      CHARACTER*60 BPATH_ISRR/' '/                                        1689
      SAVE FLAG_ISRR,MAP_ISRR,IDNUM_ISRR,NAMES_ISRR,COMMEN_ISRR,          1689
     *BPATH_ISRR                                                          1689
      DATA LINK_ISRR/0/,BANK_ISRR/LEN_ISRR*0/                             1689
C *                                                                       1689
C -                                                                       1690
      REAL ISCC_VERSION                                                   1690
      EQUIVALENCE (BANK_ISCC(3),ISCC_VERSION,RE_ISCC_VERSION),            1690
     *(NAMES_ISCC(1),NISCC_VERSION)                                       1690
      EQUIVALENCE (COMMEN_ISCC(1),CISCC_VERSION),(MAP_ISCC(1,1),          1690
     *MISCC_VERSION)                                                      1690
      CHARACTER CISCC_VERSION*40/' '/                                     1690
      CHARACTER NISCC_VERSION*12/'R.VERSION'/                             1690
      INTEGER MISCC_VERSION(2)/1,1/                                       1690
      REAL RE_ISCC_VERSION                                                1690
C -                                                                       1690
      REAL ISCC_RIN1                                                      1690
      EQUIVALENCE (BANK_ISCC(4),ISCC_RIN1,RE_ISCC_RIN1),(NAMES_ISCC(2),   1690
     *NISCC_RIN1)                                                         1690
      EQUIVALENCE (COMMEN_ISCC(2),CISCC_RIN1),(MAP_ISCC(1,2),             1690
     *MISCC_RIN1)                                                         1690
      CHARACTER CISCC_RIN1*40/' '/                                        1690
      CHARACTER NISCC_RIN1*12/'R.RIN1'/                                   1690
      INTEGER MISCC_RIN1(2)/1,1/                                          1690
      REAL RE_ISCC_RIN1                                                   1690
C -                                                                       1690
      REAL ISCC_ROUT1                                                     1690
      EQUIVALENCE (BANK_ISCC(5),ISCC_ROUT1,RE_ISCC_ROUT1),                1690
     *(NAMES_ISCC(3),NISCC_ROUT1)                                         1690
      EQUIVALENCE (COMMEN_ISCC(3),CISCC_ROUT1),(MAP_ISCC(1,3),            1690
     *MISCC_ROUT1)                                                        1690
      CHARACTER CISCC_ROUT1*40/' '/                                       1690
      CHARACTER NISCC_ROUT1*12/'R.ROUT1'/                                 1690
      INTEGER MISCC_ROUT1(2)/1,1/                                         1690
      REAL RE_ISCC_ROUT1                                                  1690
C -                                                                       1690
      REAL ISCC_RIN2                                                      1690
      EQUIVALENCE (BANK_ISCC(6),ISCC_RIN2,RE_ISCC_RIN2),(NAMES_ISCC(4),   1690
     *NISCC_RIN2)                                                         1690
      EQUIVALENCE (COMMEN_ISCC(4),CISCC_RIN2),(MAP_ISCC(1,4),             1690
     *MISCC_RIN2)                                                         1690
      CHARACTER CISCC_RIN2*40/' '/                                        1690
      CHARACTER NISCC_RIN2*12/'R.RIN2'/                                   1690
      INTEGER MISCC_RIN2(2)/1,1/                                          1690
      REAL RE_ISCC_RIN2                                                   1690
C -                                                                       1690
      REAL ISCC_ROUT2                                                     1690
      EQUIVALENCE (BANK_ISCC(7),ISCC_ROUT2,RE_ISCC_ROUT2),                1690
     *(NAMES_ISCC(5),NISCC_ROUT2)                                         1690
      EQUIVALENCE (COMMEN_ISCC(5),CISCC_ROUT2),(MAP_ISCC(1,5),            1690
     *MISCC_ROUT2)                                                        1690
      CHARACTER CISCC_ROUT2*40/' '/                                       1690
      CHARACTER NISCC_ROUT2*12/'R.ROUT2'/                                 1690
      INTEGER MISCC_ROUT2(2)/1,1/                                         1690
      REAL RE_ISCC_ROUT2                                                  1690
C -                                                                       1690
      REAL ISCC_LENGTH                                                    1690
      EQUIVALENCE (BANK_ISCC(8),ISCC_LENGTH,RE_ISCC_LENGTH),              1690
     *(NAMES_ISCC(6),NISCC_LENGTH)                                        1690
      EQUIVALENCE (COMMEN_ISCC(6),CISCC_LENGTH),(MAP_ISCC(1,6),           1690
     *MISCC_LENGTH)                                                       1690
      CHARACTER CISCC_LENGTH*40/' '/                                      1690
      CHARACTER NISCC_LENGTH*12/'R.LENGTH'/                               1690
      INTEGER MISCC_LENGTH(2)/1,1/                                        1690
      REAL RE_ISCC_LENGTH                                                 1690
C -                                                                       1690
      INTEGER LEN_ISCC,LLEN_ISCC,LINK_ISCC                                1690
      PARAMETER (LEN_ISCC=8)                                              1690
      PARAMETER (LLEN_ISCC=6)                                             1690
      INTEGER FLAG_ISCC/0/,MAP_ISCC(2,LLEN_ISCC),IDNUM_ISCC(10)           1690
      CHARACTER NAMES_ISCC(LLEN_ISCC)*12,COMMEN_ISCC(LLEN_ISCC)*40        1690
      DATA IDNUM_ISCC/10*0/                                               1690
      REAL BANK_ISCC(LEN_ISCC)                                            1690
      CHARACTER*60 BPATH_ISCC/' '/                                        1690
      SAVE FLAG_ISCC,MAP_ISCC,IDNUM_ISCC,NAMES_ISCC,COMMEN_ISCC,          1690
     *BPATH_ISCC                                                          1690
      DATA LINK_ISCC/0/,BANK_ISCC/LEN_ISCC*0/                             1690
C *                                                                       1690
C -                                                                       1692
      REAL ISVR_VERSION                                                   1692
      EQUIVALENCE (BANK_ISVR(3),ISVR_VERSION,RE_ISVR_VERSION),            1692
     *(NAMES_ISVR(1),NISVR_VERSION)                                       1692
      EQUIVALENCE (COMMEN_ISVR(1),CISVR_VERSION),(MAP_ISVR(1,1),          1692
     *MISVR_VERSION)                                                      1692
      CHARACTER CISVR_VERSION*40/' '/                                     1692
      CHARACTER NISVR_VERSION*12/'R.VERSION'/                             1692
      INTEGER MISVR_VERSION(2)/1,1/                                       1692
      REAL RE_ISVR_VERSION                                                1692
C -                                                                       1692
      REAL ISVR_CODE                                                      1692
      EQUIVALENCE (BANK_ISVR(4),ISVR_CODE,RE_ISVR_CODE),(NAMES_ISVR(2),   1692
     *NISVR_CODE)                                                         1692
      EQUIVALENCE (COMMEN_ISVR(2),CISVR_CODE),(MAP_ISVR(1,2),             1692
     *MISVR_CODE)                                                         1692
      CHARACTER CISVR_CODE*40/' '/                                        1692
      CHARACTER NISVR_CODE*12/'R.CODE'/                                   1692
      INTEGER MISVR_CODE(2)/1,1/                                          1692
      REAL RE_ISVR_CODE                                                   1692
C -                                                                       1692
      INTEGER LEN_ISVR,LLEN_ISVR,LINK_ISVR                                1692
      PARAMETER (LEN_ISVR=4)                                              1692
      PARAMETER (LLEN_ISVR=2)                                             1692
      INTEGER FLAG_ISVR/0/,MAP_ISVR(2,LLEN_ISVR),IDNUM_ISVR(10)           1692
      CHARACTER NAMES_ISVR(LLEN_ISVR)*12,COMMEN_ISVR(LLEN_ISVR)*40        1692
      DATA IDNUM_ISVR/10*0/                                               1692
      REAL BANK_ISVR(LEN_ISVR)                                            1692
      CHARACTER*60 BPATH_ISVR/' '/                                        1692
      SAVE FLAG_ISVR,MAP_ISVR,IDNUM_ISVR,NAMES_ISVR,COMMEN_ISVR,          1692
     *BPATH_ISVR                                                          1692
      DATA LINK_ISVR/0/,BANK_ISVR/LEN_ISVR*0/                             1692
C *                                                                       1692
* -------------------------------------------------------
C *                                                                       1694
      CALL AGSBEGM(MODULE,IPRIN)                                          1694
      IF (IPRIN.LT.0) RETURN                                              1694
C Filling bank ISMG - MOTHER VOLUME WHOLE DETECTOR                        1694
      BANK_TITLE='MOTHER VOLUME WHOLE DETECTOR'                           1694
      BPATH_ISMG='ISMG*'                                                  1694
      IDNUM_ISMG(1)=0                                                     1695
C VERSION                                                                 1695
      ISMG_LAYER=1                                                        1695
      CISMG_LAYER='VERSION'                                               1695
C INNER RADIUS                                                            1696
      ISMG_RIN=15.00                                                      1696
      CISMG_RIN='INNER RADIUS'                                            1696
C OUTER RADIUS                                                            1697
      ISMG_ROUT=18.00                                                     1697
      CISMG_ROUT='OUTER RADIUS'                                           1697
C OVERAL LENGTH OF THE DETECTOR                                           1698
      ISMG_TOTALLENGTH=54.50                                              1698
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE DETECTOR'                   1698
C FILE VERSION                                                            1699
      ISMG_CODE=3.00                                                      1699
      CISMG_CODE='FILE VERSION'                                           1699
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1700
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1700
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1700
C *                                                                       1700
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1700
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1700
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1700
C *                                                                       1702
      CALL AGSBEGM(MODULE,IPRIN)                                          1702
      IF (IPRIN.LT.0) RETURN                                              1702
C Filling bank ISMG - MOTHER VOLUME INNER LAYER                           1702
      BANK_TITLE='MOTHER VOLUME INNER LAYER'                              1702
      BPATH_ISMG='ISMG*'                                                  1702
      IDNUM_ISMG(1)=0                                                     1703
C VERSION                                                                 1703
      ISMG_LAYER=2                                                        1703
      CISMG_LAYER='VERSION'                                               1703
C INNER RADIUS                                                            1704
      ISMG_RIN=8.61                                                       1704
      CISMG_RIN='INNER RADIUS'                                            1704
C OUTER RADIUS                                                            1705
      ISMG_ROUT=12.00                                                     1705
      CISMG_ROUT='OUTER RADIUS'                                           1705
C OVERAL LENGTH OF THE LAYER                                              1706
      ISMG_TOTALLENGTH=40.00                                              1706
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      1706
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1707
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1707
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1707
C *                                                                       1707
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1707
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1707
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1707
C *                                                                       1709
      CALL AGSBEGM(MODULE,IPRIN)                                          1709
      IF (IPRIN.LT.0) RETURN                                              1709
C Filling bank ISMG - MOTHER VOLUME OUTER LAYER                           1709
      BANK_TITLE='MOTHER VOLUME OUTER LAYER'                              1709
      BPATH_ISMG='ISMG*'                                                  1709
      IDNUM_ISMG(1)=0                                                     1710
C VERSION                                                                 1710
      ISMG_LAYER=3                                                        1710
      CISMG_LAYER='VERSION'                                               1710
C INNER RADIUS                                                            1711
      ISMG_RIN=15.00                                                      1711
      CISMG_RIN='INNER RADIUS'                                            1711
C OUTER RADIUS                                                            1712
      ISMG_ROUT=18.00                                                     1712
      CISMG_ROUT='OUTER RADIUS'                                           1712
C OVERAL LENGTH OF THE LAYER                                              1713
      ISMG_TOTALLENGTH=54.50                                              1713
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      1713
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1714
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1714
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1714
C *                                                                       1714
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    1714
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           1714
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   1714
*--------------------------------------------------------
C *                                                                       1717
      CALL AGSBEGM(MODULE,IPRIN)                                          1717
      IF (IPRIN.LT.0) RETURN                                              1717
C Filling bank ISBG - INNER SILICON TRACKER DATA                          1717
      BANK_TITLE='INNER SILICON TRACKER DATA'                             1717
      BPATH_ISBG='ISBG*'                                                  1717
      IDNUM_ISBG(1)=0                                                     1718
C LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE                             1718
      ISBG_LAYER=1                                                        1718
      CISBG_LAYER='LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE'           1718
C LADDER COUNT                                                            1719
      ISBG_NLADDER=15                                                     1719
      CISBG_NLADDER='LADDER COUNT'                                        1719
C SENSOR UNITS PER LADDER                                                 1720
      ISBG_NUNIT=7                                                        1720
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               1720
C OVERAL LENGTH OF THE DETECTOR                                           1721
      ISBG_LENGTH=28.0                                                    1721
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        1721
C 1ST LADDER NOMINAL RADIUS                                               1722
      ISBG_R=9.0                                                          1722
      CISBG_R='1ST LADDER NOMINAL RADIUS'                                 1722
C 1ST LADDER NOMINAL POSITION ANGLE                                       1723
      ISBG_A=0.0                                                          1723
      CISBG_A='1ST LADDER NOMINAL POSITION ANGLE'                         1723
C ANGULAR OFFSET                                                          1724
      ISBG_AOFFSET=81.0                                                   1724
      CISBG_AOFFSET='ANGULAR OFFSET'                                      1724
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    1725
      ISBG_PPAROFFSET=0.0                                                 1725
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  1725
     *DULE'                                                               1725
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               1726
      ISBG_PPEROFFSET=0.0                                                 1726
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  1726
     *HE MODULE'                                                          1726
C LADDER WIDTH                                                            1727
      ISBG_LADDERWIDTH=4.0                                                1727
      CISBG_LADDERWIDTH='LADDER WIDTH'                                    1727
C LADDER THICKNESS                                                        1728
      ISBG_LADDERTHK=0.4626                                               1728
      CISBG_LADDERTHK='LADDER THICKNESS'                                  1728
C MODULE THICKNESS                                                        1729
      ISBG_SENSATHK=0.4282                                                1729
      CISBG_SENSATHK='MODULE THICKNESS'                                   1729
C SENSOR WIDTH                                                            1730
      ISBG_SENSORWIDTH=4.0                                                1730
      CISBG_SENSORWIDTH='SENSOR WIDTH'                                    1730
C SENSOR LENGTH                                                           1731
      ISBG_SENSORLNGTH=4.0                                                1731
      CISBG_SENSORLNGTH='SENSOR LENGTH'                                   1731
C SENSOR THICKNESS                                                        1732
      ISBG_SENSORTHK=0.0300                                               1732
      CISBG_SENSORTHK='SENSOR THICKNESS'                                  1732
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1733
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1733
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1733
C *                                                                       1733
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1733
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1733
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1733
C *                                                                       1735
      CALL AGSBEGM(MODULE,IPRIN)                                          1735
      IF (IPRIN.LT.0) RETURN                                              1735
C Filling bank ISBG - INNER SILICON TRACKER DATA                          1735
      BANK_TITLE='INNER SILICON TRACKER DATA'                             1735
      BPATH_ISBG='ISBG*'                                                  1735
      IDNUM_ISBG(1)=0                                                     1736
C LAYER INDEX                                                             1736
      ISBG_LAYER=2                                                        1736
      CISBG_LAYER='LAYER INDEX'                                           1736
C LADDER COUNT                                                            1737
      ISBG_NLADDER=15                                                     1737
      CISBG_NLADDER='LADDER COUNT'                                        1737
C SENSOR UNITS PER LADDER                                                 1738
      ISBG_NUNIT=9                                                        1738
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               1738
C OVERAL LENGTH OF THE DETECTOR                                           1739
      ISBG_LENGTH=36.0                                                    1739
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        1739
C 2ND LADDER NOMINAL RADIUS                                               1740
      ISBG_R=9.5                                                          1740
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 1740
C 2ND LADDER NOMINAL POSITION ANGLE                                       1741
      ISBG_A=0.0                                                          1741
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         1741
C ANGULAR OFFSET                                                          1742
      ISBG_AOFFSET=81.0                                                   1742
      CISBG_AOFFSET='ANGULAR OFFSET'                                      1742
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    1743
      ISBG_PPAROFFSET=0.0                                                 1743
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  1743
     *DULE'                                                               1743
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               1744
      ISBG_PPEROFFSET=0.0                                                 1744
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  1744
     *HE MODULE'                                                          1744
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1745
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1745
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1745
C *                                                                       1745
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1745
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1745
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1745
C *                                                                       1747
      CALL AGSBEGM(MODULE,IPRIN)                                          1747
      IF (IPRIN.LT.0) RETURN                                              1747
C Filling bank ISBG - INNER SILICON TRACKER DATA                          1747
      BANK_TITLE='INNER SILICON TRACKER DATA'                             1747
      BPATH_ISBG='ISBG*'                                                  1747
      IDNUM_ISBG(1)=0                                                     1748
C LAYER INDEX                                                             1748
      ISBG_LAYER=3                                                        1748
      CISBG_LAYER='LAYER INDEX'                                           1748
C LADDER COUNT                                                            1749
      ISBG_NLADDER=27                                                     1749
      CISBG_NLADDER='LADDER COUNT'                                        1749
C SENSOR UNITS PER LADDER                                                 1750
      ISBG_NUNIT=13                                                       1750
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               1750
C OVERAL LENGTH OF THE DETECTOR                                           1751
      ISBG_LENGTH=52.0                                                    1751
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        1751
C 2ND LADDER NOMINAL RADIUS                                               1752
      ISBG_R=17.0                                                         1752
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 1752
C 2ND LADDER NOMINAL POSITION ANGLE                                       1753
      ISBG_A=0.0                                                          1753
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         1753
C ANGULAR OFFSET                                                          1754
      ISBG_AOFFSET=81.0                                                   1754
      CISBG_AOFFSET='ANGULAR OFFSET'                                      1754
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    1755
      ISBG_PPAROFFSET=0.0                                                 1755
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  1755
     *DULE'                                                               1755
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               1756
      ISBG_PPEROFFSET=0.0                                                 1756
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  1756
     *HE MODULE'                                                          1756
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1757
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1757
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1757
C *                                                                       1757
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    1757
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           1757
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   1757
*--------------------------------------------------------
C *                                                                       1760
      CALL AGSBEGM(MODULE,IPRIN)                                          1760
      IF (IPRIN.LT.0) RETURN                                              1760
C Filling bank ISAN - THERMAL CONDUCTIVE CARBON FOAM PLATE                1760
      BANK_TITLE='THERMAL CONDUCTIVE CARBON FOAM PLATE'                   1760
      BPATH_ISAN='ISAN*'                                                  1760
      IDNUM_ISAN(1)=0                                                     1761
C MAY HAVE A FEW                                                          1761
      ISAN_VERSION=1                                                      1761
      CISAN_VERSION='MAY HAVE A FEW'                                      1761
C WIDTH                                                                   1762
      ISAN_W=4.0                                                          1762
      CISAN_W='WIDTH'                                                     1762
C LENGTH                                                                  1763
      ISAN_H=4.0                                                          1763
      CISAN_H='LENGTH'                                                    1763
C THICKNESS                                                               1764
      ISAN_THK=0.1686                                                     1764
      CISAN_THK='THICKNESS'                                               1764
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    1765
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           1765
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   1765
C *                                                                       1765
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    1765
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           1765
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   1765
*--------------------------------------------------------
C *                                                                       1768
      CALL AGSBEGM(MODULE,IPRIN)                                          1768
      IF (IPRIN.LT.0) RETURN                                              1768
C Filling bank ISHY - KAPTON HYBRID                                       1768
      BANK_TITLE='KAPTON HYBRID'                                          1768
      BPATH_ISHY='ISHY*'                                                  1768
      IDNUM_ISHY(1)=0                                                     1769
C MAY HAVE A FEW                                                          1769
      ISHY_VERSION=1                                                      1769
      CISHY_VERSION='MAY HAVE A FEW'                                      1769
C WIDTH                                                                   1770
      ISHY_W=4.0                                                          1770
      CISHY_W='WIDTH'                                                     1770
C LENGTH                                                                  1771
      ISHY_H=4.0                                                          1771
      CISHY_H='LENGTH'                                                    1771
C THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2MIL KAPTON        1772
      ISHY_THK=0.0050                                                     1772
      CISHY_THK='THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2M  1772
     *IL KAPTON'                                                          1772
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    1773
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           1773
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   1773
C *                                                                       1773
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    1773
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           1773
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   1773
*--------------------------------------------------------
C *                                                                       1776
      CALL AGSBEGM(MODULE,IPRIN)                                          1776
      IF (IPRIN.LT.0) RETURN                                              1776
C Filling bank ISCU - COPPER TRACES ON HYBRID                             1776
      BANK_TITLE='COPPER TRACES ON HYBRID'                                1776
      BPATH_ISCU='ISCU*'                                                  1776
      IDNUM_ISCU(1)=0                                                     1777
C MAY HAVE A FEW                                                          1777
      ISCU_VERSION=1                                                      1777
      CISCU_VERSION='MAY HAVE A FEW'                                      1777
C WIDTH                                                                   1778
      ISCU_W=4.0                                                          1778
      CISCU_W='WIDTH'                                                     1778
C LENGTH                                                                  1779
      ISCU_H=4.0                                                          1779
      CISCU_H='LENGTH'                                                    1779
C THICKNESS, 0.7MIL CU                                                    1780
      ISCU_THK=0.0018                                                     1780
      CISCU_THK='THICKNESS, 0.7MIL CU'                                    1780
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    1781
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           1781
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   1781
C *                                                                       1781
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    1781
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           1781
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   1781
*--------------------------------------------------------
C *                                                                       1784
      CALL AGSBEGM(MODULE,IPRIN)                                          1784
      IF (IPRIN.LT.0) RETURN                                              1784
C Filling bank ISCG - READOUT CHIP GEOMETRY, FIRST APPROX.                1784
      BANK_TITLE='READOUT CHIP GEOMETRY, FIRST APPROX.'                   1784
      BPATH_ISCG='ISCG*'                                                  1784
      IDNUM_ISCG(1)=0                                                     1785
C WE MAY HAVE A FEW DIFFERENT CHIPS                                       1785
      ISCG_VERSION=1                                                      1785
      CISCG_VERSION='WE MAY HAVE A FEW DIFFERENT CHIPS'                   1785
C WIDTH                                                                   1786
      ISCG_W=0.8055                                                       1786
      CISCG_W='WIDTH'                                                     1786
C HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)                          1787
      ISCG_H=4.0                                                          1787
      CISCG_H='HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)'            1787
C THICKNESS                                                               1788
      ISCG_THK=0.0762                                                     1788
      CISCG_THK='THICKNESS'                                               1788
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    1789
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           1789
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   1789
C *                                                                       1789
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    1789
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           1789
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   1789
*--------------------------------------------------------
C *                                                                       1792
      CALL AGSBEGM(MODULE,IPRIN)                                          1792
      IF (IPRIN.LT.0) RETURN                                              1792
C Filling bank ISGA - GLUE LAYER, SAME SIZE AS SENSOR                     1792
      BANK_TITLE='GLUE LAYER, SAME SIZE AS SENSOR'                        1792
      BPATH_ISGA='ISGA*'                                                  1792
      IDNUM_ISGA(1)=0                                                     1793
C MAY HAVE A FEW                                                          1793
      ISGA_VERSION=1                                                      1793
      CISGA_VERSION='MAY HAVE A FEW'                                      1793
C WIDTH                                                                   1794
      ISGA_W=4.0                                                          1794
      CISGA_W='WIDTH'                                                     1794
C LENGTH                                                                  1795
      ISGA_H=4.0                                                          1795
      CISGA_H='LENGTH'                                                    1795
C THICKNESS, USE 50UM                                                     1796
      ISGA_THK=0.0050                                                     1796
      CISGA_THK='THICKNESS, USE 50UM'                                     1796
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    1797
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           1797
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   1797
C *                                                                       1797
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    1797
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           1797
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   1797
*--------------------------------------------------------
C *                                                                       1800
      CALL AGSBEGM(MODULE,IPRIN)                                          1800
      IF (IPRIN.LT.0) RETURN                                              1800
C Filling bank ISGB - GLUE LAYER, SAME SIZE AS CHIP                       1800
      BANK_TITLE='GLUE LAYER, SAME SIZE AS CHIP'                          1800
      BPATH_ISGB='ISGB*'                                                  1800
      IDNUM_ISGB(1)=0                                                     1801
C MAY HAVE A FEW                                                          1801
      ISGB_VERSION=1                                                      1801
      CISGB_VERSION='MAY HAVE A FEW'                                      1801
C WIDTH                                                                   1802
      ISGB_W=0.8055                                                       1802
      CISGB_W='WIDTH'                                                     1802
C LENGTH                                                                  1803
      ISGB_H=4.0                                                          1803
      CISGB_H='LENGTH'                                                    1803
C THICKNESS, USE 50UM                                                     1804
      ISGB_THK=0.0050                                                     1804
      CISGB_THK='THICKNESS, USE 50UM'                                     1804
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    1805
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           1805
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   1805
C *                                                                       1805
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    1805
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           1805
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   1805
* -------------------------------------------------------
C *                                                                       1807
      CALL AGSBEGM(MODULE,IPRIN)                                          1807
      IF (IPRIN.LT.0) RETURN                                              1807
C Filling bank ISRR - SUPPORT RING FOR LAYER 1                            1807
      BANK_TITLE='SUPPORT RING FOR LAYER 1'                               1807
      BPATH_ISRR='ISRR*'                                                  1807
      IDNUM_ISRR(1)=0                                                     1808
C LAYER                                                                   1808
      ISRR_LAYER=1                                                        1808
      CISRR_LAYER='LAYER'                                                 1808
C INNER RADIUS                                                            1809
      ISRR_RIN=6.00                                                       1809
      CISRR_RIN='INNER RADIUS'                                            1809
C OUTER RADIUS                                                            1810
      ISRR_ROUT=9.00                                                      1810
      CISRR_ROUT='OUTER RADIUS'                                           1810
C THICKNESS OF THE RING                                                   1811
      ISRR_LENGTH=2.00                                                    1811
      CISRR_LENGTH='THICKNESS OF THE RING'                                1811
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1812
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1812
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1812
C *                                                                       1812
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1812
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1812
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1812
C *                                                                       1814
      CALL AGSBEGM(MODULE,IPRIN)                                          1814
      IF (IPRIN.LT.0) RETURN                                              1814
C Filling bank ISRR - SUPPORT RING FOR LAYER 2                            1814
      BANK_TITLE='SUPPORT RING FOR LAYER 2'                               1814
      BPATH_ISRR='ISRR*'                                                  1814
      IDNUM_ISRR(1)=0                                                     1815
C LAYER                                                                   1815
      ISRR_LAYER=2                                                        1815
      CISRR_LAYER='LAYER'                                                 1815
C INNER RADIUS                                                            1816
      ISRR_RIN=8.70                                                       1816
      CISRR_RIN='INNER RADIUS'                                            1816
C OUTER RADIUS                                                            1817
      ISRR_ROUT=11.70                                                     1817
      CISRR_ROUT='OUTER RADIUS'                                           1817
C THICKNESS OF THE RING                                                   1818
      ISRR_LENGTH=2.00                                                    1818
      CISRR_LENGTH='THICKNESS OF THE RING'                                1818
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1819
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1819
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1819
C *                                                                       1819
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1819
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1819
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1819
C *                                                                       1821
      CALL AGSBEGM(MODULE,IPRIN)                                          1821
      IF (IPRIN.LT.0) RETURN                                              1821
C Filling bank ISRR - SUPPORT RING FOR LAYER 3                            1821
      BANK_TITLE='SUPPORT RING FOR LAYER 3'                               1821
      BPATH_ISRR='ISRR*'                                                  1821
      IDNUM_ISRR(1)=0                                                     1822
C LAYER                                                                   1822
      ISRR_LAYER=3                                                        1822
      CISRR_LAYER='LAYER'                                                 1822
C INNER RADIUS                                                            1823
      ISRR_RIN=15.00                                                      1823
      CISRR_RIN='INNER RADIUS'                                            1823
C OUTER RADIUS                                                            1824
      ISRR_ROUT=18.00                                                     1824
      CISRR_ROUT='OUTER RADIUS'                                           1824
C THICKNESS OF THE RING                                                   1825
      ISRR_LENGTH=1.25                                                    1825
      CISRR_LENGTH='THICKNESS OF THE RING'                                1825
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1826
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1826
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1826
C *                                                                       1826
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    1826
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           1826
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   1826
* -------------------------------------------------------
C *                                                                       1828
      CALL AGSBEGM(MODULE,IPRIN)                                          1828
      IF (IPRIN.LT.0) RETURN                                              1828
C Filling bank ISCC - INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3          1828
      BANK_TITLE='INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3'             1828
      BPATH_ISCC='ISCC*'                                                  1828
      IDNUM_ISCC(1)=0                                                     1829
C VERSION                                                                 1829
      ISCC_VERSION=1                                                      1829
      CISCC_VERSION='VERSION'                                             1829
C INNER RADIUS SMALL                                                      1830
      ISCC_RIN1=10.70                                                     1830
      CISCC_RIN1='INNER RADIUS SMALL'                                     1830
C OUTER RADIUS SMALL                                                      1831
      ISCC_ROUT1=11.70                                                    1831
      CISCC_ROUT1='OUTER RADIUS SMALL'                                    1831
C INNER RADIUS LARGE                                                      1832
      ISCC_RIN2=15.00                                                     1832
      CISCC_RIN2='INNER RADIUS LARGE'                                     1832
C OUTER RADIUS LARGE                                                      1833
      ISCC_ROUT2=16.00                                                    1833
      CISCC_ROUT2='OUTER RADIUS LARGE'                                    1833
C THICKNESS OF THE RING                                                   1834
      ISCC_LENGTH=6.00                                                    1834
      CISCC_LENGTH='THICKNESS OF THE RING'                                1834
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    1835
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           1835
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   1835
C *                                                                       1835
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    1835
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           1835
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   1835
* -------------------------------------------------------
C *                                                                       1837
      CALL AGSBEGM(MODULE,IPRIN)                                          1837
      IF (IPRIN.LT.0) RETURN                                              1837
C Filling bank ISVR - CODE VERSION FOR G2T_VOLUME_ID                      1837
      BANK_TITLE='CODE VERSION FOR G2T_VOLUME_ID'                         1837
      BPATH_ISVR='ISVR*'                                                  1837
      IDNUM_ISVR(1)=0                                                     1838
C VERSION                                                                 1838
      ISVR_VERSION=3                                                      1838
      CISVR_VERSION='VERSION'                                             1838
C CODE                                                                    1839
      ISVR_CODE=3                                                         1839
      CISVR_CODE='CODE'                                                   1839
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    1840
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           1840
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   1840
C *                                                                       1840
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    1840
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           1840
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   1840
* -------------------------------------------------------
* -------------------------------------------------------
      RADDEG = 3.14159265/180.0                                           1844
* -------------------------------------------------------
C use ISMG bank                                                           1846
      BPATH_ISMG='ISMG*'                                                  1846
      IDNUM_ISMG(1)=0                                                     1846
      ISMG_LAYER=1                                                        1846
      CALL AGDGETP('ISTBGEO3','*',-999,'ISMG',NISMG_LAYER,RE_ISMG_LAYER,  1846
     *BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,BANK_ISMG,LEN_ISMG,     1846
     *LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                                      1846
*      USE ISVR
      CALL AGSBEGM(MODULE,IPRIN)                                          1849
C Check IPRIN<0                                                           1849
      IF (IPRIN.LT.0) RETURN                                              1849
C Create IBMO :                                                           1849
C Call To Local Procedure IBMO                                            1849
      ASSIGN 5020 TO BLOCK_IBMO                                           1849
      GO TO  5010                                                         1849
5020  CONTINUE                                                            1849
C *                                                                       1849
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           1850
      CALL AGSRESET                                                       1850
      AG_MOTHER = 'CAVE'                                                  1850
      AG_TITLE = 'IBMO'                                                   1850
      AG_EXNAME = 'POSITION'                                              1850
      AG_PARLIST = 'MOTHER'                                               1850
      CALL AXPOSITION                                                     1850
C *                                                                       1850
      WRITE (*,*) 'ISTB mother - IBMO - created'                          1852
* -------------------------------------------------------
      CALL AGSENDM                                                        1854
      RETURN                                                              1854
C Begin Local Procedure IBMO                                              1854
C IBMO IS THE MOTHER OF THE IST DETECTOR                                  1854
5010  CONTINUE                                                            1854
         AG_TITLE='IBMO'                                                  1854
         AG_MODULE=MODULE                                                 1854
         AG_MARK='V00'                                                    1854
         CALL AGSPUSH                                                     1854
         AG_MODULE=MODULE                                                 1854
C    *                                                                    1854
C    Geant MATERIAL : AIR ===> inherited arguments used <===              1855
         CALL AGSRESET                                                    1855
         AG_TITLE = 'AIR'                                                 1855
         AG_EXNAME = 'MATERIAL'                                           1855
         AG_PARLIST = 'NONE'                                              1855
         CALL AXMATERIAL                                                  1855
C    *                                                                    1855
C    Geant ATTRIBUTE : IBMO ===> SEEN=0 COLO=1 <===                       1855
         CALL AGSRESET                                                    1856
         AG_SEEN = 0                                                      1856
         AG_COLO = 1                                                      1856
         AG_TITLE = 'IBMO'                                                1856
         AG_EXNAME = 'ATTRIBUTE'                                          1856
         AG_PARLIST = 'SEEN_COLO'                                         1856
         CALL AXATTRIBUTE                                                 1856
C    *                                                                    1856
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  1860
C    LLENGTH/2.0 <===                                                     1860
         CALL AGSRESET                                                    1860
         AG_RMIN = ISMG_RIN                                               1860
         AG_RMAX = ISMG_ROUT                                              1860
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     1860
         AG_TITLE = 'TUBE'                                                1860
         AG_EXNAME = 'SHAPE'                                              1860
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      1860
         CALL AXSHAPE                                                     1860
C    *                                                                    1860
* -- Some administration to calculate the thickness of a module
* -- Kept for (private) future use
C    use ISAN bank                                                        1864
         BPATH_ISAN='ISAN*'                                               1864
         IDNUM_ISAN(1)=0                                                  1864
         ISAN_VERSION=1                                                   1864
         CALL AGDGETP('ISTBGEO3','*',-999,'ISAN',NISAN_VERSION,           1864
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     1864
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                1864
C    use ISGA bank                                                        1865
         BPATH_ISGA='ISGA*'                                               1865
         IDNUM_ISGA(1)=0                                                  1865
         ISGA_VERSION=1                                                   1865
         CALL AGDGETP('ISTBGEO3','*',-999,'ISGA',NISGA_VERSION,           1865
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     1865
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                1865
C    use ISBG bank                                                        1866
         BPATH_ISBG='ISBG*'                                               1866
         IDNUM_ISBG(1)=0                                                  1866
         ISBG_LAYER=1                                                     1866
         CALL AGDGETP('ISTBGEO3','*',-999,'ISBG',NISBG_LAYER,             1866
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       1866
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                1866
C    use ISGA bank                                                        1867
         BPATH_ISGA='ISGA*'                                               1867
         IDNUM_ISGA(1)=0                                                  1867
         ISGA_VERSION=1                                                   1867
         CALL AGDGETP('ISTBGEO3','*',-999,'ISGA',NISGA_VERSION,           1867
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     1867
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                1867
C    use ISHY bank                                                        1868
         BPATH_ISHY='ISHY*'                                               1868
         IDNUM_ISHY(1)=0                                                  1868
         ISHY_VERSION=1                                                   1868
         CALL AGDGETP('ISTBGEO3','*',-999,'ISHY',NISHY_VERSION,           1868
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     1868
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                1868
C    use ISCU bank                                                        1869
         BPATH_ISCU='ISCU*'                                               1869
         IDNUM_ISCU(1)=0                                                  1869
         ISCU_VERSION=1                                                   1869
         CALL AGDGETP('ISTBGEO3','*',-999,'ISCU',NISCU_VERSION,           1869
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     1869
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                1869
C    use ISGB bank                                                        1870
         BPATH_ISGB='ISGB*'                                               1870
         IDNUM_ISGB(1)=0                                                  1870
         ISGB_VERSION=1                                                   1870
         CALL AGDGETP('ISTBGEO3','*',-999,'ISGB',NISGB_VERSION,           1870
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     1870
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                1870
C    use ISCG bank                                                        1871
         BPATH_ISCG='ISCG*'                                               1871
         IDNUM_ISCG(1)=0                                                  1871
         ISCG_VERSION=1                                                   1871
         CALL AGDGETP('ISTBGEO3','*',-999,'ISCG',NISCG_VERSION,           1871
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     1871
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                1871
         MOD_THK = 2.0*(ISAN_THK/                                         1873
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+                   1873
     *   ISCU_THK+ISGB_THK+ISCG_THK)                                      1873
C    *                                                                    1875
         ISTLAYER=3                                                       1875
            GO TO 5033                                                    1875
5031        ISTLAYER=ISTLAYER+1                                           1875
5033        IF(ISTLAYER-(3).GT.0) GO TO 5032                              1875
C       use ISMG bank                                                     1876
            BPATH_ISMG='ISMG*'                                            1876
            IDNUM_ISMG(1)=0                                               1876
            ISMG_LAYER=ISTLAYER                                           1876
            CALL AGDGETP('ISTBGEO3','*',-999,'ISMG',NISMG_LAYER,          1876
     *      RE_ISMG_LAYER,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,    1876
     *      BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)             1876
C       use ISBG bank                                                     1877
            BPATH_ISBG='ISBG*'                                            1877
            IDNUM_ISBG(1)=0                                               1877
            ISBG_LAYER=ISTLAYER                                           1877
            CALL AGDGETP('ISTBGEO3','*',-999,'ISBG',NISBG_LAYER,          1877
     *      RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,    1877
     *      BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)             1877
C       use ISRR bank                                                     1878
            BPATH_ISRR='ISRR*'                                            1878
            IDNUM_ISRR(1)=0                                               1878
            ISRR_LAYER=ISTLAYER                                           1878
            CALL AGDGETP('ISTBGEO3','*',-999,'ISRR',NISRR_LAYER,          1878
     *      RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,    1878
     *      BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)             1878
C       Create IBMY :                                                     1879
C       Call To Local Procedure IBMY                                      1879
            ASSIGN 5050 TO BLOCK_IBMY                                     1879
            GO TO  5040                                                   1879
5050        CONTINUE                                                      1879
C       *                                                                 1879
C       Geant POSITION : IBMY ===> inherited arguments used <===          1880
            CALL AGSRESET                                                 1880
            AG_TITLE = 'IBMY'                                             1880
            AG_EXNAME = 'POSITION'                                        1880
            AG_PARLIST = 'NONE'                                           1880
            CALL AXPOSITION                                               1880
C       *                                                                 1880
         GO TO 5031                                                       1881
5032     CONTINUE                                                         1881
5011  CALL AGSPOPB                                                        1884
      GO TO BLOCK_IBMO, (5010 ,5020)                                      1884
C End of Local Procedure                                                  1884
* -------------------------------------------------------
C Begin Local Procedure IBMY                                              1887
C IBMY IS THE MOTHER OF THE IST LAYER                                     1887
5040  CONTINUE                                                            1887
         AG_TITLE='IBMY'                                                  1887
         AG_MODULE=MODULE                                                 1887
         AG_MARK='V00'                                                    1887
         CALL AGSPUSH                                                     1887
         AG_MODULE=MODULE                                                 1887
C    *                                                                    1887
C    Geant MATERIAL : AIR ===> inherited arguments used <===              1888
         CALL AGSRESET                                                    1888
         AG_TITLE = 'AIR'                                                 1888
         AG_EXNAME = 'MATERIAL'                                           1888
         AG_PARLIST = 'NONE'                                              1888
         CALL AXMATERIAL                                                  1888
C    *                                                                    1888
C    Geant ATTRIBUTE : IBMY ===> SEEN=0 COLO=1 SERIAL=ISTLAYER <===       1888
         CALL AGSRESET                                                    1889
         AG_SEEN = 0                                                      1889
         AG_COLO = 1                                                      1889
         AG_SERIAL = ISTLAYER                                             1889
         AG_TITLE = 'IBMY'                                                1889
         AG_EXNAME = 'ATTRIBUTE'                                          1889
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  1889
         CALL AXATTRIBUTE                                                 1889
C    *                                                                    1889
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  1893
C    LLENGTH/2.0 <===                                                     1893
         CALL AGSRESET                                                    1893
         AG_RMIN = ISMG_RIN                                               1893
         AG_RMAX = ISMG_ROUT                                              1893
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     1893
         AG_TITLE = 'TUBE'                                                1893
         AG_EXNAME = 'SHAPE'                                              1893
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      1893
         CALL AXSHAPE                                                     1893
C    *                                                                    1893
         WRITE(*,*) '===>GEOINFO/istbgeo: Creating IST layer',            1896
     *   ISBG_LAYER,' Rin=',ISMG_RIN,' Rout=',ISMG_ROUT                   1896
C    *                                                                    1897
         NL=1                                                             1897
            GO TO 5063                                                    1897
5061        NL=NL+1                                                       1897
5063        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5062                         1897
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                1897
C       BASE TILT, TO BE FURTHER CORRECTED                                1899
            ANGLE = (360.0/ISBG_NLADDER)*NL                               1899
*       GvN Offset perpendicular to the length of the module/ladder
*       this to move the midpoint of the sensors back on the required
*       radius after the tilting
            RLAD = ISBG_R+ISBG_PPEROFFSET                                 1904
*       Individual ladders can be individually tilted by using
*       the aOffset parameter (angular offset), and the pOffset
*       (position offset), which is the individual lateral
*       displacement.
            ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                        1911
*       The anglePos defines the POSITION of the center of the ladder
*       in space, along the lines of x=r*cos(...), y=r*sin(...)
*       have to correct and convert to radians:
C       SEE ABOVE COMMENT                                                 1917
            ANGLEPOS = ANGLE*RADDEG - ANGLECORR                           1917
            TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                      1918
C       Create IBAM :                                                     1920
C       Call To Local Procedure IBAM                                      1920
            ASSIGN 5080 TO BLOCK_IBAM                                     1920
            GO TO  5070                                                   1920
5080        CONTINUE                                                      1920
C       *                                                                 1920
C       Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(ANG  1924
C       LEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===                   1924
            CALL AGSRESET                                                 1924
            AG_X = TRUER*COS(ANGLEPOS)                                    1924
            AG_Y = TRUER*SIN(ANGLEPOS)                                    1924
            AG_Z = 0.0                                                    1924
            AG_ALPHAN=AG_ALPHAN+1                                         1924
            AG_ALPHAK(AG_ALPHAN)=3                                        1924
            AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                       1924
            AG_TITLE = 'IBAM'                                             1924
            AG_EXNAME = 'POSITION'                                        1924
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   1924
            CALL AXPOSITION                                               1924
C       *                                                                 1924
         GO TO 5061                                                       1926
5062     CONTINUE                                                         1926
*     place 2 support rings at both ends of the ladders
C    Create ISRI :                                                        1929
C    Call To Local Procedure ISRI                                         1929
         ASSIGN 5100 TO BLOCK_ISRI                                        1929
         GO TO  5090                                                      1929
5100     CONTINUE                                                         1929
C    *                                                                    1929
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  1932
C    R_LENGTH/2.0) <===                                                   1932
         CALL AGSRESET                                                    1932
         AG_X = 0.0                                                       1932
         AG_Y = 0.0                                                       1932
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                     1932
         AG_TITLE = 'ISRI'                                                1932
         AG_EXNAME = 'POSITION'                                           1932
         AG_PARLIST = 'X_Y_Z'                                             1932
         CALL AXPOSITION                                                  1932
C    *                                                                    1932
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  1932
C    RR_LENGTH/2.0) <===                                                  1932
         CALL AGSRESET                                                    1935
         AG_X = 0.0                                                       1935
         AG_Y = 0.0                                                       1935
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                    1935
         AG_TITLE = 'ISRI'                                                1935
         AG_EXNAME = 'POSITION'                                           1935
         AG_PARLIST = 'X_Y_Z'                                             1935
         CALL AXPOSITION                                                  1935
C    *                                                                    1935
5041  CALL AGSPOPB                                                        1937
      GO TO BLOCK_IBMY, (5040 ,5050)                                      1937
C End of Local Procedure                                                  1937
* -----------------------------------------------------------------------------
* -----------------------------------------------------------------------------
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              1943
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             1943
5070  CONTINUE                                                            1943
         AG_TITLE='IBAM'                                                  1943
         AG_MODULE=MODULE                                                 1943
         AG_MARK='V00'                                                    1943
         CALL AGSPUSH                                                     1943
         AG_MODULE=MODULE                                                 1943
C    *                                                                    1943
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=1 <===                       1944
         CALL AGSRESET                                                    1944
         AG_SEEN = 0                                                      1944
         AG_COLO = 1                                                      1944
         AG_TITLE = 'IBAM'                                                1944
         AG_EXNAME = 'ATTRIBUTE'                                          1944
         AG_PARLIST = 'SEEN_COLO'                                         1944
         CALL AXATTRIBUTE                                                 1944
C    *                                                                    1944
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_LADDERTHK/2.  1948
C    0 DZ = ISBG_LENGTH/2.0 <===                                          1948
         CALL AGSRESET                                                    1948
         AG_DX = ISBG_LADDERWIDTH/2.0                                     1948
         AG_DY = ISBG_LADDERTHK/2.0                                       1948
         AG_DZ = ISBG_LENGTH/2.0                                          1948
         AG_TITLE = 'BOX'                                                 1948
         AG_EXNAME = 'SHAPE'                                              1948
         AG_PARLIST = 'DX_DY_DZ'                                          1948
         CALL AXSHAPE                                                     1948
C    *                                                                    1948
C    use ISHY bank                                                        1950
         BPATH_ISHY='ISHY*'                                               1950
         IDNUM_ISHY(1)=0                                                  1950
         ISHY_VERSION=1                                                   1950
         CALL AGDGETP('ISTBGEO3','*',-999,'ISHY',NISHY_VERSION,           1950
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     1950
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                1950
C    Create ISKH :                                                        1951
C    Call To Local Procedure ISKH                                         1951
         ASSIGN 5120 TO BLOCK_ISKH                                        1951
         GO TO  5110                                                      1951
5120     CONTINUE                                                         1951
C    *                                                                    1951
C    Create ISCL :                                                        1952
C    Call To Local Procedure ISCL                                         1952
         ASSIGN 5140 TO BLOCK_ISCL                                        1952
         GO TO  5130                                                      1952
5140     CONTINUE                                                         1952
C    *                                                                    1952
C    Create IBLM :                                                        1953
C    Call To Local Procedure IBLM                                         1953
         ASSIGN 5160 TO BLOCK_IBLM                                        1953
         GO TO  5150                                                      1953
5160     CONTINUE                                                         1953
C    *                                                                    1953
C    *                                                                    1954
         NU=1                                                             1954
            GO TO 5173                                                    1954
5171        NU=NU+1                                                       1954
5173        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5172                           1954
* --    IST modules
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -ISBG_LENGTH/2.0+ISBG  1958
C       _SENSORWIDTH*(NU-0.5) <===                                        1958
            CALL AGSRESET                                                 1958
            AG_X = 0.0                                                    1958
            AG_Y = 0.0                                                    1958
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1958
            AG_TITLE = 'IBLM'                                             1958
            AG_EXNAME = 'POSITION'                                        1958
            AG_PARLIST = 'X_Y_Z'                                          1958
            CALL AXPOSITION                                               1958
C       *                                                                 1958
* --    Dummy readout cables (Kapton+Copper) stacked on top of modules
* --    Note that the first part of the cable (the hybrid) is already part of the module
* --    daisy chain cables as: 5 sensors + 5 sensors             (for layer 2)
* --                           5 sensors + 5 sensors + 3 sensors (for layer 3)
C       Check NU>5                                                        1963
            IF (NU.GT.5) THEN                                             1963
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK/2.0  1966
C       ) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===             1966
            CALL AGSRESET                                                 1966
            AG_X = 0.0                                                    1966
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK/2.0)                         1966
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1966
            AG_TITLE = 'ISKH'                                             1966
            AG_EXNAME = 'POSITION'                                        1966
            AG_PARLIST = 'X_Y_Z'                                          1966
            CALL AXPOSITION                                               1966
C       *                                                                 1966
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  1966
C       U_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===    1966
            CALL AGSRESET                                                 1969
            AG_X = 0.0                                                    1969
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)                1969
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1969
            AG_TITLE = 'ISCL'                                             1969
            AG_EXNAME = 'POSITION'                                        1969
            AG_PARLIST = 'X_Y_Z'                                          1969
            CALL AXPOSITION                                               1969
C       *                                                                 1969
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK/2.  1969
C       0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===            1969
            CALL AGSRESET                                                 1972
            AG_X = 0.0                                                    1972
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK/2.0)                        1972
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1972
            AG_TITLE = 'ISKH'                                             1972
            AG_EXNAME = 'POSITION'                                        1972
            AG_PARLIST = 'X_Y_Z'                                          1972
            CALL AXPOSITION                                               1972
C       *                                                                 1972
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  1972
C       CU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===   1972
            CALL AGSRESET                                                 1975
            AG_X = 0.0                                                    1975
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)               1975
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1975
            AG_TITLE = 'ISCL'                                             1975
            AG_EXNAME = 'POSITION'                                        1975
            AG_PARLIST = 'X_Y_Z'                                          1975
            CALL AXPOSITION                                               1975
C       *                                                                 1975
            ENDIF                                                         1975
C       Check NU>10                                                       1977
            IF (NU.GT.10) THEN                                            1977
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  1980
C       U_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.  1980
C       5) <===                                                           1980
            CALL AGSRESET                                                 1980
            AG_X = 0.0                                                    1980
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)       1980
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1980
            AG_TITLE = 'ISKH'                                             1980
            AG_EXNAME = 'POSITION'                                        1980
            AG_PARLIST = 'X_Y_Z'                                          1980
            CALL AXPOSITION                                               1980
C       *                                                                 1980
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  1980
C       U_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWID  1980
C       TH*(NU-0.5) <===                                                  1980
            CALL AGSRESET                                                 1983
            AG_X = 0.0                                                    1983
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/  1983
     *      2.0)                                                          1983
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1983
            AG_TITLE = 'ISCL'                                             1983
            AG_EXNAME = 'POSITION'                                        1983
            AG_PARLIST = 'X_Y_Z'                                          1983
            CALL AXPOSITION                                               1983
C       *                                                                 1983
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  1983
C       CU_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0  1983
C       .5) <===                                                          1983
            CALL AGSRESET                                                 1986
            AG_X = 0.0                                                    1986
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)      1986
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1986
            AG_TITLE = 'ISKH'                                             1986
            AG_EXNAME = 'POSITION'                                        1986
            AG_PARLIST = 'X_Y_Z'                                          1986
            CALL AXPOSITION                                               1986
C       *                                                                 1986
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  1986
C       CU_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWI  1986
C       DTH*(NU-0.5) <===                                                 1986
            CALL AGSRESET                                                 1989
            AG_X = 0.0                                                    1989
            AG_Y = -1.0*(MOD_THK/                                         1989
     *      2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/2.0)                  1989
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             1989
            AG_TITLE = 'ISCL'                                             1989
            AG_EXNAME = 'POSITION'                                        1989
            AG_PARLIST = 'X_Y_Z'                                          1989
            CALL AXPOSITION                                               1989
C       *                                                                 1989
            ENDIF                                                         1989
         GO TO 5171                                                       1992
5172     CONTINUE                                                         1992
5071  CALL AGSPOPB                                                        1994
      GO TO BLOCK_IBAM, (5070 ,5080)                                      1994
C End of Local Procedure                                                  1994
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              1997
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               1997
5150  CONTINUE                                                            1997
         AG_TITLE='IBLM'                                                  1997
         AG_MODULE=MODULE                                                 1997
         AG_MARK='V00'                                                    1997
         CALL AGSPUSH                                                     1997
         AG_MODULE=MODULE                                                 1997
C    *                                                                    1997
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=1 SERIAL=ISTLAYER <===       1998
         CALL AGSRESET                                                    1998
         AG_SEEN = 0                                                      1998
         AG_COLO = 1                                                      1998
         AG_SERIAL = ISTLAYER                                             1998
         AG_TITLE = 'IBLM'                                                1998
         AG_EXNAME = 'ATTRIBUTE'                                          1998
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  1998
         CALL AXATTRIBUTE                                                 1998
C    *                                                                    1998
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_SENSATHK/2.0  2002
C     DZ = ISBG_SENSORLNGTH/2.0 <===                                      2002
         CALL AGSRESET                                                    2002
         AG_DX = ISBG_LADDERWIDTH/2.0                                     2002
         AG_DY = ISBG_SENSATHK/2.0                                        2002
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     2002
         AG_TITLE = 'BOX'                                                 2002
         AG_EXNAME = 'SHAPE'                                              2002
         AG_PARLIST = 'DX_DY_DZ'                                          2002
         CALL AXSHAPE                                                     2002
C    *                                                                    2002
* -- Start stacking all the parts of the module
* -- Note that the module are mirror symmetric wrt the x-z plane
* -- with exception of the readout chips (minimize average material!)
* -- Carbon foam
C    use ISAN bank                                                        2009
         BPATH_ISAN='ISAN*'                                               2009
         IDNUM_ISAN(1)=0                                                  2009
         ISAN_VERSION=1                                                   2009
         CALL AGDGETP('ISTBGEO3','*',-999,'ISAN',NISAN_VERSION,           2009
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     2009
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                2009
C    Create ISTP :                                                        2010
C    Call To Local Procedure ISTP                                         2010
         ASSIGN 5190 TO BLOCK_ISTP                                        2010
         GO TO  5180                                                      2010
5190     CONTINUE                                                         2010
C    *                                                                    2010
C    Geant POSITION : ISTP ===> X=0.0 Y=0.0 Z = 0.0 <===                  2013
         CALL AGSRESET                                                    2013
         AG_X = 0.0                                                       2013
         AG_Y = 0.0                                                       2013
         AG_Z = 0.0                                                       2013
         AG_TITLE = 'ISTP'                                                2013
         AG_EXNAME = 'POSITION'                                           2013
         AG_PARLIST = 'X_Y_Z'                                             2013
         CALL AXPOSITION                                                  2013
C    *                                                                    2013
* -- Glue layers between foam and silicon
C    use ISGA bank                                                        2016
         BPATH_ISGA='ISGA*'                                               2016
         IDNUM_ISGA(1)=0                                                  2016
         ISGA_VERSION=1                                                   2016
         CALL AGDGETP('ISTBGEO3','*',-999,'ISGA',NISGA_VERSION,           2016
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2016
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2016
C    Create ISXA :                                                        2017
C    Call To Local Procedure ISXA                                         2017
         ASSIGN 5210 TO BLOCK_ISXA                                        2017
         GO TO  5200                                                      2017
5210     CONTINUE                                                         2017
C    *                                                                    2017
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK/2.0 Z   2020
C    = 0.0 <===                                                           2020
         CALL AGSRESET                                                    2020
         AG_X = 0.0                                                       2020
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK/2.0                             2020
         AG_Z = 0.0                                                       2020
         AG_TITLE = 'ISXA'                                                2020
         AG_EXNAME = 'POSITION'                                           2020
         AG_PARLIST = 'X_Y_Z'                                             2020
         CALL AXPOSITION                                                  2020
C    *                                                                    2020
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK/2.0 Z  2020
C     = 0.0 <===                                                          2020
         CALL AGSRESET                                                    2023
         AG_X = 0.0                                                       2023
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK/2.0                            2023
         AG_Z = 0.0                                                       2023
         AG_TITLE = 'ISXA'                                                2023
         AG_EXNAME = 'POSITION'                                           2023
         AG_PARLIST = 'X_Y_Z'                                             2023
         CALL AXPOSITION                                                  2023
C    *                                                                    2023
* -- Silicon Sensors
C    Create IBSS :                                                        2026
C    Call To Local Procedure IBSS                                         2026
         ASSIGN 5230 TO BLOCK_IBSS                                        2026
         GO TO  5220                                                      2026
5230     CONTINUE                                                         2026
C    *                                                                    2026
C    Geant POSITION : IBSS ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2029
C    ENSORTHK/2.0 Z = 0.0 <===                                            2029
         CALL AGSRESET                                                    2029
         AG_X = 0.0                                                       2029
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK/2.0              2029
         AG_Z = 0.0                                                       2029
         AG_TITLE = 'IBSS'                                                2029
         AG_EXNAME = 'POSITION'                                           2029
         AG_PARLIST = 'X_Y_Z'                                             2029
         CALL AXPOSITION                                                  2029
C    *                                                                    2029
C    Geant POSITION : IBSS ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2029
C    SENSORTHK/2.0 Z = 0.0 ALPHAZ = 180 <===                              2029
         CALL AGSRESET                                                    2033
         AG_X = 0.0                                                       2033
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK/2.0             2033
         AG_Z = 0.0                                                       2033
         AG_ALPHAN=AG_ALPHAN+1                                            2033
         AG_ALPHAK(AG_ALPHAN)=3                                           2033
         AG_ALPHAL(AG_ALPHAN)=180                                         2033
         AG_TITLE = 'IBSS'                                                2033
         AG_EXNAME = 'POSITION'                                           2033
         AG_PARLIST = 'X_Y_Z_ALPHAZ'                                      2033
         CALL AXPOSITION                                                  2033
C    *                                                                    2033
* -- Glue layers between silicon and hybrid
C    use ISGA bank                                                        2036
         BPATH_ISGA='ISGA*'                                               2036
         IDNUM_ISGA(1)=0                                                  2036
         ISGA_VERSION=1                                                   2036
         CALL AGDGETP('ISTBGEO3','*',-999,'ISGA',NISGA_VERSION,           2036
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2036
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2036
C    Create ISXA :                                                        2037
C    Call To Local Procedure ISXA                                         2037
         ASSIGN 5240 TO BLOCK_ISXA                                        2037
         GO TO  5200                                                      2037
5240     CONTINUE                                                         2037
C    *                                                                    2037
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2040
C    ENSORTHK+ISGA_THK/2.0 Z = 0.0 <===                                   2040
         CALL AGSRESET                                                    2040
         AG_X = 0.0                                                       2040
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK/2.0     2040
         AG_Z = 0.0                                                       2040
         AG_TITLE = 'ISXA'                                                2040
         AG_EXNAME = 'POSITION'                                           2040
         AG_PARLIST = 'X_Y_Z'                                             2040
         CALL AXPOSITION                                                  2040
C    *                                                                    2040
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2040
C    SENSORTHK-ISGA_THK/2.0 Z = 0.0 <===                                  2040
         CALL AGSRESET                                                    2043
         AG_X = 0.0                                                       2043
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK/2.0    2043
         AG_Z = 0.0                                                       2043
         AG_TITLE = 'ISXA'                                                2043
         AG_EXNAME = 'POSITION'                                           2043
         AG_PARLIST = 'X_Y_Z'                                             2043
         CALL AXPOSITION                                                  2043
C    *                                                                    2043
* -- Kapton hybrids
C    use ISHY bank                                                        2046
         BPATH_ISHY='ISHY*'                                               2046
         IDNUM_ISHY(1)=0                                                  2046
         ISHY_VERSION=1                                                   2046
         CALL AGDGETP('ISTBGEO3','*',-999,'ISHY',NISHY_VERSION,           2046
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     2046
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                2046
C    Create ISKH :                                                        2047
C    Call To Local Procedure ISKH                                         2047
         ASSIGN 5250 TO BLOCK_ISKH                                        2047
         GO TO  5110                                                      2047
5250     CONTINUE                                                         2047
C    *                                                                    2047
C    Geant POSITION : ISKH ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2050
C    ENSORTHK+ISGA_THK+ISHY_THK/2.0 Z = 0.0 <===                          2050
         CALL AGSRESET                                                    2050
         AG_X = 0.0                                                       2050
         AG_Y = 1.0*ISAN_THK/                                             2050
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK/2.0                2050
         AG_Z = 0.0                                                       2050
         AG_TITLE = 'ISKH'                                                2050
         AG_EXNAME = 'POSITION'                                           2050
         AG_PARLIST = 'X_Y_Z'                                             2050
         CALL AXPOSITION                                                  2050
C    *                                                                    2050
C    Geant POSITION : ISKH ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2050
C    SENSORTHK-ISGA_THK-ISHY_THK/2.0 Z = 0.0 <===                         2050
         CALL AGSRESET                                                    2053
         AG_X = 0.0                                                       2053
         AG_Y = -1.0*ISAN_THK/                                            2053
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK/2.0                2053
         AG_Z = 0.0                                                       2053
         AG_TITLE = 'ISKH'                                                2053
         AG_EXNAME = 'POSITION'                                           2053
         AG_PARLIST = 'X_Y_Z'                                             2053
         CALL AXPOSITION                                                  2053
C    *                                                                    2053
* -- Copper on the hybrid, 10 um total for couple of 5um lines at 50% coverage + ground plane
C    use ISCU bank                                                        2056
         BPATH_ISCU='ISCU*'                                               2056
         IDNUM_ISCU(1)=0                                                  2056
         ISCU_VERSION=1                                                   2056
         CALL AGDGETP('ISTBGEO3','*',-999,'ISCU',NISCU_VERSION,           2056
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     2056
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                2056
C    Create ISCL :                                                        2057
C    Call To Local Procedure ISCL                                         2057
         ASSIGN 5260 TO BLOCK_ISCL                                        2057
         GO TO  5130                                                      2057
5260     CONTINUE                                                         2057
C    *                                                                    2057
C    Geant POSITION : ISCL ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2060
C    ENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0 Z = 0.0 <===                 2060
         CALL AGSRESET                                                    2060
         AG_X = 0.0                                                       2060
         AG_Y = 1.0*ISAN_THK/                                             2060
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0       2060
         AG_Z = 0.0                                                       2060
         AG_TITLE = 'ISCL'                                                2060
         AG_EXNAME = 'POSITION'                                           2060
         AG_PARLIST = 'X_Y_Z'                                             2060
         CALL AXPOSITION                                                  2060
C    *                                                                    2060
C    Geant POSITION : ISCL ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2060
C    SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0 Z = 0.0 <===                2060
         CALL AGSRESET                                                    2063
         AG_X = 0.0                                                       2063
         AG_Y = -1.0*ISAN_THK/                                            2063
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0       2063
         AG_Z = 0.0                                                       2063
         AG_TITLE = 'ISCL'                                                2063
         AG_EXNAME = 'POSITION'                                           2063
         AG_PARLIST = 'X_Y_Z'                                             2063
         CALL AXPOSITION                                                  2063
C    *                                                                    2063
* -- Glue layers between hybrid and chip
C    use ISGB bank                                                        2066
         BPATH_ISGB='ISGB*'                                               2066
         IDNUM_ISGB(1)=0                                                  2066
         ISGB_VERSION=1                                                   2066
         CALL AGDGETP('ISTBGEO3','*',-999,'ISGB',NISGB_VERSION,           2066
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     2066
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                2066
C    Create ISLB :                                                        2067
C    Call To Local Procedure ISLB                                         2067
         ASSIGN 5280 TO BLOCK_ISLB                                        2067
         GO TO  5270                                                      2067
5280     CONTINUE                                                         2067
C    *                                                                    2067
C    Geant POSITION : ISLB ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  2070
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  2070
C    _THK+ISGB_THK/2.0 Z = 0.0 <===                                       2070
         CALL AGSRESET                                                    2070
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   2070
         AG_Y = 1.0*ISAN_THK/                                             2070
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          2070
     *   ISGB_THK/2.0                                                     2070
         AG_Z = 0.0                                                       2070
         AG_TITLE = 'ISLB'                                                2070
         AG_EXNAME = 'POSITION'                                           2070
         AG_PARLIST = 'X_Y_Z'                                             2070
         CALL AXPOSITION                                                  2070
C    *                                                                    2070
C    Geant POSITION : ISLB ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  2070
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  2070
C    CU_THK-ISGB_THK/2.0 Z = 0.0 <===                                     2070
         CALL AGSRESET                                                    2073
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  2073
         AG_Y = -1.0*ISAN_THK/                                            2073
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          2073
     *   ISGB_THK/2.0                                                     2073
         AG_Z = 0.0                                                       2073
         AG_TITLE = 'ISLB'                                                2073
         AG_EXNAME = 'POSITION'                                           2073
         AG_PARLIST = 'X_Y_Z'                                             2073
         CALL AXPOSITION                                                  2073
C    *                                                                    2073
* -- Readout chips, put at 2mm from the edge of the sensor
C    use ISCG bank                                                        2076
         BPATH_ISCG='ISCG*'                                               2076
         IDNUM_ISCG(1)=0                                                  2076
         ISCG_VERSION=1                                                   2076
         CALL AGDGETP('ISTBGEO3','*',-999,'ISCG',NISCG_VERSION,           2076
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     2076
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                2076
C    Create ISSC :                                                        2077
C    Call To Local Procedure ISSC                                         2077
         ASSIGN 5300 TO BLOCK_ISSC                                        2077
         GO TO  5290                                                      2077
5300     CONTINUE                                                         2077
C    *                                                                    2077
C    Geant POSITION : ISSC ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  2080
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  2080
C    _THK+ISGB_THK+ISCG_THK/2.0 Z = 0.0 <===                              2080
         CALL AGSRESET                                                    2080
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   2080
         AG_Y = 1.0*ISAN_THK/                                             2080
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          2080
     *   ISGB_THK+ISCG_THK/2.0                                            2080
         AG_Z = 0.0                                                       2080
         AG_TITLE = 'ISSC'                                                2080
         AG_EXNAME = 'POSITION'                                           2080
         AG_PARLIST = 'X_Y_Z'                                             2080
         CALL AXPOSITION                                                  2080
C    *                                                                    2080
C    Geant POSITION : ISSC ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  2080
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  2080
C    CU_THK-ISGB_THK-ISCG_THK/2.0 Z = 0.0 <===                            2080
         CALL AGSRESET                                                    2083
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  2083
         AG_Y = -1.0*ISAN_THK/                                            2083
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          2083
     *   ISGB_THK-ISCG_THK/2.0                                            2083
         AG_Z = 0.0                                                       2083
         AG_TITLE = 'ISSC'                                                2083
         AG_EXNAME = 'POSITION'                                           2083
         AG_PARLIST = 'X_Y_Z'                                             2083
         CALL AXPOSITION                                                  2083
C    *                                                                    2083
5151  CALL AGSPOPB                                                        2083
      GO TO BLOCK_IBLM, (5150 ,5160)                                      2084
C End of Local Procedure                                                  2084
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              2087
C IBSS IS THE SILICON SENSOR                                              2087
5220  CONTINUE                                                            2087
         AG_TITLE='IBSS'                                                  2087
         AG_MODULE=MODULE                                                 2087
         AG_MARK='V00'                                                    2087
         CALL AGSPUSH                                                     2087
         AG_MODULE=MODULE                                                 2087
C    *                                                                    2087
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          2088
         CALL AGSRESET                                                    2088
         AG_TITLE = 'SILICON'                                             2088
         AG_EXNAME = 'MATERIAL'                                           2088
         AG_PARLIST = 'NONE'                                              2088
         CALL AXMATERIAL                                                  2088
C    *                                                                    2088
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         2088
         CALL AGSRESET                                                    2089
         AG_ISVOL = 1                                                     2089
         AG_TITLE = 'SENSITIVE'                                           2089
         AG_EXNAME = 'MATERIAL'                                           2089
         AG_PARLIST = 'ISVOL'                                             2089
         CALL AXMATERIAL                                                  2089
C    *                                                                    2089
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=38 <===                      2091
         CALL AGSRESET                                                    2091
         AG_SEEN = 1                                                      2091
         AG_COLO = 38                                                     2091
         AG_TITLE = 'IBSS'                                                2091
         AG_EXNAME = 'ATTRIBUTE'                                          2091
         AG_PARLIST = 'SEEN_COLO'                                         2091
         CALL AXATTRIBUTE                                                 2091
C    *                                                                    2091
C    Geant SHAPE : BOX ===> DX=ISBG_SENSORWIDTH/2.0 DY=ISBG_SENSORTHK/2.  2095
C    0 DZ = ISBG_SENSORLNGTH/2.0 <===                                     2095
         CALL AGSRESET                                                    2095
         AG_DX = ISBG_SENSORWIDTH/2.0                                     2095
         AG_DY = ISBG_SENSORTHK/2.0                                       2095
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     2095
         AG_TITLE = 'BOX'                                                 2095
         AG_EXNAME = 'SHAPE'                                              2095
         AG_PARLIST = 'DX_DY_DZ'                                          2095
         CALL AXSHAPE                                                     2095
C    *                                                                    2095
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  2099
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  2099
C    ,0.001)                                                              2099
         AG_TITLE = 'IBSS'                                                2099
         AG_EXNAME = 'HITS'                                               2099
         AG_TYPE=AG_MAGIC                                                 2099
         CALL AGSDETV('IBSS')                                             2099
C    *                                                                    2099
         AG_PARLIST='Z'                                                   2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = AG_MAGIC                                              2099
         AG_BIN=.001                                                      2099
         AG_OPTION='S'                                                    2099
         AG_FHMIN = AG_MAGIC                                              2099
         AG_FHMAX = AG_MAGIC                                              2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='Y'                                                   2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = AG_MAGIC                                              2099
         AG_BIN=.001                                                      2099
         AG_FHMIN=AG_MAGIC                                                2099
         AG_FHMAX=AG_MAGIC                                                2099
         AG_OPTION='*'                                                    2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='X'                                                   2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = AG_MAGIC                                              2099
         AG_BIN=.001                                                      2099
         AG_FHMIN=AG_MAGIC                                                2099
         AG_FHMAX=AG_MAGIC                                                2099
         AG_OPTION='*'                                                    2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='PTOT'                                                2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = 16                                                    2099
         AG_BIN=AG_MAGIC                                                  2099
         AG_OPTION='*'                                                    2099
         AG_FHMIN = 0                                                     2099
         AG_FHMAX = 100                                                   2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='CX'                                                  2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = 10                                                    2099
         AG_BIN=AG_MAGIC                                                  2099
         AG_FHMIN=AG_MAGIC                                                2099
         AG_FHMAX=AG_MAGIC                                                2099
         AG_OPTION='*'                                                    2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='CY'                                                  2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = 10                                                    2099
         AG_BIN=AG_MAGIC                                                  2099
         AG_FHMIN=AG_MAGIC                                                2099
         AG_FHMAX=AG_MAGIC                                                2099
         AG_OPTION='*'                                                    2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='CZ'                                                  2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = 10                                                    2099
         AG_BIN=AG_MAGIC                                                  2099
         AG_FHMIN=AG_MAGIC                                                2099
         AG_FHMAX=AG_MAGIC                                                2099
         AG_OPTION='*'                                                    2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='SLENG'                                               2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = 16                                                    2099
         AG_BIN=AG_MAGIC                                                  2099
         AG_OPTION='*'                                                    2099
         AG_FHMIN = 0                                                     2099
         AG_FHMAX = 500                                                   2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='TOF'                                                 2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = 16                                                    2099
         AG_BIN=AG_MAGIC                                                  2099
         AG_OPTION='*'                                                    2099
         AG_FHMIN = 0                                                     2099
         AG_FHMAX = 1.E-6                                                 2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='STEP'                                                2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = AG_MAGIC                                              2099
         AG_BIN=.01                                                       2099
         AG_FHMIN=AG_MAGIC                                                2099
         AG_FHMAX=AG_MAGIC                                                2099
         AG_OPTION='*'                                                    2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         AG_PARLIST='ELOSS'                                               2099
         AG_TITLE = 'DETH'                                                2099
         AG_NBITS = 16                                                    2099
         AG_BIN=AG_MAGIC                                                  2099
         AG_OPTION='*'                                                    2099
         AG_FHMIN = 0                                                     2099
         AG_FHMAX = 0.001                                                 2099
         CALL AGSDETH (0)                                                 2099
C    *                                                                    2099
         CALL AGSDETU('IBSS')                                             2099
C    *                                                                    2099
5221  CALL AGSPOPB                                                        2101
      GO TO BLOCK_IBSS, (5220 ,5230)                                      2101
C End of Local Procedure                                                  2101
* -----------------------------------------------------------------------------
C Begin Local Procedure ISKH                                              2104
C ISKH IS THE KAPTON HYBRID                                               2104
5110  CONTINUE                                                            2104
         AG_TITLE='ISKH'                                                  2104
         AG_MODULE=MODULE                                                 2104
         AG_MARK='V00'                                                    2104
         CALL AGSPUSH                                                     2104
         AG_MODULE=MODULE                                                 2104
C    *                                                                    2104
C    Geant ATTRIBUTE : ISKH ===> SEEN=1 COLO=42 <===                      2105
         CALL AGSRESET                                                    2105
         AG_SEEN = 1                                                      2105
         AG_COLO = 42                                                     2105
         AG_TITLE = 'ISKH'                                                2105
         AG_EXNAME = 'ATTRIBUTE'                                          2105
         AG_PARLIST = 'SEEN_COLO'                                         2105
         CALL AXATTRIBUTE                                                 2105
C    *                                                                    2105
C    KAPTON C22-H10-N2-O4                                                 2107
C    Geant COMPONENT : C ===> A=12 Z=6 W=22.0*12.0/366.0 <===             2108
         CALL AGSRESET                                                    2108
         AG_A = 12                                                        2108
         AG_Z = 6                                                         2108
         AG_W = 22.0*12.0/366.0                                           2108
         AG_TITLE = 'C'                                                   2108
         AG_EXNAME = 'COMPONENT'                                          2108
         AG_PARLIST = 'A_Z_W'                                             2108
         CALL AXCOMPONENT                                                 2108
C    *                                                                    2108
C    Geant COMPONENT : H ===> A=1 Z=1 W=10.0*1.0/366.0 <===               2108
         CALL AGSRESET                                                    2109
         AG_A = 1                                                         2109
         AG_Z = 1                                                         2109
         AG_W = 10.0*1.0/366.0                                            2109
         AG_TITLE = 'H'                                                   2109
         AG_EXNAME = 'COMPONENT'                                          2109
         AG_PARLIST = 'A_Z_W'                                             2109
         CALL AXCOMPONENT                                                 2109
C    *                                                                    2109
C    Geant COMPONENT : N ===> A=14 Z=7 W=2.0*14.0/366.0 <===              2109
         CALL AGSRESET                                                    2110
         AG_A = 14                                                        2110
         AG_Z = 7                                                         2110
         AG_W = 2.0*14.0/366.0                                            2110
         AG_TITLE = 'N'                                                   2110
         AG_EXNAME = 'COMPONENT'                                          2110
         AG_PARLIST = 'A_Z_W'                                             2110
         CALL AXCOMPONENT                                                 2110
C    *                                                                    2110
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/366.0 <===              2110
         CALL AGSRESET                                                    2111
         AG_A = 16                                                        2111
         AG_Z = 8                                                         2111
         AG_W = 4.0*16.0/366.0                                            2111
         AG_TITLE = 'O'                                                   2111
         AG_EXNAME = 'COMPONENT'                                          2111
         AG_PARLIST = 'A_Z_W'                                             2111
         CALL AXCOMPONENT                                                 2111
C    *                                                                    2111
C    Geant MIXTURE : KAPTON ===> DENS=1.42 <===                           2111
         CALL AGSRESET                                                    2112
         AG_DENS = 1.42                                                   2112
         AG_TITLE = 'KAPTON'                                              2112
         AG_EXNAME = 'MIXTURE'                                            2112
         AG_PARLIST = 'DENS'                                              2112
         CALL AXMIXTURE                                                   2112
C    *                                                                    2112
C    Geant SHAPE : BOX ===> DX=ISHY_H/2.0 DY=ISHY_THK/2.0 DZ = ISHY_W/2.  2116
C    0 <===                                                               2116
         CALL AGSRESET                                                    2116
         AG_DX = ISHY_H/2.0                                               2116
         AG_DY = ISHY_THK/2.0                                             2116
         AG_DZ = ISHY_W/2.0                                               2116
         AG_TITLE = 'BOX'                                                 2116
         AG_EXNAME = 'SHAPE'                                              2116
         AG_PARLIST = 'DX_DY_DZ'                                          2116
         CALL AXSHAPE                                                     2116
C    *                                                                    2116
5111  CALL AGSPOPB                                                        2118
      GO TO BLOCK_ISKH, (5110 ,5120,5250)                                 2118
C End of Local Procedure                                                  2118
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCL                                              2121
C ISCL IS THE COPPER LAYER ON THE KAPTON HYBRID                           2121
5130  CONTINUE                                                            2121
         AG_TITLE='ISCL'                                                  2121
         AG_MODULE=MODULE                                                 2121
         AG_MARK='V00'                                                    2121
         CALL AGSPUSH                                                     2121
         AG_MODULE=MODULE                                                 2121
C    *                                                                    2121
C    Geant ATTRIBUTE : ISCL ===> SEEN=1 COLO=46 <===                      2122
         CALL AGSRESET                                                    2122
         AG_SEEN = 1                                                      2122
         AG_COLO = 46                                                     2122
         AG_TITLE = 'ISCL'                                                2122
         AG_EXNAME = 'ATTRIBUTE'                                          2122
         AG_PARLIST = 'SEEN_COLO'                                         2122
         CALL AXATTRIBUTE                                                 2122
C    *                                                                    2122
C    Geant MATERIAL : COPPER ===> inherited arguments used <===           2124
         CALL AGSRESET                                                    2124
         AG_TITLE = 'COPPER'                                              2124
         AG_EXNAME = 'MATERIAL'                                           2124
         AG_PARLIST = 'NONE'                                              2124
         CALL AXMATERIAL                                                  2124
C    *                                                                    2124
C    Geant SHAPE : BOX ===> DX=ISCU_H/2.0 DY=ISCU_THK/2.0 DZ = ISCU_W/2.  2128
C    0 <===                                                               2128
         CALL AGSRESET                                                    2128
         AG_DX = ISCU_H/2.0                                               2128
         AG_DY = ISCU_THK/2.0                                             2128
         AG_DZ = ISCU_W/2.0                                               2128
         AG_TITLE = 'BOX'                                                 2128
         AG_EXNAME = 'SHAPE'                                              2128
         AG_PARLIST = 'DX_DY_DZ'                                          2128
         CALL AXSHAPE                                                     2128
C    *                                                                    2128
5131  CALL AGSPOPB                                                        2130
      GO TO BLOCK_ISCL, (5130 ,5140,5260)                                 2130
C End of Local Procedure                                                  2130
* -----------------------------------------------------------------------------
C Begin Local Procedure ISTP                                              2133
C ISTP IS THE CARBON FOAM                                                 2133
5180  CONTINUE                                                            2133
         AG_TITLE='ISTP'                                                  2133
         AG_MODULE=MODULE                                                 2133
         AG_MARK='V00'                                                    2133
         CALL AGSPUSH                                                     2133
         AG_MODULE=MODULE                                                 2133
C    *                                                                    2133
C    Geant ATTRIBUTE : ISTP ===> SEEN=1 COLO=1 <===                       2134
         CALL AGSRESET                                                    2134
         AG_SEEN = 1                                                      2134
         AG_COLO = 1                                                      2134
         AG_TITLE = 'ISTP'                                                2134
         AG_EXNAME = 'ATTRIBUTE'                                          2134
         AG_PARLIST = 'SEEN_COLO'                                         2134
         CALL AXATTRIBUTE                                                 2134
C    *                                                                    2134
C    CARBON FOAM DENSITY 0.24                                             2136
C    0.1 COMES FROM 4-5% OF CARBON DENSITY FOR CARBON FOAM                2137
C    0.24 IS WHEN WE ARTICIALLY INCREASE THE DENSITY TO SQUEEZE INTO 1.6  2138
C    86 MM                                                                2138
C    BETWEEN THE SENSORS                                                  2139
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        2140
         CALL AGSRESET                                                    2140
         AG_A = 12                                                        2140
         AG_Z = 6                                                         2140
         AG_W = 0.05                                                      2140
         AG_TITLE = 'C'                                                   2140
         AG_EXNAME = 'COMPONENT'                                          2140
         AG_PARLIST = 'A_Z_W'                                             2140
         CALL AXCOMPONENT                                                 2140
C    *                                                                    2140
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        2140
         CALL AGSRESET                                                    2141
         AG_A = 14                                                        2141
         AG_Z = 7                                                         2141
         AG_W = 0.95                                                      2141
         AG_TITLE = 'N'                                                   2141
         AG_EXNAME = 'COMPONENT'                                          2141
         AG_PARLIST = 'A_Z_W'                                             2141
         CALL AXCOMPONENT                                                 2141
C    *                                                                    2141
C    Geant MIXTURE : CFOAM ===> DENS=0.24 <===                            2141
         CALL AGSRESET                                                    2142
         AG_DENS = 0.24                                                   2142
         AG_TITLE = 'CFOAM'                                               2142
         AG_EXNAME = 'MIXTURE'                                            2142
         AG_PARLIST = 'DENS'                                              2142
         CALL AXMIXTURE                                                   2142
C    *                                                                    2142
C    Geant SHAPE : BOX ===> DX=ISAN_H/2.0 DY=ISAN_THK/2.0 DZ = ISAN_W/2.  2146
C    0 <===                                                               2146
         CALL AGSRESET                                                    2146
         AG_DX = ISAN_H/2.0                                               2146
         AG_DY = ISAN_THK/2.0                                             2146
         AG_DZ = ISAN_W/2.0                                               2146
         AG_TITLE = 'BOX'                                                 2146
         AG_EXNAME = 'SHAPE'                                              2146
         AG_PARLIST = 'DX_DY_DZ'                                          2146
         CALL AXSHAPE                                                     2146
C    *                                                                    2146
5181  CALL AGSPOPB                                                        2148
      GO TO BLOCK_ISTP, (5180 ,5190)                                      2148
C End of Local Procedure                                                  2148
* -----------------------------------------------------------------------------
C Begin Local Procedure ISSC                                              2151
C ISSC IS THE READOUT CHIP                                                2151
5290  CONTINUE                                                            2151
         AG_TITLE='ISSC'                                                  2151
         AG_MODULE=MODULE                                                 2151
         AG_MARK='V00'                                                    2151
         CALL AGSPUSH                                                     2151
         AG_MODULE=MODULE                                                 2151
C    *                                                                    2151
C    Geant ATTRIBUTE : ISSC ===> SEEN=1 COLO=37 <===                      2152
         CALL AGSRESET                                                    2152
         AG_SEEN = 1                                                      2152
         AG_COLO = 37                                                     2152
         AG_TITLE = 'ISSC'                                                2152
         AG_EXNAME = 'ATTRIBUTE'                                          2152
         AG_PARLIST = 'SEEN_COLO'                                         2152
         CALL AXATTRIBUTE                                                 2152
C    *                                                                    2152
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          2154
         CALL AGSRESET                                                    2154
         AG_TITLE = 'SILICON'                                             2154
         AG_EXNAME = 'MATERIAL'                                           2154
         AG_PARLIST = 'NONE'                                              2154
         CALL AXMATERIAL                                                  2154
C    *                                                                    2154
C    Geant SHAPE : BOX ===> DX=ISCG_W/2.0 DY=ISCG_THK/2.0 DZ = ISCG_H/2.  2158
C    0 <===                                                               2158
         CALL AGSRESET                                                    2158
         AG_DX = ISCG_W/2.0                                               2158
         AG_DY = ISCG_THK/2.0                                             2158
         AG_DZ = ISCG_H/2.0                                               2158
         AG_TITLE = 'BOX'                                                 2158
         AG_EXNAME = 'SHAPE'                                              2158
         AG_PARLIST = 'DX_DY_DZ'                                          2158
         CALL AXSHAPE                                                     2158
C    *                                                                    2158
5291  CALL AGSPOPB                                                        2160
      GO TO BLOCK_ISSC, (5290 ,5300)                                      2160
C End of Local Procedure                                                  2160
* -----------------------------------------------------------------------------
C Begin Local Procedure ISXA                                              2163
C ISXA IS THE LARGE GLUE LAYER BETWEEN CARBON FOAM AND SENSOR (AND SENSO  2163
C R AND HYBRID)                                                           2163
5200  CONTINUE                                                            2163
         AG_TITLE='ISXA'                                                  2163
         AG_MODULE=MODULE                                                 2163
         AG_MARK='V00'                                                    2163
         CALL AGSPUSH                                                     2163
         AG_MODULE=MODULE                                                 2163
C    *                                                                    2163
C    Geant ATTRIBUTE : ISXA ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      2164
         CALL AGSRESET                                                    2164
         AG_SEEN = 1                                                      2164
         AG_COLO = 11                                                     2164
         AG_SERIAL = ISTLAYER                                             2164
         AG_TITLE = 'ISXA'                                                2164
         AG_EXNAME = 'ATTRIBUTE'                                          2164
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  2164
         CALL AXATTRIBUTE                                                 2164
C    *                                                                    2164
C    EPOXY C8-H14-O4                                                      2166
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              2167
         CALL AGSRESET                                                    2167
         AG_A = 12                                                        2167
         AG_Z = 6                                                         2167
         AG_W = 8.0*12.0/174.0                                            2167
         AG_TITLE = 'C'                                                   2167
         AG_EXNAME = 'COMPONENT'                                          2167
         AG_PARLIST = 'A_Z_W'                                             2167
         CALL AXCOMPONENT                                                 2167
C    *                                                                    2167
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               2167
         CALL AGSRESET                                                    2168
         AG_A = 1                                                         2168
         AG_Z = 1                                                         2168
         AG_W = 14.0*1.0/174.0                                            2168
         AG_TITLE = 'H'                                                   2168
         AG_EXNAME = 'COMPONENT'                                          2168
         AG_PARLIST = 'A_Z_W'                                             2168
         CALL AXCOMPONENT                                                 2168
C    *                                                                    2168
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              2168
         CALL AGSRESET                                                    2169
         AG_A = 16                                                        2169
         AG_Z = 8                                                         2169
         AG_W = 4.0*16.0/174.0                                            2169
         AG_TITLE = 'O'                                                   2169
         AG_EXNAME = 'COMPONENT'                                          2169
         AG_PARLIST = 'A_Z_W'                                             2169
         CALL AXCOMPONENT                                                 2169
C    *                                                                    2169
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             2169
         CALL AGSRESET                                                    2170
         AG_DENS = 1.3                                                    2170
         AG_TITLE = 'EPOXY'                                               2170
         AG_EXNAME = 'MIXTURE'                                            2170
         AG_PARLIST = 'DENS'                                              2170
         CALL AXMIXTURE                                                   2170
C    *                                                                    2170
C    Geant SHAPE : BOX ===> DX=ISGA_W/2.0 DY=ISGA_THK/2.0 DZ = ISGA_H/2.  2174
C    0 <===                                                               2174
         CALL AGSRESET                                                    2174
         AG_DX = ISGA_W/2.0                                               2174
         AG_DY = ISGA_THK/2.0                                             2174
         AG_DZ = ISGA_H/2.0                                               2174
         AG_TITLE = 'BOX'                                                 2174
         AG_EXNAME = 'SHAPE'                                              2174
         AG_PARLIST = 'DX_DY_DZ'                                          2174
         CALL AXSHAPE                                                     2174
C    *                                                                    2174
5201  CALL AGSPOPB                                                        2176
      GO TO BLOCK_ISXA, (5200 ,5210,5240)                                 2176
C End of Local Procedure                                                  2176
* -----------------------------------------------------------------------------
C Begin Local Procedure ISLB                                              2179
C ISLB IS THE SMALL GLUE LAYER BETWEEN HYBRID AND CHIP                    2179
5270  CONTINUE                                                            2179
         AG_TITLE='ISLB'                                                  2179
         AG_MODULE=MODULE                                                 2179
         AG_MARK='V00'                                                    2179
         CALL AGSPUSH                                                     2179
         AG_MODULE=MODULE                                                 2179
C    *                                                                    2179
C    Geant ATTRIBUTE : ISLB ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      2180
         CALL AGSRESET                                                    2180
         AG_SEEN = 1                                                      2180
         AG_COLO = 11                                                     2180
         AG_SERIAL = ISTLAYER                                             2180
         AG_TITLE = 'ISLB'                                                2180
         AG_EXNAME = 'ATTRIBUTE'                                          2180
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  2180
         CALL AXATTRIBUTE                                                 2180
C    *                                                                    2180
C    EPOXY C8-H14-O4                                                      2182
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              2183
         CALL AGSRESET                                                    2183
         AG_A = 12                                                        2183
         AG_Z = 6                                                         2183
         AG_W = 8.0*12.0/174.0                                            2183
         AG_TITLE = 'C'                                                   2183
         AG_EXNAME = 'COMPONENT'                                          2183
         AG_PARLIST = 'A_Z_W'                                             2183
         CALL AXCOMPONENT                                                 2183
C    *                                                                    2183
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               2183
         CALL AGSRESET                                                    2184
         AG_A = 1                                                         2184
         AG_Z = 1                                                         2184
         AG_W = 14.0*1.0/174.0                                            2184
         AG_TITLE = 'H'                                                   2184
         AG_EXNAME = 'COMPONENT'                                          2184
         AG_PARLIST = 'A_Z_W'                                             2184
         CALL AXCOMPONENT                                                 2184
C    *                                                                    2184
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              2184
         CALL AGSRESET                                                    2185
         AG_A = 16                                                        2185
         AG_Z = 8                                                         2185
         AG_W = 4.0*16.0/174.0                                            2185
         AG_TITLE = 'O'                                                   2185
         AG_EXNAME = 'COMPONENT'                                          2185
         AG_PARLIST = 'A_Z_W'                                             2185
         CALL AXCOMPONENT                                                 2185
C    *                                                                    2185
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             2185
         CALL AGSRESET                                                    2186
         AG_DENS = 1.3                                                    2186
         AG_TITLE = 'EPOXY'                                               2186
         AG_EXNAME = 'MIXTURE'                                            2186
         AG_PARLIST = 'DENS'                                              2186
         CALL AXMIXTURE                                                   2186
C    *                                                                    2186
C    Geant SHAPE : BOX ===> DX=ISGB_W/2.0 DY=ISGB_THK/2.0 DZ = ISGB_H/2.  2190
C    0 <===                                                               2190
         CALL AGSRESET                                                    2190
         AG_DX = ISGB_W/2.0                                               2190
         AG_DY = ISGB_THK/2.0                                             2190
         AG_DZ = ISGB_H/2.0                                               2190
         AG_TITLE = 'BOX'                                                 2190
         AG_EXNAME = 'SHAPE'                                              2190
         AG_PARLIST = 'DX_DY_DZ'                                          2190
         CALL AXSHAPE                                                     2190
C    *                                                                    2190
5271  CALL AGSPOPB                                                        2192
      GO TO BLOCK_ISLB, (5270 ,5280)                                      2192
C End of Local Procedure                                                  2192
* -----------------------------------------------------------------------------
C Begin Local Procedure ISRI                                              2195
C ISRI IS THE SUPPORT RING FOR THE LAYERS                                 2195
5090  CONTINUE                                                            2195
         AG_TITLE='ISRI'                                                  2195
         AG_MODULE=MODULE                                                 2195
         AG_MARK='V00'                                                    2195
         CALL AGSPUSH                                                     2195
         AG_MODULE=MODULE                                                 2195
C    *                                                                    2195
C    Geant ATTRIBUTE : ISRA ===> SEEN=1 COLO=3 <===                       2196
         CALL AGSRESET                                                    2196
         AG_SEEN = 1                                                      2196
         AG_COLO = 3                                                      2196
         AG_TITLE = 'ISRA'                                                2196
         AG_EXNAME = 'ATTRIBUTE'                                          2196
         AG_PARLIST = 'SEEN_COLO'                                         2196
         CALL AXATTRIBUTE                                                 2196
C    *                                                                    2196
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        2198
         CALL AGSRESET                                                    2198
         AG_A = 12                                                        2198
         AG_Z = 6                                                         2198
         AG_W = 0.05                                                      2198
         AG_TITLE = 'C'                                                   2198
         AG_EXNAME = 'COMPONENT'                                          2198
         AG_PARLIST = 'A_Z_W'                                             2198
         CALL AXCOMPONENT                                                 2198
C    *                                                                    2198
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        2198
         CALL AGSRESET                                                    2199
         AG_A = 14                                                        2199
         AG_Z = 7                                                         2199
         AG_W = 0.95                                                      2199
         AG_TITLE = 'N'                                                   2199
         AG_EXNAME = 'COMPONENT'                                          2199
         AG_PARLIST = 'A_Z_W'                                             2199
         CALL AXCOMPONENT                                                 2199
C    *                                                                    2199
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            2199
         CALL AGSRESET                                                    2200
         AG_DENS = 0.10                                                   2200
         AG_TITLE = 'CFOAM'                                               2200
         AG_EXNAME = 'MIXTURE'                                            2200
         AG_PARLIST = 'DENS'                                              2200
         CALL AXMIXTURE                                                   2200
C    *                                                                    2200
C    Geant SHAPE : TUBE ===> RMIN=ISRR_RIN RMAX=ISRR_ROUT DZ = ISRR_LENG  2204
C    TH/2.0 <===                                                          2204
         CALL AGSRESET                                                    2204
         AG_RMIN = ISRR_RIN                                               2204
         AG_RMAX = ISRR_ROUT                                              2204
         AG_DZ = ISRR_LENGTH/2.0                                          2204
         AG_TITLE = 'TUBE'                                                2204
         AG_EXNAME = 'SHAPE'                                              2204
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      2204
         CALL AXSHAPE                                                     2204
C    *                                                                    2204
5091  CALL AGSPOPB                                                        2206
      GO TO BLOCK_ISRI, (5090 ,5100)                                      2206
C End of Local Procedure                                                  2206
* -----------------------------------------------------------------------------
* -------------------------------------------------------
      END                                                                 2212
* $Id: istbgeo4.g,v 1.1 2006/12/18 02:35:41 potekhin Exp $
* $Log: istbgeo4.g,v $
* Revision 1.1  2006/12/18 02:35:41  potekhin
* Mid layer only, at 9.5cm
*
*****************************************************************
* HFT+IST1+SSD configuration
*****************************************************************
      SUBROUTINE ISTBGEO4                                                 2221
C ISTBGEO4 IS THE GEOMETRY OF THE INNER SILICON TRACKER                   2221
      IMPLICIT NONE                                                       2221
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       2221
      DATA MODULE/'ISTBGEO4'/, BANK_TITLE/'*'/                            2221
      DATA MCOMMENT/'IS THE GEOMETRY OF THE INNER SILICON TRACKER'/       2221
      LOGICAL FIRST                                                       2221
      DATA FIRST/.TRUE./                                                  2221
      SAVE FIRST                                                          2221
      INTEGER JUMPAD                                                      2221
      EXTERNAL JUMPAD                                                     2221
      INTEGER OK                                                          2221
      PARAMETER (OK=0)                                                    2221
      INTEGER AG_I,AG_J                                                   2221
      SAVE AG_I,AG_J                                                      2221
C CREATED 12/12/06                                                        2221
      DATA AG_I/0/,AG_J/0/                                                2222
      CHARACTER*40 CREATED /'12/12/06'/                                   2222
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  2222
C AUTHOR GERRIT VAN NIEUWENHUIZEN                                         2222
      CHARACTER*40 AUTHOR /'GERRIT VAN NIEUWENHUIZEN'/                    2223
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  2223
*****************************************************************
C - Advanced Geant interface                                              2225
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      2225
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       2225
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         2225
     *AG_OPTION,AG_ORT,AG_MARK                                            2225
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         2225
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     2225
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     2225
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    2225
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          2225
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   2225
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     2225
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        2225
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   2225
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 2225
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     2225
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       2225
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        2225
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       2225
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       2225
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       2225
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         2225
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     2225
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       2225
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   2225
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       2225
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     2225
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          2225
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         2225
     *-696969,AG_LDETU=250)                                               2225
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    2225
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  2225
     *AG_IMFLD,AG_ISIMU                                                   2225
C Inherited variables a: saved during internal calls                      2225
C b: reset at the entry in a block and then saved                         2225
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        2225
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       2225
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         2225
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     2225
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       2225
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         2225
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           2225
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        2225
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        2225
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            2225
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           2225
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    2225
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      2225
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           2225
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          2225
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                2225
C local variables valid inside same block                                 2225
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       2225
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  2225
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         2225
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    2225
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          2225
     *AG_OPTION                                                           2225
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        2225
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             2225
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              2225
C temporarly                                                              2225
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           2225
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    2225
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       2225
     *AG_HY)                                                              2225
      REAL MIL_P,INCH_P                                                   2225
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               2225
C - GEANT description of logical units                                    2225
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            2225
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      2225
      COMMON/GCMAIL/ CHMAIL                                               2225
      CHARACTER*132 CHMAIL                                                2225
* ---
      REAL ANGLE, ANGLEPOS, ANGLECORR, TRUER, RADDEG, RLAD                2227
      INTEGER NL, LY, NU, CABLE, ISTLAYER                                 2228
      REAL MOD_THK                                                        2229
* ---
      INTEGER BLOCK_IBMO                                                  2233
      INTEGER BLOCK_IBLM                                                  2233
      INTEGER BLOCK_IBAM                                                  2233
      INTEGER BLOCK_IBSS                                                  2233
      INTEGER BLOCK_ISTP                                                  2233
      INTEGER BLOCK_ISKH                                                  2233
      INTEGER BLOCK_ISCL                                                  2233
      INTEGER BLOCK_ISSC                                                  2233
      INTEGER BLOCK_ISXA                                                  2233
      INTEGER BLOCK_ISLB                                                  2233
      INTEGER BLOCK_ISRI                                                  2233
      INTEGER BLOCK_ISCO                                                  2233
      INTEGER BLOCK_IBMY                                                  2233
C -                                                                       2235
      REAL ISMG_LAYER                                                     2235
      EQUIVALENCE (BANK_ISMG(3),ISMG_LAYER,RE_ISMG_LAYER),                2235
     *(NAMES_ISMG(1),NISMG_LAYER)                                         2235
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_LAYER),(MAP_ISMG(1,1),            2235
     *MISMG_LAYER)                                                        2235
      CHARACTER CISMG_LAYER*40/' '/                                       2235
      CHARACTER NISMG_LAYER*12/'R.LAYER'/                                 2235
      INTEGER MISMG_LAYER(2)/1,1/                                         2235
      REAL RE_ISMG_LAYER                                                  2235
C -                                                                       2235
      REAL ISMG_RIN                                                       2235
      EQUIVALENCE (BANK_ISMG(4),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(2),     2235
     *NISMG_RIN)                                                          2235
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_RIN),(MAP_ISMG(1,2),MISMG_RIN)    2235
      CHARACTER CISMG_RIN*40/' '/                                         2235
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     2235
      INTEGER MISMG_RIN(2)/1,1/                                           2235
      REAL RE_ISMG_RIN                                                    2235
C -                                                                       2235
      REAL ISMG_ROUT                                                      2235
      EQUIVALENCE (BANK_ISMG(5),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(3),   2235
     *NISMG_ROUT)                                                         2235
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_ROUT),(MAP_ISMG(1,3),             2235
     *MISMG_ROUT)                                                         2235
      CHARACTER CISMG_ROUT*40/' '/                                        2235
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   2235
      INTEGER MISMG_ROUT(2)/1,1/                                          2235
      REAL RE_ISMG_ROUT                                                   2235
C -                                                                       2235
      REAL ISMG_TOTALLENGTH                                               2235
      EQUIVALENCE (BANK_ISMG(6),ISMG_TOTALLENGTH,RE_ISMG_TOTALLENGTH),    2235
     *(NAMES_ISMG(4),NISMG_TOTALLENGTH)                                   2235
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_TOTALLENGTH),(MAP_ISMG(1,4),      2235
     *MISMG_TOTALLENGTH)                                                  2235
      CHARACTER CISMG_TOTALLENGTH*40/' '/                                 2235
      CHARACTER NISMG_TOTALLENGTH*12/'R.TOTALLENGTH'/                     2235
      INTEGER MISMG_TOTALLENGTH(2)/1,1/                                   2235
      REAL RE_ISMG_TOTALLENGTH                                            2235
C -                                                                       2235
      REAL ISMG_CODE                                                      2235
      EQUIVALENCE (BANK_ISMG(7),ISMG_CODE,RE_ISMG_CODE),(NAMES_ISMG(5),   2235
     *NISMG_CODE)                                                         2235
      EQUIVALENCE (COMMEN_ISMG(5),CISMG_CODE),(MAP_ISMG(1,5),             2235
     *MISMG_CODE)                                                         2235
      CHARACTER CISMG_CODE*40/' '/                                        2235
      CHARACTER NISMG_CODE*12/'R.CODE'/                                   2235
      INTEGER MISMG_CODE(2)/1,1/                                          2235
      REAL RE_ISMG_CODE                                                   2235
C -                                                                       2235
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                2235
      PARAMETER (LEN_ISMG=7)                                              2235
      PARAMETER (LLEN_ISMG=5)                                             2235
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           2235
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        2235
      DATA IDNUM_ISMG/10*0/                                               2235
      REAL BANK_ISMG(LEN_ISMG)                                            2235
      CHARACTER*60 BPATH_ISMG/' '/                                        2235
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          2235
     *BPATH_ISMG                                                          2235
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             2235
C *                                                                       2235
C -                                                                       2239
      REAL ISBG_LAYER                                                     2239
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                2239
     *(NAMES_ISBG(1),NISBG_LAYER)                                         2239
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            2239
     *MISBG_LAYER)                                                        2239
      CHARACTER CISBG_LAYER*40/' '/                                       2239
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 2239
      INTEGER MISBG_LAYER(2)/1,1/                                         2239
      REAL RE_ISBG_LAYER                                                  2239
C -                                                                       2239
      REAL ISBG_NLADDER                                                   2239
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            2239
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       2239
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          2239
     *MISBG_NLADDER)                                                      2239
      CHARACTER CISBG_NLADDER*40/' '/                                     2239
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             2239
      INTEGER MISBG_NLADDER(2)/1,1/                                       2239
      REAL RE_ISBG_NLADDER                                                2239
C -                                                                       2239
      REAL ISBG_NUNIT                                                     2239
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                2239
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         2239
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            2239
     *MISBG_NUNIT)                                                        2239
      CHARACTER CISBG_NUNIT*40/' '/                                       2239
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 2239
      INTEGER MISBG_NUNIT(2)/1,1/                                         2239
      REAL RE_ISBG_NUNIT                                                  2239
C -                                                                       2239
      REAL ISBG_LENGTH                                                    2239
      EQUIVALENCE (BANK_ISBG(6),ISBG_LENGTH,RE_ISBG_LENGTH),              2239
     *(NAMES_ISBG(4),NISBG_LENGTH)                                        2239
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_LENGTH),(MAP_ISBG(1,4),           2239
     *MISBG_LENGTH)                                                       2239
      CHARACTER CISBG_LENGTH*40/' '/                                      2239
      CHARACTER NISBG_LENGTH*12/'R.LENGTH'/                               2239
      INTEGER MISBG_LENGTH(2)/1,1/                                        2239
      REAL RE_ISBG_LENGTH                                                 2239
C -                                                                       2239
      REAL ISBG_LADDERWIDTH                                               2239
      EQUIVALENCE (BANK_ISBG(7),ISBG_LADDERWIDTH,RE_ISBG_LADDERWIDTH),    2239
     *(NAMES_ISBG(5),NISBG_LADDERWIDTH)                                   2239
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_LADDERWIDTH),(MAP_ISBG(1,5),      2239
     *MISBG_LADDERWIDTH)                                                  2239
      CHARACTER CISBG_LADDERWIDTH*40/' '/                                 2239
      CHARACTER NISBG_LADDERWIDTH*12/'R.LADDERWIDTH'/                     2239
      INTEGER MISBG_LADDERWIDTH(2)/1,1/                                   2239
      REAL RE_ISBG_LADDERWIDTH                                            2239
C -                                                                       2239
      REAL ISBG_LADDERTHK                                                 2239
      EQUIVALENCE (BANK_ISBG(8),ISBG_LADDERTHK,RE_ISBG_LADDERTHK),        2239
     *(NAMES_ISBG(6),NISBG_LADDERTHK)                                     2239
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_LADDERTHK),(MAP_ISBG(1,6),        2239
     *MISBG_LADDERTHK)                                                    2239
      CHARACTER CISBG_LADDERTHK*40/' '/                                   2239
      CHARACTER NISBG_LADDERTHK*12/'R.LADDERTHK'/                         2239
      INTEGER MISBG_LADDERTHK(2)/1,1/                                     2239
      REAL RE_ISBG_LADDERTHK                                              2239
C -                                                                       2239
      REAL ISBG_SENSATHK                                                  2239
      EQUIVALENCE (BANK_ISBG(9),ISBG_SENSATHK,RE_ISBG_SENSATHK),          2239
     *(NAMES_ISBG(7),NISBG_SENSATHK)                                      2239
      EQUIVALENCE (COMMEN_ISBG(7),CISBG_SENSATHK),(MAP_ISBG(1,7),         2239
     *MISBG_SENSATHK)                                                     2239
      CHARACTER CISBG_SENSATHK*40/' '/                                    2239
      CHARACTER NISBG_SENSATHK*12/'R.SENSATHK'/                           2239
      INTEGER MISBG_SENSATHK(2)/1,1/                                      2239
      REAL RE_ISBG_SENSATHK                                               2239
C -                                                                       2239
      REAL ISBG_SPACING                                                   2239
      EQUIVALENCE (BANK_ISBG(10),ISBG_SPACING,RE_ISBG_SPACING),           2239
     *(NAMES_ISBG(8),NISBG_SPACING)                                       2239
      EQUIVALENCE (COMMEN_ISBG(8),CISBG_SPACING),(MAP_ISBG(1,8),          2239
     *MISBG_SPACING)                                                      2239
      CHARACTER CISBG_SPACING*40/' '/                                     2239
      CHARACTER NISBG_SPACING*12/'R.SPACING'/                             2239
      INTEGER MISBG_SPACING(2)/1,1/                                       2239
      REAL RE_ISBG_SPACING                                                2239
C -                                                                       2239
      REAL ISBG_SENSORWIDTH                                               2239
      EQUIVALENCE (BANK_ISBG(11),ISBG_SENSORWIDTH,RE_ISBG_SENSORWIDTH),   2239
     *(NAMES_ISBG(9),NISBG_SENSORWIDTH)                                   2239
      EQUIVALENCE (COMMEN_ISBG(9),CISBG_SENSORWIDTH),(MAP_ISBG(1,9),      2239
     *MISBG_SENSORWIDTH)                                                  2239
      CHARACTER CISBG_SENSORWIDTH*40/' '/                                 2239
      CHARACTER NISBG_SENSORWIDTH*12/'R.SENSORWIDTH'/                     2239
      INTEGER MISBG_SENSORWIDTH(2)/1,1/                                   2239
      REAL RE_ISBG_SENSORWIDTH                                            2239
C -                                                                       2239
      REAL ISBG_SENSORTHK                                                 2239
      EQUIVALENCE (BANK_ISBG(12),ISBG_SENSORTHK,RE_ISBG_SENSORTHK),       2239
     *(NAMES_ISBG(10),NISBG_SENSORTHK)                                    2239
      EQUIVALENCE (COMMEN_ISBG(10),CISBG_SENSORTHK),(MAP_ISBG(1,10),      2239
     *MISBG_SENSORTHK)                                                    2239
      CHARACTER CISBG_SENSORTHK*40/' '/                                   2239
      CHARACTER NISBG_SENSORTHK*12/'R.SENSORTHK'/                         2239
      INTEGER MISBG_SENSORTHK(2)/1,1/                                     2239
      REAL RE_ISBG_SENSORTHK                                              2239
C -                                                                       2239
      REAL ISBG_SENSORLNGTH                                               2239
      EQUIVALENCE (BANK_ISBG(13),ISBG_SENSORLNGTH,RE_ISBG_SENSORLNGTH),   2239
     *(NAMES_ISBG(11),NISBG_SENSORLNGTH)                                  2239
      EQUIVALENCE (COMMEN_ISBG(11),CISBG_SENSORLNGTH),(MAP_ISBG(1,11),    2239
     *MISBG_SENSORLNGTH)                                                  2239
      CHARACTER CISBG_SENSORLNGTH*40/' '/                                 2239
      CHARACTER NISBG_SENSORLNGTH*12/'R.SENSORLNGTH'/                     2239
      INTEGER MISBG_SENSORLNGTH(2)/1,1/                                   2239
      REAL RE_ISBG_SENSORLNGTH                                            2239
C -                                                                       2239
      REAL ISBG_R                                                         2239
      EQUIVALENCE (BANK_ISBG(14),ISBG_R,RE_ISBG_R),(NAMES_ISBG(12),       2239
     *NISBG_R)                                                            2239
      EQUIVALENCE (COMMEN_ISBG(12),CISBG_R),(MAP_ISBG(1,12),MISBG_R)      2239
      CHARACTER CISBG_R*40/' '/                                           2239
      CHARACTER NISBG_R*12/'R.R'/                                         2239
      INTEGER MISBG_R(2)/1,1/                                             2239
      REAL RE_ISBG_R                                                      2239
C -                                                                       2239
      REAL ISBG_A                                                         2239
      EQUIVALENCE (BANK_ISBG(15),ISBG_A,RE_ISBG_A),(NAMES_ISBG(13),       2239
     *NISBG_A)                                                            2239
      EQUIVALENCE (COMMEN_ISBG(13),CISBG_A),(MAP_ISBG(1,13),MISBG_A)      2239
      CHARACTER CISBG_A*40/' '/                                           2239
      CHARACTER NISBG_A*12/'R.A'/                                         2239
      INTEGER MISBG_A(2)/1,1/                                             2239
      REAL RE_ISBG_A                                                      2239
C -                                                                       2239
      REAL ISBG_PPAROFFSET                                                2239
      EQUIVALENCE (BANK_ISBG(16),ISBG_PPAROFFSET,RE_ISBG_PPAROFFSET),     2239
     *(NAMES_ISBG(14),NISBG_PPAROFFSET)                                   2239
      EQUIVALENCE (COMMEN_ISBG(14),CISBG_PPAROFFSET),(MAP_ISBG(1,14),     2239
     *MISBG_PPAROFFSET)                                                   2239
      CHARACTER CISBG_PPAROFFSET*40/' '/                                  2239
      CHARACTER NISBG_PPAROFFSET*12/'R.PPAROFFSET'/                       2239
      INTEGER MISBG_PPAROFFSET(2)/1,1/                                    2239
      REAL RE_ISBG_PPAROFFSET                                             2239
C -                                                                       2239
      REAL ISBG_PPEROFFSET                                                2239
      EQUIVALENCE (BANK_ISBG(17),ISBG_PPEROFFSET,RE_ISBG_PPEROFFSET),     2239
     *(NAMES_ISBG(15),NISBG_PPEROFFSET)                                   2239
      EQUIVALENCE (COMMEN_ISBG(15),CISBG_PPEROFFSET),(MAP_ISBG(1,15),     2239
     *MISBG_PPEROFFSET)                                                   2239
      CHARACTER CISBG_PPEROFFSET*40/' '/                                  2239
      CHARACTER NISBG_PPEROFFSET*12/'R.PPEROFFSET'/                       2239
      INTEGER MISBG_PPEROFFSET(2)/1,1/                                    2239
      REAL RE_ISBG_PPEROFFSET                                             2239
C -                                                                       2239
      REAL ISBG_AOFFSET                                                   2239
      EQUIVALENCE (BANK_ISBG(18),ISBG_AOFFSET,RE_ISBG_AOFFSET),           2239
     *(NAMES_ISBG(16),NISBG_AOFFSET)                                      2239
      EQUIVALENCE (COMMEN_ISBG(16),CISBG_AOFFSET),(MAP_ISBG(1,16),        2239
     *MISBG_AOFFSET)                                                      2239
      CHARACTER CISBG_AOFFSET*40/' '/                                     2239
      CHARACTER NISBG_AOFFSET*12/'R.AOFFSET'/                             2239
      INTEGER MISBG_AOFFSET(2)/1,1/                                       2239
      REAL RE_ISBG_AOFFSET                                                2239
C -                                                                       2239
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                2239
      PARAMETER (LEN_ISBG=18)                                             2239
      PARAMETER (LLEN_ISBG=16)                                            2239
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           2239
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        2239
      DATA IDNUM_ISBG/10*0/                                               2239
      REAL BANK_ISBG(LEN_ISBG)                                            2239
      CHARACTER*60 BPATH_ISBG/' '/                                        2239
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          2239
     *BPATH_ISBG                                                          2239
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             2239
C *                                                                       2239
C -                                                                       2240
      REAL ISAN_VERSION                                                   2240
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            2240
     *(NAMES_ISAN(1),NISAN_VERSION)                                       2240
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          2240
     *MISAN_VERSION)                                                      2240
      CHARACTER CISAN_VERSION*40/' '/                                     2240
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             2240
      INTEGER MISAN_VERSION(2)/1,1/                                       2240
      REAL RE_ISAN_VERSION                                                2240
C -                                                                       2240
      REAL ISAN_W                                                         2240
      EQUIVALENCE (BANK_ISAN(4),ISAN_W,RE_ISAN_W),(NAMES_ISAN(2),         2240
     *NISAN_W)                                                            2240
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_W),(MAP_ISAN(1,2),MISAN_W)        2240
      CHARACTER CISAN_W*40/' '/                                           2240
      CHARACTER NISAN_W*12/'R.W'/                                         2240
      INTEGER MISAN_W(2)/1,1/                                             2240
      REAL RE_ISAN_W                                                      2240
C -                                                                       2240
      REAL ISAN_H                                                         2240
      EQUIVALENCE (BANK_ISAN(5),ISAN_H,RE_ISAN_H),(NAMES_ISAN(3),         2240
     *NISAN_H)                                                            2240
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_H),(MAP_ISAN(1,3),MISAN_H)        2240
      CHARACTER CISAN_H*40/' '/                                           2240
      CHARACTER NISAN_H*12/'R.H'/                                         2240
      INTEGER MISAN_H(2)/1,1/                                             2240
      REAL RE_ISAN_H                                                      2240
C -                                                                       2240
      REAL ISAN_THK                                                       2240
      EQUIVALENCE (BANK_ISAN(6),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(4),     2240
     *NISAN_THK)                                                          2240
      EQUIVALENCE (COMMEN_ISAN(4),CISAN_THK),(MAP_ISAN(1,4),MISAN_THK)    2240
      CHARACTER CISAN_THK*40/' '/                                         2240
      CHARACTER NISAN_THK*12/'R.THK'/                                     2240
      INTEGER MISAN_THK(2)/1,1/                                           2240
      REAL RE_ISAN_THK                                                    2240
C -                                                                       2240
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                2240
      PARAMETER (LEN_ISAN=6)                                              2240
      PARAMETER (LLEN_ISAN=4)                                             2240
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           2240
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        2240
      DATA IDNUM_ISAN/10*0/                                               2240
      REAL BANK_ISAN(LEN_ISAN)                                            2240
      CHARACTER*60 BPATH_ISAN/' '/                                        2240
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          2240
     *BPATH_ISAN                                                          2240
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             2240
C *                                                                       2240
C -                                                                       2241
      REAL ISHY_VERSION                                                   2241
      EQUIVALENCE (BANK_ISHY(3),ISHY_VERSION,RE_ISHY_VERSION),            2241
     *(NAMES_ISHY(1),NISHY_VERSION)                                       2241
      EQUIVALENCE (COMMEN_ISHY(1),CISHY_VERSION),(MAP_ISHY(1,1),          2241
     *MISHY_VERSION)                                                      2241
      CHARACTER CISHY_VERSION*40/' '/                                     2241
      CHARACTER NISHY_VERSION*12/'R.VERSION'/                             2241
      INTEGER MISHY_VERSION(2)/1,1/                                       2241
      REAL RE_ISHY_VERSION                                                2241
C -                                                                       2241
      REAL ISHY_W                                                         2241
      EQUIVALENCE (BANK_ISHY(4),ISHY_W,RE_ISHY_W),(NAMES_ISHY(2),         2241
     *NISHY_W)                                                            2241
      EQUIVALENCE (COMMEN_ISHY(2),CISHY_W),(MAP_ISHY(1,2),MISHY_W)        2241
      CHARACTER CISHY_W*40/' '/                                           2241
      CHARACTER NISHY_W*12/'R.W'/                                         2241
      INTEGER MISHY_W(2)/1,1/                                             2241
      REAL RE_ISHY_W                                                      2241
C -                                                                       2241
      REAL ISHY_H                                                         2241
      EQUIVALENCE (BANK_ISHY(5),ISHY_H,RE_ISHY_H),(NAMES_ISHY(3),         2241
     *NISHY_H)                                                            2241
      EQUIVALENCE (COMMEN_ISHY(3),CISHY_H),(MAP_ISHY(1,3),MISHY_H)        2241
      CHARACTER CISHY_H*40/' '/                                           2241
      CHARACTER NISHY_H*12/'R.H'/                                         2241
      INTEGER MISHY_H(2)/1,1/                                             2241
      REAL RE_ISHY_H                                                      2241
C -                                                                       2241
      REAL ISHY_THK                                                       2241
      EQUIVALENCE (BANK_ISHY(6),ISHY_THK,RE_ISHY_THK),(NAMES_ISHY(4),     2241
     *NISHY_THK)                                                          2241
      EQUIVALENCE (COMMEN_ISHY(4),CISHY_THK),(MAP_ISHY(1,4),MISHY_THK)    2241
      CHARACTER CISHY_THK*40/' '/                                         2241
      CHARACTER NISHY_THK*12/'R.THK'/                                     2241
      INTEGER MISHY_THK(2)/1,1/                                           2241
      REAL RE_ISHY_THK                                                    2241
C -                                                                       2241
      INTEGER LEN_ISHY,LLEN_ISHY,LINK_ISHY                                2241
      PARAMETER (LEN_ISHY=6)                                              2241
      PARAMETER (LLEN_ISHY=4)                                             2241
      INTEGER FLAG_ISHY/0/,MAP_ISHY(2,LLEN_ISHY),IDNUM_ISHY(10)           2241
      CHARACTER NAMES_ISHY(LLEN_ISHY)*12,COMMEN_ISHY(LLEN_ISHY)*40        2241
      DATA IDNUM_ISHY/10*0/                                               2241
      REAL BANK_ISHY(LEN_ISHY)                                            2241
      CHARACTER*60 BPATH_ISHY/' '/                                        2241
      SAVE FLAG_ISHY,MAP_ISHY,IDNUM_ISHY,NAMES_ISHY,COMMEN_ISHY,          2241
     *BPATH_ISHY                                                          2241
      DATA LINK_ISHY/0/,BANK_ISHY/LEN_ISHY*0/                             2241
C *                                                                       2241
C -                                                                       2242
      REAL ISCU_VERSION                                                   2242
      EQUIVALENCE (BANK_ISCU(3),ISCU_VERSION,RE_ISCU_VERSION),            2242
     *(NAMES_ISCU(1),NISCU_VERSION)                                       2242
      EQUIVALENCE (COMMEN_ISCU(1),CISCU_VERSION),(MAP_ISCU(1,1),          2242
     *MISCU_VERSION)                                                      2242
      CHARACTER CISCU_VERSION*40/' '/                                     2242
      CHARACTER NISCU_VERSION*12/'R.VERSION'/                             2242
      INTEGER MISCU_VERSION(2)/1,1/                                       2242
      REAL RE_ISCU_VERSION                                                2242
C -                                                                       2242
      REAL ISCU_W                                                         2242
      EQUIVALENCE (BANK_ISCU(4),ISCU_W,RE_ISCU_W),(NAMES_ISCU(2),         2242
     *NISCU_W)                                                            2242
      EQUIVALENCE (COMMEN_ISCU(2),CISCU_W),(MAP_ISCU(1,2),MISCU_W)        2242
      CHARACTER CISCU_W*40/' '/                                           2242
      CHARACTER NISCU_W*12/'R.W'/                                         2242
      INTEGER MISCU_W(2)/1,1/                                             2242
      REAL RE_ISCU_W                                                      2242
C -                                                                       2242
      REAL ISCU_H                                                         2242
      EQUIVALENCE (BANK_ISCU(5),ISCU_H,RE_ISCU_H),(NAMES_ISCU(3),         2242
     *NISCU_H)                                                            2242
      EQUIVALENCE (COMMEN_ISCU(3),CISCU_H),(MAP_ISCU(1,3),MISCU_H)        2242
      CHARACTER CISCU_H*40/' '/                                           2242
      CHARACTER NISCU_H*12/'R.H'/                                         2242
      INTEGER MISCU_H(2)/1,1/                                             2242
      REAL RE_ISCU_H                                                      2242
C -                                                                       2242
      REAL ISCU_THK                                                       2242
      EQUIVALENCE (BANK_ISCU(6),ISCU_THK,RE_ISCU_THK),(NAMES_ISCU(4),     2242
     *NISCU_THK)                                                          2242
      EQUIVALENCE (COMMEN_ISCU(4),CISCU_THK),(MAP_ISCU(1,4),MISCU_THK)    2242
      CHARACTER CISCU_THK*40/' '/                                         2242
      CHARACTER NISCU_THK*12/'R.THK'/                                     2242
      INTEGER MISCU_THK(2)/1,1/                                           2242
      REAL RE_ISCU_THK                                                    2242
C -                                                                       2242
      INTEGER LEN_ISCU,LLEN_ISCU,LINK_ISCU                                2242
      PARAMETER (LEN_ISCU=6)                                              2242
      PARAMETER (LLEN_ISCU=4)                                             2242
      INTEGER FLAG_ISCU/0/,MAP_ISCU(2,LLEN_ISCU),IDNUM_ISCU(10)           2242
      CHARACTER NAMES_ISCU(LLEN_ISCU)*12,COMMEN_ISCU(LLEN_ISCU)*40        2242
      DATA IDNUM_ISCU/10*0/                                               2242
      REAL BANK_ISCU(LEN_ISCU)                                            2242
      CHARACTER*60 BPATH_ISCU/' '/                                        2242
      SAVE FLAG_ISCU,MAP_ISCU,IDNUM_ISCU,NAMES_ISCU,COMMEN_ISCU,          2242
     *BPATH_ISCU                                                          2242
      DATA LINK_ISCU/0/,BANK_ISCU/LEN_ISCU*0/                             2242
C *                                                                       2242
C -                                                                       2243
      REAL ISCG_VERSION                                                   2243
      EQUIVALENCE (BANK_ISCG(3),ISCG_VERSION,RE_ISCG_VERSION),            2243
     *(NAMES_ISCG(1),NISCG_VERSION)                                       2243
      EQUIVALENCE (COMMEN_ISCG(1),CISCG_VERSION),(MAP_ISCG(1,1),          2243
     *MISCG_VERSION)                                                      2243
      CHARACTER CISCG_VERSION*40/' '/                                     2243
      CHARACTER NISCG_VERSION*12/'R.VERSION'/                             2243
      INTEGER MISCG_VERSION(2)/1,1/                                       2243
      REAL RE_ISCG_VERSION                                                2243
C -                                                                       2243
      REAL ISCG_W                                                         2243
      EQUIVALENCE (BANK_ISCG(4),ISCG_W,RE_ISCG_W),(NAMES_ISCG(2),         2243
     *NISCG_W)                                                            2243
      EQUIVALENCE (COMMEN_ISCG(2),CISCG_W),(MAP_ISCG(1,2),MISCG_W)        2243
      CHARACTER CISCG_W*40/' '/                                           2243
      CHARACTER NISCG_W*12/'R.W'/                                         2243
      INTEGER MISCG_W(2)/1,1/                                             2243
      REAL RE_ISCG_W                                                      2243
C -                                                                       2243
      REAL ISCG_H                                                         2243
      EQUIVALENCE (BANK_ISCG(5),ISCG_H,RE_ISCG_H),(NAMES_ISCG(3),         2243
     *NISCG_H)                                                            2243
      EQUIVALENCE (COMMEN_ISCG(3),CISCG_H),(MAP_ISCG(1,3),MISCG_H)        2243
      CHARACTER CISCG_H*40/' '/                                           2243
      CHARACTER NISCG_H*12/'R.H'/                                         2243
      INTEGER MISCG_H(2)/1,1/                                             2243
      REAL RE_ISCG_H                                                      2243
C -                                                                       2243
      REAL ISCG_THK                                                       2243
      EQUIVALENCE (BANK_ISCG(6),ISCG_THK,RE_ISCG_THK),(NAMES_ISCG(4),     2243
     *NISCG_THK)                                                          2243
      EQUIVALENCE (COMMEN_ISCG(4),CISCG_THK),(MAP_ISCG(1,4),MISCG_THK)    2243
      CHARACTER CISCG_THK*40/' '/                                         2243
      CHARACTER NISCG_THK*12/'R.THK'/                                     2243
      INTEGER MISCG_THK(2)/1,1/                                           2243
      REAL RE_ISCG_THK                                                    2243
C -                                                                       2243
      INTEGER LEN_ISCG,LLEN_ISCG,LINK_ISCG                                2243
      PARAMETER (LEN_ISCG=6)                                              2243
      PARAMETER (LLEN_ISCG=4)                                             2243
      INTEGER FLAG_ISCG/0/,MAP_ISCG(2,LLEN_ISCG),IDNUM_ISCG(10)           2243
      CHARACTER NAMES_ISCG(LLEN_ISCG)*12,COMMEN_ISCG(LLEN_ISCG)*40        2243
      DATA IDNUM_ISCG/10*0/                                               2243
      REAL BANK_ISCG(LEN_ISCG)                                            2243
      CHARACTER*60 BPATH_ISCG/' '/                                        2243
      SAVE FLAG_ISCG,MAP_ISCG,IDNUM_ISCG,NAMES_ISCG,COMMEN_ISCG,          2243
     *BPATH_ISCG                                                          2243
      DATA LINK_ISCG/0/,BANK_ISCG/LEN_ISCG*0/                             2243
C *                                                                       2243
C -                                                                       2244
      REAL ISGA_VERSION                                                   2244
      EQUIVALENCE (BANK_ISGA(3),ISGA_VERSION,RE_ISGA_VERSION),            2244
     *(NAMES_ISGA(1),NISGA_VERSION)                                       2244
      EQUIVALENCE (COMMEN_ISGA(1),CISGA_VERSION),(MAP_ISGA(1,1),          2244
     *MISGA_VERSION)                                                      2244
      CHARACTER CISGA_VERSION*40/' '/                                     2244
      CHARACTER NISGA_VERSION*12/'R.VERSION'/                             2244
      INTEGER MISGA_VERSION(2)/1,1/                                       2244
      REAL RE_ISGA_VERSION                                                2244
C -                                                                       2244
      REAL ISGA_W                                                         2244
      EQUIVALENCE (BANK_ISGA(4),ISGA_W,RE_ISGA_W),(NAMES_ISGA(2),         2244
     *NISGA_W)                                                            2244
      EQUIVALENCE (COMMEN_ISGA(2),CISGA_W),(MAP_ISGA(1,2),MISGA_W)        2244
      CHARACTER CISGA_W*40/' '/                                           2244
      CHARACTER NISGA_W*12/'R.W'/                                         2244
      INTEGER MISGA_W(2)/1,1/                                             2244
      REAL RE_ISGA_W                                                      2244
C -                                                                       2244
      REAL ISGA_H                                                         2244
      EQUIVALENCE (BANK_ISGA(5),ISGA_H,RE_ISGA_H),(NAMES_ISGA(3),         2244
     *NISGA_H)                                                            2244
      EQUIVALENCE (COMMEN_ISGA(3),CISGA_H),(MAP_ISGA(1,3),MISGA_H)        2244
      CHARACTER CISGA_H*40/' '/                                           2244
      CHARACTER NISGA_H*12/'R.H'/                                         2244
      INTEGER MISGA_H(2)/1,1/                                             2244
      REAL RE_ISGA_H                                                      2244
C -                                                                       2244
      REAL ISGA_THK                                                       2244
      EQUIVALENCE (BANK_ISGA(6),ISGA_THK,RE_ISGA_THK),(NAMES_ISGA(4),     2244
     *NISGA_THK)                                                          2244
      EQUIVALENCE (COMMEN_ISGA(4),CISGA_THK),(MAP_ISGA(1,4),MISGA_THK)    2244
      CHARACTER CISGA_THK*40/' '/                                         2244
      CHARACTER NISGA_THK*12/'R.THK'/                                     2244
      INTEGER MISGA_THK(2)/1,1/                                           2244
      REAL RE_ISGA_THK                                                    2244
C -                                                                       2244
      INTEGER LEN_ISGA,LLEN_ISGA,LINK_ISGA                                2244
      PARAMETER (LEN_ISGA=6)                                              2244
      PARAMETER (LLEN_ISGA=4)                                             2244
      INTEGER FLAG_ISGA/0/,MAP_ISGA(2,LLEN_ISGA),IDNUM_ISGA(10)           2244
      CHARACTER NAMES_ISGA(LLEN_ISGA)*12,COMMEN_ISGA(LLEN_ISGA)*40        2244
      DATA IDNUM_ISGA/10*0/                                               2244
      REAL BANK_ISGA(LEN_ISGA)                                            2244
      CHARACTER*60 BPATH_ISGA/' '/                                        2244
      SAVE FLAG_ISGA,MAP_ISGA,IDNUM_ISGA,NAMES_ISGA,COMMEN_ISGA,          2244
     *BPATH_ISGA                                                          2244
      DATA LINK_ISGA/0/,BANK_ISGA/LEN_ISGA*0/                             2244
C *                                                                       2244
C -                                                                       2245
      REAL ISGB_VERSION                                                   2245
      EQUIVALENCE (BANK_ISGB(3),ISGB_VERSION,RE_ISGB_VERSION),            2245
     *(NAMES_ISGB(1),NISGB_VERSION)                                       2245
      EQUIVALENCE (COMMEN_ISGB(1),CISGB_VERSION),(MAP_ISGB(1,1),          2245
     *MISGB_VERSION)                                                      2245
      CHARACTER CISGB_VERSION*40/' '/                                     2245
      CHARACTER NISGB_VERSION*12/'R.VERSION'/                             2245
      INTEGER MISGB_VERSION(2)/1,1/                                       2245
      REAL RE_ISGB_VERSION                                                2245
C -                                                                       2245
      REAL ISGB_W                                                         2245
      EQUIVALENCE (BANK_ISGB(4),ISGB_W,RE_ISGB_W),(NAMES_ISGB(2),         2245
     *NISGB_W)                                                            2245
      EQUIVALENCE (COMMEN_ISGB(2),CISGB_W),(MAP_ISGB(1,2),MISGB_W)        2245
      CHARACTER CISGB_W*40/' '/                                           2245
      CHARACTER NISGB_W*12/'R.W'/                                         2245
      INTEGER MISGB_W(2)/1,1/                                             2245
      REAL RE_ISGB_W                                                      2245
C -                                                                       2245
      REAL ISGB_H                                                         2245
      EQUIVALENCE (BANK_ISGB(5),ISGB_H,RE_ISGB_H),(NAMES_ISGB(3),         2245
     *NISGB_H)                                                            2245
      EQUIVALENCE (COMMEN_ISGB(3),CISGB_H),(MAP_ISGB(1,3),MISGB_H)        2245
      CHARACTER CISGB_H*40/' '/                                           2245
      CHARACTER NISGB_H*12/'R.H'/                                         2245
      INTEGER MISGB_H(2)/1,1/                                             2245
      REAL RE_ISGB_H                                                      2245
C -                                                                       2245
      REAL ISGB_THK                                                       2245
      EQUIVALENCE (BANK_ISGB(6),ISGB_THK,RE_ISGB_THK),(NAMES_ISGB(4),     2245
     *NISGB_THK)                                                          2245
      EQUIVALENCE (COMMEN_ISGB(4),CISGB_THK),(MAP_ISGB(1,4),MISGB_THK)    2245
      CHARACTER CISGB_THK*40/' '/                                         2245
      CHARACTER NISGB_THK*12/'R.THK'/                                     2245
      INTEGER MISGB_THK(2)/1,1/                                           2245
      REAL RE_ISGB_THK                                                    2245
C -                                                                       2245
      INTEGER LEN_ISGB,LLEN_ISGB,LINK_ISGB                                2245
      PARAMETER (LEN_ISGB=6)                                              2245
      PARAMETER (LLEN_ISGB=4)                                             2245
      INTEGER FLAG_ISGB/0/,MAP_ISGB(2,LLEN_ISGB),IDNUM_ISGB(10)           2245
      CHARACTER NAMES_ISGB(LLEN_ISGB)*12,COMMEN_ISGB(LLEN_ISGB)*40        2245
      DATA IDNUM_ISGB/10*0/                                               2245
      REAL BANK_ISGB(LEN_ISGB)                                            2245
      CHARACTER*60 BPATH_ISGB/' '/                                        2245
      SAVE FLAG_ISGB,MAP_ISGB,IDNUM_ISGB,NAMES_ISGB,COMMEN_ISGB,          2245
     *BPATH_ISGB                                                          2245
      DATA LINK_ISGB/0/,BANK_ISGB/LEN_ISGB*0/                             2245
C *                                                                       2245
C -                                                                       2246
      REAL ISRR_LAYER                                                     2246
      EQUIVALENCE (BANK_ISRR(3),ISRR_LAYER,RE_ISRR_LAYER),                2246
     *(NAMES_ISRR(1),NISRR_LAYER)                                         2246
      EQUIVALENCE (COMMEN_ISRR(1),CISRR_LAYER),(MAP_ISRR(1,1),            2246
     *MISRR_LAYER)                                                        2246
      CHARACTER CISRR_LAYER*40/' '/                                       2246
      CHARACTER NISRR_LAYER*12/'R.LAYER'/                                 2246
      INTEGER MISRR_LAYER(2)/1,1/                                         2246
      REAL RE_ISRR_LAYER                                                  2246
C -                                                                       2246
      REAL ISRR_RIN                                                       2246
      EQUIVALENCE (BANK_ISRR(4),ISRR_RIN,RE_ISRR_RIN),(NAMES_ISRR(2),     2246
     *NISRR_RIN)                                                          2246
      EQUIVALENCE (COMMEN_ISRR(2),CISRR_RIN),(MAP_ISRR(1,2),MISRR_RIN)    2246
      CHARACTER CISRR_RIN*40/' '/                                         2246
      CHARACTER NISRR_RIN*12/'R.RIN'/                                     2246
      INTEGER MISRR_RIN(2)/1,1/                                           2246
      REAL RE_ISRR_RIN                                                    2246
C -                                                                       2246
      REAL ISRR_ROUT                                                      2246
      EQUIVALENCE (BANK_ISRR(5),ISRR_ROUT,RE_ISRR_ROUT),(NAMES_ISRR(3),   2246
     *NISRR_ROUT)                                                         2246
      EQUIVALENCE (COMMEN_ISRR(3),CISRR_ROUT),(MAP_ISRR(1,3),             2246
     *MISRR_ROUT)                                                         2246
      CHARACTER CISRR_ROUT*40/' '/                                        2246
      CHARACTER NISRR_ROUT*12/'R.ROUT'/                                   2246
      INTEGER MISRR_ROUT(2)/1,1/                                          2246
      REAL RE_ISRR_ROUT                                                   2246
C -                                                                       2246
      REAL ISRR_LENGTH                                                    2246
      EQUIVALENCE (BANK_ISRR(6),ISRR_LENGTH,RE_ISRR_LENGTH),              2246
     *(NAMES_ISRR(4),NISRR_LENGTH)                                        2246
      EQUIVALENCE (COMMEN_ISRR(4),CISRR_LENGTH),(MAP_ISRR(1,4),           2246
     *MISRR_LENGTH)                                                       2246
      CHARACTER CISRR_LENGTH*40/' '/                                      2246
      CHARACTER NISRR_LENGTH*12/'R.LENGTH'/                               2246
      INTEGER MISRR_LENGTH(2)/1,1/                                        2246
      REAL RE_ISRR_LENGTH                                                 2246
C -                                                                       2246
      INTEGER LEN_ISRR,LLEN_ISRR,LINK_ISRR                                2246
      PARAMETER (LEN_ISRR=6)                                              2246
      PARAMETER (LLEN_ISRR=4)                                             2246
      INTEGER FLAG_ISRR/0/,MAP_ISRR(2,LLEN_ISRR),IDNUM_ISRR(10)           2246
      CHARACTER NAMES_ISRR(LLEN_ISRR)*12,COMMEN_ISRR(LLEN_ISRR)*40        2246
      DATA IDNUM_ISRR/10*0/                                               2246
      REAL BANK_ISRR(LEN_ISRR)                                            2246
      CHARACTER*60 BPATH_ISRR/' '/                                        2246
      SAVE FLAG_ISRR,MAP_ISRR,IDNUM_ISRR,NAMES_ISRR,COMMEN_ISRR,          2246
     *BPATH_ISRR                                                          2246
      DATA LINK_ISRR/0/,BANK_ISRR/LEN_ISRR*0/                             2246
C *                                                                       2246
C -                                                                       2247
      REAL ISCC_VERSION                                                   2247
      EQUIVALENCE (BANK_ISCC(3),ISCC_VERSION,RE_ISCC_VERSION),            2247
     *(NAMES_ISCC(1),NISCC_VERSION)                                       2247
      EQUIVALENCE (COMMEN_ISCC(1),CISCC_VERSION),(MAP_ISCC(1,1),          2247
     *MISCC_VERSION)                                                      2247
      CHARACTER CISCC_VERSION*40/' '/                                     2247
      CHARACTER NISCC_VERSION*12/'R.VERSION'/                             2247
      INTEGER MISCC_VERSION(2)/1,1/                                       2247
      REAL RE_ISCC_VERSION                                                2247
C -                                                                       2247
      REAL ISCC_RIN1                                                      2247
      EQUIVALENCE (BANK_ISCC(4),ISCC_RIN1,RE_ISCC_RIN1),(NAMES_ISCC(2),   2247
     *NISCC_RIN1)                                                         2247
      EQUIVALENCE (COMMEN_ISCC(2),CISCC_RIN1),(MAP_ISCC(1,2),             2247
     *MISCC_RIN1)                                                         2247
      CHARACTER CISCC_RIN1*40/' '/                                        2247
      CHARACTER NISCC_RIN1*12/'R.RIN1'/                                   2247
      INTEGER MISCC_RIN1(2)/1,1/                                          2247
      REAL RE_ISCC_RIN1                                                   2247
C -                                                                       2247
      REAL ISCC_ROUT1                                                     2247
      EQUIVALENCE (BANK_ISCC(5),ISCC_ROUT1,RE_ISCC_ROUT1),                2247
     *(NAMES_ISCC(3),NISCC_ROUT1)                                         2247
      EQUIVALENCE (COMMEN_ISCC(3),CISCC_ROUT1),(MAP_ISCC(1,3),            2247
     *MISCC_ROUT1)                                                        2247
      CHARACTER CISCC_ROUT1*40/' '/                                       2247
      CHARACTER NISCC_ROUT1*12/'R.ROUT1'/                                 2247
      INTEGER MISCC_ROUT1(2)/1,1/                                         2247
      REAL RE_ISCC_ROUT1                                                  2247
C -                                                                       2247
      REAL ISCC_RIN2                                                      2247
      EQUIVALENCE (BANK_ISCC(6),ISCC_RIN2,RE_ISCC_RIN2),(NAMES_ISCC(4),   2247
     *NISCC_RIN2)                                                         2247
      EQUIVALENCE (COMMEN_ISCC(4),CISCC_RIN2),(MAP_ISCC(1,4),             2247
     *MISCC_RIN2)                                                         2247
      CHARACTER CISCC_RIN2*40/' '/                                        2247
      CHARACTER NISCC_RIN2*12/'R.RIN2'/                                   2247
      INTEGER MISCC_RIN2(2)/1,1/                                          2247
      REAL RE_ISCC_RIN2                                                   2247
C -                                                                       2247
      REAL ISCC_ROUT2                                                     2247
      EQUIVALENCE (BANK_ISCC(7),ISCC_ROUT2,RE_ISCC_ROUT2),                2247
     *(NAMES_ISCC(5),NISCC_ROUT2)                                         2247
      EQUIVALENCE (COMMEN_ISCC(5),CISCC_ROUT2),(MAP_ISCC(1,5),            2247
     *MISCC_ROUT2)                                                        2247
      CHARACTER CISCC_ROUT2*40/' '/                                       2247
      CHARACTER NISCC_ROUT2*12/'R.ROUT2'/                                 2247
      INTEGER MISCC_ROUT2(2)/1,1/                                         2247
      REAL RE_ISCC_ROUT2                                                  2247
C -                                                                       2247
      REAL ISCC_LENGTH                                                    2247
      EQUIVALENCE (BANK_ISCC(8),ISCC_LENGTH,RE_ISCC_LENGTH),              2247
     *(NAMES_ISCC(6),NISCC_LENGTH)                                        2247
      EQUIVALENCE (COMMEN_ISCC(6),CISCC_LENGTH),(MAP_ISCC(1,6),           2247
     *MISCC_LENGTH)                                                       2247
      CHARACTER CISCC_LENGTH*40/' '/                                      2247
      CHARACTER NISCC_LENGTH*12/'R.LENGTH'/                               2247
      INTEGER MISCC_LENGTH(2)/1,1/                                        2247
      REAL RE_ISCC_LENGTH                                                 2247
C -                                                                       2247
      INTEGER LEN_ISCC,LLEN_ISCC,LINK_ISCC                                2247
      PARAMETER (LEN_ISCC=8)                                              2247
      PARAMETER (LLEN_ISCC=6)                                             2247
      INTEGER FLAG_ISCC/0/,MAP_ISCC(2,LLEN_ISCC),IDNUM_ISCC(10)           2247
      CHARACTER NAMES_ISCC(LLEN_ISCC)*12,COMMEN_ISCC(LLEN_ISCC)*40        2247
      DATA IDNUM_ISCC/10*0/                                               2247
      REAL BANK_ISCC(LEN_ISCC)                                            2247
      CHARACTER*60 BPATH_ISCC/' '/                                        2247
      SAVE FLAG_ISCC,MAP_ISCC,IDNUM_ISCC,NAMES_ISCC,COMMEN_ISCC,          2247
     *BPATH_ISCC                                                          2247
      DATA LINK_ISCC/0/,BANK_ISCC/LEN_ISCC*0/                             2247
C *                                                                       2247
C -                                                                       2249
      REAL ISVR_VERSION                                                   2249
      EQUIVALENCE (BANK_ISVR(3),ISVR_VERSION,RE_ISVR_VERSION),            2249
     *(NAMES_ISVR(1),NISVR_VERSION)                                       2249
      EQUIVALENCE (COMMEN_ISVR(1),CISVR_VERSION),(MAP_ISVR(1,1),          2249
     *MISVR_VERSION)                                                      2249
      CHARACTER CISVR_VERSION*40/' '/                                     2249
      CHARACTER NISVR_VERSION*12/'R.VERSION'/                             2249
      INTEGER MISVR_VERSION(2)/1,1/                                       2249
      REAL RE_ISVR_VERSION                                                2249
C -                                                                       2249
      REAL ISVR_CODE                                                      2249
      EQUIVALENCE (BANK_ISVR(4),ISVR_CODE,RE_ISVR_CODE),(NAMES_ISVR(2),   2249
     *NISVR_CODE)                                                         2249
      EQUIVALENCE (COMMEN_ISVR(2),CISVR_CODE),(MAP_ISVR(1,2),             2249
     *MISVR_CODE)                                                         2249
      CHARACTER CISVR_CODE*40/' '/                                        2249
      CHARACTER NISVR_CODE*12/'R.CODE'/                                   2249
      INTEGER MISVR_CODE(2)/1,1/                                          2249
      REAL RE_ISVR_CODE                                                   2249
C -                                                                       2249
      INTEGER LEN_ISVR,LLEN_ISVR,LINK_ISVR                                2249
      PARAMETER (LEN_ISVR=4)                                              2249
      PARAMETER (LLEN_ISVR=2)                                             2249
      INTEGER FLAG_ISVR/0/,MAP_ISVR(2,LLEN_ISVR),IDNUM_ISVR(10)           2249
      CHARACTER NAMES_ISVR(LLEN_ISVR)*12,COMMEN_ISVR(LLEN_ISVR)*40        2249
      DATA IDNUM_ISVR/10*0/                                               2249
      REAL BANK_ISVR(LEN_ISVR)                                            2249
      CHARACTER*60 BPATH_ISVR/' '/                                        2249
      SAVE FLAG_ISVR,MAP_ISVR,IDNUM_ISVR,NAMES_ISVR,COMMEN_ISVR,          2249
     *BPATH_ISVR                                                          2249
      DATA LINK_ISVR/0/,BANK_ISVR/LEN_ISVR*0/                             2249
C *                                                                       2249
* -------------------------------------------------------
C *                                                                       2251
      CALL AGSBEGM(MODULE,IPRIN)                                          2251
      IF (IPRIN.LT.0) RETURN                                              2251
C Filling bank ISMG - MOTHER VOLUME WHOLE DETECTOR                        2251
      BANK_TITLE='MOTHER VOLUME WHOLE DETECTOR'                           2251
      BPATH_ISMG='ISMG*'                                                  2251
      IDNUM_ISMG(1)=0                                                     2252
C VERSION                                                                 2252
      ISMG_LAYER=1                                                        2252
      CISMG_LAYER='VERSION'                                               2252
C INNER RADIUS                                                            2253
      ISMG_RIN=8.61                                                       2253
      CISMG_RIN='INNER RADIUS'                                            2253
C OUTER RADIUS                                                            2254
      ISMG_ROUT=11.70                                                     2254
      CISMG_ROUT='OUTER RADIUS'                                           2254
C OVERAL LENGTH OF THE DETECTOR                                           2255
      ISMG_TOTALLENGTH=40.00                                              2255
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE DETECTOR'                   2255
C FILE VERSION                                                            2256
      ISMG_CODE=4.00                                                      2256
      CISMG_CODE='FILE VERSION'                                           2256
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2257
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2257
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2257
C *                                                                       2257
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2257
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2257
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2257
C *                                                                       2259
      CALL AGSBEGM(MODULE,IPRIN)                                          2259
      IF (IPRIN.LT.0) RETURN                                              2259
C Filling bank ISMG - MOTHER VOLUME INNER LAYER                           2259
      BANK_TITLE='MOTHER VOLUME INNER LAYER'                              2259
      BPATH_ISMG='ISMG*'                                                  2259
      IDNUM_ISMG(1)=0                                                     2260
C VERSION                                                                 2260
      ISMG_LAYER=2                                                        2260
      CISMG_LAYER='VERSION'                                               2260
C INNER RADIUS                                                            2261
      ISMG_RIN=8.61                                                       2261
      CISMG_RIN='INNER RADIUS'                                            2261
C OUTER RADIUS                                                            2262
      ISMG_ROUT=11.70                                                     2262
      CISMG_ROUT='OUTER RADIUS'                                           2262
C OVERAL LENGTH OF THE LAYER                                              2263
      ISMG_TOTALLENGTH=40.00                                              2263
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      2263
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2264
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2264
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2264
C *                                                                       2264
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2264
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2264
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2264
C *                                                                       2266
      CALL AGSBEGM(MODULE,IPRIN)                                          2266
      IF (IPRIN.LT.0) RETURN                                              2266
C Filling bank ISMG - MOTHER VOLUME OUTER LAYER                           2266
      BANK_TITLE='MOTHER VOLUME OUTER LAYER'                              2266
      BPATH_ISMG='ISMG*'                                                  2266
      IDNUM_ISMG(1)=0                                                     2267
C VERSION                                                                 2267
      ISMG_LAYER=3                                                        2267
      CISMG_LAYER='VERSION'                                               2267
C INNER RADIUS                                                            2268
      ISMG_RIN=15.00                                                      2268
      CISMG_RIN='INNER RADIUS'                                            2268
C OUTER RADIUS                                                            2269
      ISMG_ROUT=18.00                                                     2269
      CISMG_ROUT='OUTER RADIUS'                                           2269
C OVERAL LENGTH OF THE LAYER                                              2270
      ISMG_TOTALLENGTH=54.50                                              2270
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      2270
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2271
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2271
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2271
C *                                                                       2271
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2271
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2271
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2271
*--------------------------------------------------------
C *                                                                       2274
      CALL AGSBEGM(MODULE,IPRIN)                                          2274
      IF (IPRIN.LT.0) RETURN                                              2274
C Filling bank ISBG - INNER SILICON TRACKER DATA                          2274
      BANK_TITLE='INNER SILICON TRACKER DATA'                             2274
      BPATH_ISBG='ISBG*'                                                  2274
      IDNUM_ISBG(1)=0                                                     2275
C LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE                             2275
      ISBG_LAYER=1                                                        2275
      CISBG_LAYER='LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE'           2275
C LADDER COUNT                                                            2276
      ISBG_NLADDER=15                                                     2276
      CISBG_NLADDER='LADDER COUNT'                                        2276
C SENSOR UNITS PER LADDER                                                 2277
      ISBG_NUNIT=7                                                        2277
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               2277
C OVERAL LENGTH OF THE DETECTOR                                           2278
      ISBG_LENGTH=28.0                                                    2278
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        2278
C 1ST LADDER NOMINAL RADIUS                                               2279
      ISBG_R=9.0                                                          2279
      CISBG_R='1ST LADDER NOMINAL RADIUS'                                 2279
C 1ST LADDER NOMINAL POSITION ANGLE                                       2280
      ISBG_A=0.0                                                          2280
      CISBG_A='1ST LADDER NOMINAL POSITION ANGLE'                         2280
C ANGULAR OFFSET                                                          2281
      ISBG_AOFFSET=81.0                                                   2281
      CISBG_AOFFSET='ANGULAR OFFSET'                                      2281
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    2282
      ISBG_PPAROFFSET=0.0                                                 2282
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  2282
     *DULE'                                                               2282
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               2283
      ISBG_PPEROFFSET=0.0                                                 2283
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  2283
     *HE MODULE'                                                          2283
C LADDER WIDTH                                                            2284
      ISBG_LADDERWIDTH=4.0                                                2284
      CISBG_LADDERWIDTH='LADDER WIDTH'                                    2284
C LADDER THICKNESS                                                        2285
      ISBG_LADDERTHK=0.4626                                               2285
      CISBG_LADDERTHK='LADDER THICKNESS'                                  2285
C MODULE THICKNESS                                                        2286
      ISBG_SENSATHK=0.4282                                                2286
      CISBG_SENSATHK='MODULE THICKNESS'                                   2286
C SENSOR WIDTH                                                            2287
      ISBG_SENSORWIDTH=4.0                                                2287
      CISBG_SENSORWIDTH='SENSOR WIDTH'                                    2287
C SENSOR LENGTH                                                           2288
      ISBG_SENSORLNGTH=4.0                                                2288
      CISBG_SENSORLNGTH='SENSOR LENGTH'                                   2288
C SENSOR THICKNESS                                                        2289
      ISBG_SENSORTHK=0.0300                                               2289
      CISBG_SENSORTHK='SENSOR THICKNESS'                                  2289
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2290
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2290
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2290
C *                                                                       2290
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2290
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2290
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2290
C *                                                                       2292
      CALL AGSBEGM(MODULE,IPRIN)                                          2292
      IF (IPRIN.LT.0) RETURN                                              2292
C Filling bank ISBG - INNER SILICON TRACKER DATA                          2292
      BANK_TITLE='INNER SILICON TRACKER DATA'                             2292
      BPATH_ISBG='ISBG*'                                                  2292
      IDNUM_ISBG(1)=0                                                     2293
C LAYER INDEX                                                             2293
      ISBG_LAYER=2                                                        2293
      CISBG_LAYER='LAYER INDEX'                                           2293
C LADDER COUNT                                                            2294
      ISBG_NLADDER=15                                                     2294
      CISBG_NLADDER='LADDER COUNT'                                        2294
C SENSOR UNITS PER LADDER                                                 2295
      ISBG_NUNIT=9                                                        2295
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               2295
C OVERAL LENGTH OF THE DETECTOR                                           2296
      ISBG_LENGTH=36.0                                                    2296
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        2296
C 2ND LADDER NOMINAL RADIUS                                               2297
      ISBG_R=9.5                                                          2297
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 2297
C 2ND LADDER NOMINAL POSITION ANGLE                                       2298
      ISBG_A=0.0                                                          2298
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         2298
C ANGULAR OFFSET                                                          2299
      ISBG_AOFFSET=81.0                                                   2299
      CISBG_AOFFSET='ANGULAR OFFSET'                                      2299
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    2300
      ISBG_PPAROFFSET=0.0                                                 2300
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  2300
     *DULE'                                                               2300
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               2301
      ISBG_PPEROFFSET=0.0                                                 2301
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  2301
     *HE MODULE'                                                          2301
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2302
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2302
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2302
C *                                                                       2302
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2302
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2302
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2302
C *                                                                       2304
      CALL AGSBEGM(MODULE,IPRIN)                                          2304
      IF (IPRIN.LT.0) RETURN                                              2304
C Filling bank ISBG - INNER SILICON TRACKER DATA                          2304
      BANK_TITLE='INNER SILICON TRACKER DATA'                             2304
      BPATH_ISBG='ISBG*'                                                  2304
      IDNUM_ISBG(1)=0                                                     2305
C LAYER INDEX                                                             2305
      ISBG_LAYER=3                                                        2305
      CISBG_LAYER='LAYER INDEX'                                           2305
C LADDER COUNT                                                            2306
      ISBG_NLADDER=27                                                     2306
      CISBG_NLADDER='LADDER COUNT'                                        2306
C SENSOR UNITS PER LADDER                                                 2307
      ISBG_NUNIT=13                                                       2307
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               2307
C OVERAL LENGTH OF THE DETECTOR                                           2308
      ISBG_LENGTH=52.0                                                    2308
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        2308
C 2ND LADDER NOMINAL RADIUS                                               2309
      ISBG_R=17.0                                                         2309
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 2309
C 2ND LADDER NOMINAL POSITION ANGLE                                       2310
      ISBG_A=0.0                                                          2310
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         2310
C ANGULAR OFFSET                                                          2311
      ISBG_AOFFSET=81.0                                                   2311
      CISBG_AOFFSET='ANGULAR OFFSET'                                      2311
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    2312
      ISBG_PPAROFFSET=0.0                                                 2312
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  2312
     *DULE'                                                               2312
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               2313
      ISBG_PPEROFFSET=0.0                                                 2313
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  2313
     *HE MODULE'                                                          2313
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2314
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2314
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2314
C *                                                                       2314
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2314
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2314
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2314
*--------------------------------------------------------
C *                                                                       2317
      CALL AGSBEGM(MODULE,IPRIN)                                          2317
      IF (IPRIN.LT.0) RETURN                                              2317
C Filling bank ISAN - THERMAL CONDUCTIVE CARBON FOAM PLATE                2317
      BANK_TITLE='THERMAL CONDUCTIVE CARBON FOAM PLATE'                   2317
      BPATH_ISAN='ISAN*'                                                  2317
      IDNUM_ISAN(1)=0                                                     2318
C MAY HAVE A FEW                                                          2318
      ISAN_VERSION=1                                                      2318
      CISAN_VERSION='MAY HAVE A FEW'                                      2318
C WIDTH                                                                   2319
      ISAN_W=4.0                                                          2319
      CISAN_W='WIDTH'                                                     2319
C LENGTH                                                                  2320
      ISAN_H=4.0                                                          2320
      CISAN_H='LENGTH'                                                    2320
C THICKNESS                                                               2321
      ISAN_THK=0.1686                                                     2321
      CISAN_THK='THICKNESS'                                               2321
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    2322
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           2322
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   2322
C *                                                                       2322
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    2322
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           2322
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   2322
*--------------------------------------------------------
C *                                                                       2325
      CALL AGSBEGM(MODULE,IPRIN)                                          2325
      IF (IPRIN.LT.0) RETURN                                              2325
C Filling bank ISHY - KAPTON HYBRID                                       2325
      BANK_TITLE='KAPTON HYBRID'                                          2325
      BPATH_ISHY='ISHY*'                                                  2325
      IDNUM_ISHY(1)=0                                                     2326
C MAY HAVE A FEW                                                          2326
      ISHY_VERSION=1                                                      2326
      CISHY_VERSION='MAY HAVE A FEW'                                      2326
C WIDTH                                                                   2327
      ISHY_W=4.0                                                          2327
      CISHY_W='WIDTH'                                                     2327
C LENGTH                                                                  2328
      ISHY_H=4.0                                                          2328
      CISHY_H='LENGTH'                                                    2328
C THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2MIL KAPTON        2329
      ISHY_THK=0.0050                                                     2329
      CISHY_THK='THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2M  2329
     *IL KAPTON'                                                          2329
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    2330
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           2330
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   2330
C *                                                                       2330
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    2330
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           2330
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   2330
*--------------------------------------------------------
C *                                                                       2333
      CALL AGSBEGM(MODULE,IPRIN)                                          2333
      IF (IPRIN.LT.0) RETURN                                              2333
C Filling bank ISCU - COPPER TRACES ON HYBRID                             2333
      BANK_TITLE='COPPER TRACES ON HYBRID'                                2333
      BPATH_ISCU='ISCU*'                                                  2333
      IDNUM_ISCU(1)=0                                                     2334
C MAY HAVE A FEW                                                          2334
      ISCU_VERSION=1                                                      2334
      CISCU_VERSION='MAY HAVE A FEW'                                      2334
C WIDTH                                                                   2335
      ISCU_W=4.0                                                          2335
      CISCU_W='WIDTH'                                                     2335
C LENGTH                                                                  2336
      ISCU_H=4.0                                                          2336
      CISCU_H='LENGTH'                                                    2336
C THICKNESS, 0.7MIL CU                                                    2337
      ISCU_THK=0.0018                                                     2337
      CISCU_THK='THICKNESS, 0.7MIL CU'                                    2337
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    2338
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           2338
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   2338
C *                                                                       2338
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    2338
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           2338
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   2338
*--------------------------------------------------------
C *                                                                       2341
      CALL AGSBEGM(MODULE,IPRIN)                                          2341
      IF (IPRIN.LT.0) RETURN                                              2341
C Filling bank ISCG - READOUT CHIP GEOMETRY, FIRST APPROX.                2341
      BANK_TITLE='READOUT CHIP GEOMETRY, FIRST APPROX.'                   2341
      BPATH_ISCG='ISCG*'                                                  2341
      IDNUM_ISCG(1)=0                                                     2342
C WE MAY HAVE A FEW DIFFERENT CHIPS                                       2342
      ISCG_VERSION=1                                                      2342
      CISCG_VERSION='WE MAY HAVE A FEW DIFFERENT CHIPS'                   2342
C WIDTH                                                                   2343
      ISCG_W=0.8055                                                       2343
      CISCG_W='WIDTH'                                                     2343
C HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)                          2344
      ISCG_H=4.0                                                          2344
      CISCG_H='HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)'            2344
C THICKNESS                                                               2345
      ISCG_THK=0.0762                                                     2345
      CISCG_THK='THICKNESS'                                               2345
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    2346
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           2346
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   2346
C *                                                                       2346
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    2346
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           2346
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   2346
*--------------------------------------------------------
C *                                                                       2349
      CALL AGSBEGM(MODULE,IPRIN)                                          2349
      IF (IPRIN.LT.0) RETURN                                              2349
C Filling bank ISGA - GLUE LAYER, SAME SIZE AS SENSOR                     2349
      BANK_TITLE='GLUE LAYER, SAME SIZE AS SENSOR'                        2349
      BPATH_ISGA='ISGA*'                                                  2349
      IDNUM_ISGA(1)=0                                                     2350
C MAY HAVE A FEW                                                          2350
      ISGA_VERSION=1                                                      2350
      CISGA_VERSION='MAY HAVE A FEW'                                      2350
C WIDTH                                                                   2351
      ISGA_W=4.0                                                          2351
      CISGA_W='WIDTH'                                                     2351
C LENGTH                                                                  2352
      ISGA_H=4.0                                                          2352
      CISGA_H='LENGTH'                                                    2352
C THICKNESS, USE 50UM                                                     2353
      ISGA_THK=0.0050                                                     2353
      CISGA_THK='THICKNESS, USE 50UM'                                     2353
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    2354
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           2354
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   2354
C *                                                                       2354
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    2354
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           2354
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   2354
*--------------------------------------------------------
C *                                                                       2357
      CALL AGSBEGM(MODULE,IPRIN)                                          2357
      IF (IPRIN.LT.0) RETURN                                              2357
C Filling bank ISGB - GLUE LAYER, SAME SIZE AS CHIP                       2357
      BANK_TITLE='GLUE LAYER, SAME SIZE AS CHIP'                          2357
      BPATH_ISGB='ISGB*'                                                  2357
      IDNUM_ISGB(1)=0                                                     2358
C MAY HAVE A FEW                                                          2358
      ISGB_VERSION=1                                                      2358
      CISGB_VERSION='MAY HAVE A FEW'                                      2358
C WIDTH                                                                   2359
      ISGB_W=0.8055                                                       2359
      CISGB_W='WIDTH'                                                     2359
C LENGTH                                                                  2360
      ISGB_H=4.0                                                          2360
      CISGB_H='LENGTH'                                                    2360
C THICKNESS, USE 50UM                                                     2361
      ISGB_THK=0.0050                                                     2361
      CISGB_THK='THICKNESS, USE 50UM'                                     2361
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    2362
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           2362
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   2362
C *                                                                       2362
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    2362
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           2362
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   2362
* -------------------------------------------------------
C *                                                                       2364
      CALL AGSBEGM(MODULE,IPRIN)                                          2364
      IF (IPRIN.LT.0) RETURN                                              2364
C Filling bank ISRR - SUPPORT RING FOR LAYER 1                            2364
      BANK_TITLE='SUPPORT RING FOR LAYER 1'                               2364
      BPATH_ISRR='ISRR*'                                                  2364
      IDNUM_ISRR(1)=0                                                     2365
C LAYER                                                                   2365
      ISRR_LAYER=1                                                        2365
      CISRR_LAYER='LAYER'                                                 2365
C INNER RADIUS                                                            2366
      ISRR_RIN=6.00                                                       2366
      CISRR_RIN='INNER RADIUS'                                            2366
C OUTER RADIUS                                                            2367
      ISRR_ROUT=9.00                                                      2367
      CISRR_ROUT='OUTER RADIUS'                                           2367
C THICKNESS OF THE RING                                                   2368
      ISRR_LENGTH=2.00                                                    2368
      CISRR_LENGTH='THICKNESS OF THE RING'                                2368
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2369
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2369
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2369
C *                                                                       2369
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2369
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2369
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2369
C *                                                                       2371
      CALL AGSBEGM(MODULE,IPRIN)                                          2371
      IF (IPRIN.LT.0) RETURN                                              2371
C Filling bank ISRR - SUPPORT RING FOR LAYER 2                            2371
      BANK_TITLE='SUPPORT RING FOR LAYER 2'                               2371
      BPATH_ISRR='ISRR*'                                                  2371
      IDNUM_ISRR(1)=0                                                     2372
C LAYER                                                                   2372
      ISRR_LAYER=2                                                        2372
      CISRR_LAYER='LAYER'                                                 2372
C INNER RADIUS                                                            2373
      ISRR_RIN=8.70                                                       2373
      CISRR_RIN='INNER RADIUS'                                            2373
C OUTER RADIUS                                                            2374
      ISRR_ROUT=11.70                                                     2374
      CISRR_ROUT='OUTER RADIUS'                                           2374
C THICKNESS OF THE RING                                                   2375
      ISRR_LENGTH=2.00                                                    2375
      CISRR_LENGTH='THICKNESS OF THE RING'                                2375
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2376
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2376
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2376
C *                                                                       2376
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2376
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2376
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2376
C *                                                                       2378
      CALL AGSBEGM(MODULE,IPRIN)                                          2378
      IF (IPRIN.LT.0) RETURN                                              2378
C Filling bank ISRR - SUPPORT RING FOR LAYER 3                            2378
      BANK_TITLE='SUPPORT RING FOR LAYER 3'                               2378
      BPATH_ISRR='ISRR*'                                                  2378
      IDNUM_ISRR(1)=0                                                     2379
C LAYER                                                                   2379
      ISRR_LAYER=3                                                        2379
      CISRR_LAYER='LAYER'                                                 2379
C INNER RADIUS                                                            2380
      ISRR_RIN=15.00                                                      2380
      CISRR_RIN='INNER RADIUS'                                            2380
C OUTER RADIUS                                                            2381
      ISRR_ROUT=18.00                                                     2381
      CISRR_ROUT='OUTER RADIUS'                                           2381
C THICKNESS OF THE RING                                                   2382
      ISRR_LENGTH=1.25                                                    2382
      CISRR_LENGTH='THICKNESS OF THE RING'                                2382
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2383
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2383
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2383
C *                                                                       2383
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2383
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2383
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2383
* -------------------------------------------------------
C *                                                                       2385
      CALL AGSBEGM(MODULE,IPRIN)                                          2385
      IF (IPRIN.LT.0) RETURN                                              2385
C Filling bank ISCC - INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3          2385
      BANK_TITLE='INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3'             2385
      BPATH_ISCC='ISCC*'                                                  2385
      IDNUM_ISCC(1)=0                                                     2386
C VERSION                                                                 2386
      ISCC_VERSION=1                                                      2386
      CISCC_VERSION='VERSION'                                             2386
C INNER RADIUS SMALL                                                      2387
      ISCC_RIN1=10.70                                                     2387
      CISCC_RIN1='INNER RADIUS SMALL'                                     2387
C OUTER RADIUS SMALL                                                      2388
      ISCC_ROUT1=11.70                                                    2388
      CISCC_ROUT1='OUTER RADIUS SMALL'                                    2388
C INNER RADIUS LARGE                                                      2389
      ISCC_RIN2=15.00                                                     2389
      CISCC_RIN2='INNER RADIUS LARGE'                                     2389
C OUTER RADIUS LARGE                                                      2390
      ISCC_ROUT2=16.00                                                    2390
      CISCC_ROUT2='OUTER RADIUS LARGE'                                    2390
C THICKNESS OF THE RING                                                   2391
      ISCC_LENGTH=6.00                                                    2391
      CISCC_LENGTH='THICKNESS OF THE RING'                                2391
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    2392
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           2392
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   2392
C *                                                                       2392
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    2392
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           2392
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   2392
* -------------------------------------------------------
C *                                                                       2394
      CALL AGSBEGM(MODULE,IPRIN)                                          2394
      IF (IPRIN.LT.0) RETURN                                              2394
C Filling bank ISVR - CODE VERSION FOR G2T_VOLUME_ID                      2394
      BANK_TITLE='CODE VERSION FOR G2T_VOLUME_ID'                         2394
      BPATH_ISVR='ISVR*'                                                  2394
      IDNUM_ISVR(1)=0                                                     2395
C VERSION                                                                 2395
      ISVR_VERSION=2                                                      2395
      CISVR_VERSION='VERSION'                                             2395
C VERSION                                                                 2396
      ISVR_CODE=2                                                         2396
      CISVR_CODE='VERSION'                                                2396
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    2397
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           2397
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   2397
C *                                                                       2397
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    2397
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           2397
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   2397
* -------------------------------------------------------
* -------------------------------------------------------
      RADDEG = 3.14159265/180.0                                           2401
* -------------------------------------------------------
C use ISMG bank                                                           2403
      BPATH_ISMG='ISMG*'                                                  2403
      IDNUM_ISMG(1)=0                                                     2403
      ISMG_LAYER=1                                                        2403
      CALL AGDGETP('ISTBGEO4','*',-999,'ISMG',NISMG_LAYER,RE_ISMG_LAYER,  2403
     *BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,BANK_ISMG,LEN_ISMG,     2403
     *LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                                      2403
C use default ISVR bank                                                   2404
      BPATH_ISVR='ISVR*'                                                  2404
      IDNUM_ISVR(1)=0                                                     2404
      CALL AGDGETP('ISTBGEO4','*',-999,'ISVR',' ',BANK_ISVR, BPATH_ISVR,  2404
     *IDNUM_ISVR,1,MAP_ISVR,NAMES_ISVR,BANK_ISVR,LEN_ISVR,LLEN_ISVR,      2404
     *LINK_ISVR,FLAG_ISVR)                                                2404
      CALL AGSBEGM(MODULE,IPRIN)                                          2406
C Check IPRIN<0                                                           2406
      IF (IPRIN.LT.0) RETURN                                              2406
C Create IBMO :                                                           2406
C Call To Local Procedure IBMO                                            2406
      ASSIGN 5020 TO BLOCK_IBMO                                           2406
      GO TO  5010                                                         2406
5020  CONTINUE                                                            2406
C *                                                                       2406
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           2407
      CALL AGSRESET                                                       2407
      AG_MOTHER = 'CAVE'                                                  2407
      AG_TITLE = 'IBMO'                                                   2407
      AG_EXNAME = 'POSITION'                                              2407
      AG_PARLIST = 'MOTHER'                                               2407
      CALL AXPOSITION                                                     2407
C *                                                                       2407
      WRITE (*,*) 'ISTB mother - IBMO - created'                          2409
* -------------------------------------------------------
      CALL AGSENDM                                                        2411
      RETURN                                                              2411
C Begin Local Procedure IBMO                                              2411
C IBMO IS THE MOTHER OF THE ISTB DETECTOR                                 2411
5010  CONTINUE                                                            2411
         AG_TITLE='IBMO'                                                  2411
         AG_MODULE=MODULE                                                 2411
         AG_MARK='V00'                                                    2411
         CALL AGSPUSH                                                     2411
         AG_MODULE=MODULE                                                 2411
C    *                                                                    2411
C    Geant MATERIAL : AIR ===> inherited arguments used <===              2412
         CALL AGSRESET                                                    2412
         AG_TITLE = 'AIR'                                                 2412
         AG_EXNAME = 'MATERIAL'                                           2412
         AG_PARLIST = 'NONE'                                              2412
         CALL AXMATERIAL                                                  2412
C    *                                                                    2412
C    Geant ATTRIBUTE : IBMO ===> SEEN=1 COLO=1 <===                       2412
         CALL AGSRESET                                                    2413
         AG_SEEN = 1                                                      2413
         AG_COLO = 1                                                      2413
         AG_TITLE = 'IBMO'                                                2413
         AG_EXNAME = 'ATTRIBUTE'                                          2413
         AG_PARLIST = 'SEEN_COLO'                                         2413
         CALL AXATTRIBUTE                                                 2413
C    *                                                                    2413
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  2417
C    LLENGTH/2.0 <===                                                     2417
         CALL AGSRESET                                                    2417
         AG_RMIN = ISMG_RIN                                               2417
         AG_RMAX = ISMG_ROUT                                              2417
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     2417
         AG_TITLE = 'TUBE'                                                2417
         AG_EXNAME = 'SHAPE'                                              2417
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      2417
         CALL AXSHAPE                                                     2417
C    *                                                                    2417
* -- Some administration to calculate the thickness of a module
* -- Kept for (private) future use
C    use ISAN bank                                                        2421
         BPATH_ISAN='ISAN*'                                               2421
         IDNUM_ISAN(1)=0                                                  2421
         ISAN_VERSION=1                                                   2421
         CALL AGDGETP('ISTBGEO4','*',-999,'ISAN',NISAN_VERSION,           2421
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     2421
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                2421
C    use ISGA bank                                                        2422
         BPATH_ISGA='ISGA*'                                               2422
         IDNUM_ISGA(1)=0                                                  2422
         ISGA_VERSION=1                                                   2422
         CALL AGDGETP('ISTBGEO4','*',-999,'ISGA',NISGA_VERSION,           2422
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2422
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2422
C    use ISBG bank                                                        2423
         BPATH_ISBG='ISBG*'                                               2423
         IDNUM_ISBG(1)=0                                                  2423
         ISBG_LAYER=1                                                     2423
         CALL AGDGETP('ISTBGEO4','*',-999,'ISBG',NISBG_LAYER,             2423
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       2423
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                2423
C    use ISGA bank                                                        2424
         BPATH_ISGA='ISGA*'                                               2424
         IDNUM_ISGA(1)=0                                                  2424
         ISGA_VERSION=1                                                   2424
         CALL AGDGETP('ISTBGEO4','*',-999,'ISGA',NISGA_VERSION,           2424
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2424
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2424
C    use ISHY bank                                                        2425
         BPATH_ISHY='ISHY*'                                               2425
         IDNUM_ISHY(1)=0                                                  2425
         ISHY_VERSION=1                                                   2425
         CALL AGDGETP('ISTBGEO4','*',-999,'ISHY',NISHY_VERSION,           2425
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     2425
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                2425
C    use ISCU bank                                                        2426
         BPATH_ISCU='ISCU*'                                               2426
         IDNUM_ISCU(1)=0                                                  2426
         ISCU_VERSION=1                                                   2426
         CALL AGDGETP('ISTBGEO4','*',-999,'ISCU',NISCU_VERSION,           2426
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     2426
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                2426
C    use ISGB bank                                                        2427
         BPATH_ISGB='ISGB*'                                               2427
         IDNUM_ISGB(1)=0                                                  2427
         ISGB_VERSION=1                                                   2427
         CALL AGDGETP('ISTBGEO4','*',-999,'ISGB',NISGB_VERSION,           2427
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     2427
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                2427
C    use ISCG bank                                                        2428
         BPATH_ISCG='ISCG*'                                               2428
         IDNUM_ISCG(1)=0                                                  2428
         ISCG_VERSION=1                                                   2428
         CALL AGDGETP('ISTBGEO4','*',-999,'ISCG',NISCG_VERSION,           2428
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     2428
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                2428
         MOD_THK = 2.0*(ISAN_THK/                                         2430
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+                   2430
     *   ISCU_THK+ISGB_THK+ISCG_THK)                                      2430
C    *                                                                    2432
         ISTLAYER=2                                                       2432
            GO TO 5033                                                    2432
5031        ISTLAYER=ISTLAYER+1                                           2432
5033        IF(ISTLAYER-(2).GT.0) GO TO 5032                              2432
C       use ISMG bank                                                     2433
            BPATH_ISMG='ISMG*'                                            2433
            IDNUM_ISMG(1)=0                                               2433
            ISMG_LAYER=ISTLAYER                                           2433
            CALL AGDGETP('ISTBGEO4','*',-999,'ISMG',NISMG_LAYER,          2433
     *      RE_ISMG_LAYER,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,    2433
     *      BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)             2433
C       use ISBG bank                                                     2434
            BPATH_ISBG='ISBG*'                                            2434
            IDNUM_ISBG(1)=0                                               2434
            ISBG_LAYER=ISTLAYER                                           2434
            CALL AGDGETP('ISTBGEO4','*',-999,'ISBG',NISBG_LAYER,          2434
     *      RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,    2434
     *      BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)             2434
C       use ISRR bank                                                     2435
            BPATH_ISRR='ISRR*'                                            2435
            IDNUM_ISRR(1)=0                                               2435
            ISRR_LAYER=ISTLAYER                                           2435
            CALL AGDGETP('ISTBGEO4','*',-999,'ISRR',NISRR_LAYER,          2435
     *      RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,    2435
     *      BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)             2435
C       Create IBMY :                                                     2436
C       Call To Local Procedure IBMY                                      2436
            ASSIGN 5050 TO BLOCK_IBMY                                     2436
            GO TO  5040                                                   2436
5050        CONTINUE                                                      2436
C       *                                                                 2436
C       Geant POSITION : IBMY ===> inherited arguments used <===          2437
            CALL AGSRESET                                                 2437
            AG_TITLE = 'IBMY'                                             2437
            AG_EXNAME = 'POSITION'                                        2437
            AG_PARLIST = 'NONE'                                           2437
            CALL AXPOSITION                                               2437
C       *                                                                 2437
         GO TO 5031                                                       2438
5032     CONTINUE                                                         2438
5011  CALL AGSPOPB                                                        2440
      GO TO BLOCK_IBMO, (5010 ,5020)                                      2440
C End of Local Procedure                                                  2440
* -------------------------------------------------------
C Begin Local Procedure IBMY                                              2443
C IBMY IS THE MOTHER OF THE IST LAYERS                                    2443
5040  CONTINUE                                                            2443
         AG_TITLE='IBMY'                                                  2443
         AG_MODULE=MODULE                                                 2443
         AG_MARK='V00'                                                    2443
         CALL AGSPUSH                                                     2443
         AG_MODULE=MODULE                                                 2443
C    *                                                                    2443
C    Geant MATERIAL : AIR ===> inherited arguments used <===              2444
         CALL AGSRESET                                                    2444
         AG_TITLE = 'AIR'                                                 2444
         AG_EXNAME = 'MATERIAL'                                           2444
         AG_PARLIST = 'NONE'                                              2444
         CALL AXMATERIAL                                                  2444
C    *                                                                    2444
C    Geant ATTRIBUTE : IBMY ===> SEEN=0 COLO=1 SERIAL=ISTLAYER <===       2444
         CALL AGSRESET                                                    2445
         AG_SEEN = 0                                                      2445
         AG_COLO = 1                                                      2445
         AG_SERIAL = ISTLAYER                                             2445
         AG_TITLE = 'IBMY'                                                2445
         AG_EXNAME = 'ATTRIBUTE'                                          2445
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  2445
         CALL AXATTRIBUTE                                                 2445
C    *                                                                    2445
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  2449
C    LLENGTH/2.0 <===                                                     2449
         CALL AGSRESET                                                    2449
         AG_RMIN = ISMG_RIN                                               2449
         AG_RMAX = ISMG_ROUT                                              2449
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     2449
         AG_TITLE = 'TUBE'                                                2449
         AG_EXNAME = 'SHAPE'                                              2449
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      2449
         CALL AXSHAPE                                                     2449
C    *                                                                    2449
         WRITE(*,*) '===>GEOINFO/istbgeo: Creating IST layer',            2452
     *   ISBG_LAYER,' Rin=',ISMG_RIN,' Rout=',ISMG_ROUT                   2452
C    *                                                                    2453
         NL=1                                                             2453
            GO TO 5063                                                    2453
5061        NL=NL+1                                                       2453
5063        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5062                         2453
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                2453
C       BASE TILT, TO BE FURTHER CORRECTED                                2455
            ANGLE = (360.0/ISBG_NLADDER)*NL                               2455
*       GvN Offset perpendicular to the length of the module/ladder
*       this to move the midpoint of the sensors back on the required
*       radius after the tilting
            RLAD = ISBG_R+ISBG_PPEROFFSET                                 2460
*       Individual ladders can be individually tilted by using
*       the aOffset parameter (angular offset), and the pOffset
*       (position offset), which is the individual lateral
*       displacement.
            ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                        2467
*       The anglePos defines the POSITION of the center of the ladder
*       in space, along the lines of x=r*cos(...), y=r*sin(...)
*       have to correct and convert to radians:
C       SEE ABOVE COMMENT                                                 2473
            ANGLEPOS = ANGLE*RADDEG - ANGLECORR                           2473
            TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                      2474
C       Create IBAM :                                                     2476
C       Call To Local Procedure IBAM                                      2476
            ASSIGN 5080 TO BLOCK_IBAM                                     2476
            GO TO  5070                                                   2476
5080        CONTINUE                                                      2476
C       *                                                                 2476
C       Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(ANG  2480
C       LEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===                   2480
            CALL AGSRESET                                                 2480
            AG_X = TRUER*COS(ANGLEPOS)                                    2480
            AG_Y = TRUER*SIN(ANGLEPOS)                                    2480
            AG_Z = 0.0                                                    2480
            AG_ALPHAN=AG_ALPHAN+1                                         2480
            AG_ALPHAK(AG_ALPHAN)=3                                        2480
            AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                       2480
            AG_TITLE = 'IBAM'                                             2480
            AG_EXNAME = 'POSITION'                                        2480
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   2480
            CALL AXPOSITION                                               2480
C       *                                                                 2480
         GO TO 5061                                                       2482
5062     CONTINUE                                                         2482
*     place 2 support rings at both ends of the ladders
C    Create ISRI :                                                        2485
C    Call To Local Procedure ISRI                                         2485
         ASSIGN 5100 TO BLOCK_ISRI                                        2485
         GO TO  5090                                                      2485
5100     CONTINUE                                                         2485
C    *                                                                    2485
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  2488
C    R_LENGTH/2.0) <===                                                   2488
         CALL AGSRESET                                                    2488
         AG_X = 0.0                                                       2488
         AG_Y = 0.0                                                       2488
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                     2488
         AG_TITLE = 'ISRI'                                                2488
         AG_EXNAME = 'POSITION'                                           2488
         AG_PARLIST = 'X_Y_Z'                                             2488
         CALL AXPOSITION                                                  2488
C    *                                                                    2488
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  2488
C    RR_LENGTH/2.0) <===                                                  2488
         CALL AGSRESET                                                    2491
         AG_X = 0.0                                                       2491
         AG_Y = 0.0                                                       2491
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                    2491
         AG_TITLE = 'ISRI'                                                2491
         AG_EXNAME = 'POSITION'                                           2491
         AG_PARLIST = 'X_Y_Z'                                             2491
         CALL AXPOSITION                                                  2491
C    *                                                                    2491
5041  CALL AGSPOPB                                                        2493
      GO TO BLOCK_IBMY, (5040 ,5050)                                      2493
C End of Local Procedure                                                  2493
* -----------------------------------------------------------------------------
* -----------------------------------------------------------------------------
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              2499
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             2499
5070  CONTINUE                                                            2499
         AG_TITLE='IBAM'                                                  2499
         AG_MODULE=MODULE                                                 2499
         AG_MARK='V00'                                                    2499
         CALL AGSPUSH                                                     2499
         AG_MODULE=MODULE                                                 2499
C    *                                                                    2499
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=1 <===                       2500
         CALL AGSRESET                                                    2500
         AG_SEEN = 0                                                      2500
         AG_COLO = 1                                                      2500
         AG_TITLE = 'IBAM'                                                2500
         AG_EXNAME = 'ATTRIBUTE'                                          2500
         AG_PARLIST = 'SEEN_COLO'                                         2500
         CALL AXATTRIBUTE                                                 2500
C    *                                                                    2500
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_LADDERTHK/2.  2504
C    0 DZ = ISBG_LENGTH/2.0 <===                                          2504
         CALL AGSRESET                                                    2504
         AG_DX = ISBG_LADDERWIDTH/2.0                                     2504
         AG_DY = ISBG_LADDERTHK/2.0                                       2504
         AG_DZ = ISBG_LENGTH/2.0                                          2504
         AG_TITLE = 'BOX'                                                 2504
         AG_EXNAME = 'SHAPE'                                              2504
         AG_PARLIST = 'DX_DY_DZ'                                          2504
         CALL AXSHAPE                                                     2504
C    *                                                                    2504
C    use ISHY bank                                                        2506
         BPATH_ISHY='ISHY*'                                               2506
         IDNUM_ISHY(1)=0                                                  2506
         ISHY_VERSION=1                                                   2506
         CALL AGDGETP('ISTBGEO4','*',-999,'ISHY',NISHY_VERSION,           2506
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     2506
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                2506
C    Create ISKH :                                                        2507
C    Call To Local Procedure ISKH                                         2507
         ASSIGN 5120 TO BLOCK_ISKH                                        2507
         GO TO  5110                                                      2507
5120     CONTINUE                                                         2507
C    *                                                                    2507
C    Create ISCL :                                                        2508
C    Call To Local Procedure ISCL                                         2508
         ASSIGN 5140 TO BLOCK_ISCL                                        2508
         GO TO  5130                                                      2508
5140     CONTINUE                                                         2508
C    *                                                                    2508
C    Create IBLM :                                                        2509
C    Call To Local Procedure IBLM                                         2509
         ASSIGN 5160 TO BLOCK_IBLM                                        2509
         GO TO  5150                                                      2509
5160     CONTINUE                                                         2509
C    *                                                                    2509
C    *                                                                    2510
         NU=1                                                             2510
            GO TO 5173                                                    2510
5171        NU=NU+1                                                       2510
5173        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5172                           2510
* --    IST modules
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -ISBG_LENGTH/2.0+ISBG  2514
C       _SENSORWIDTH*(NU-0.5) <===                                        2514
            CALL AGSRESET                                                 2514
            AG_X = 0.0                                                    2514
            AG_Y = 0.0                                                    2514
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2514
            AG_TITLE = 'IBLM'                                             2514
            AG_EXNAME = 'POSITION'                                        2514
            AG_PARLIST = 'X_Y_Z'                                          2514
            CALL AXPOSITION                                               2514
C       *                                                                 2514
* --    Dummy readout cables (Kapton+Copper) stacked on top of modules
* --    Note that the first part of the cable (the hybrid) is already part of the module
* --    daisy chain cables as: 5 sensors + 4 sensors             (for layer 1)
* --                           5 sensors + 5 sensors + 3 sensors (for layer 2)
C       Check NU>5                                                        2519
            IF (NU.GT.5) THEN                                             2519
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK/2.0  2522
C       ) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===             2522
            CALL AGSRESET                                                 2522
            AG_X = 0.0                                                    2522
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK/2.0)                         2522
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2522
            AG_TITLE = 'ISKH'                                             2522
            AG_EXNAME = 'POSITION'                                        2522
            AG_PARLIST = 'X_Y_Z'                                          2522
            CALL AXPOSITION                                               2522
C       *                                                                 2522
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  2522
C       U_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===    2522
            CALL AGSRESET                                                 2525
            AG_X = 0.0                                                    2525
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)                2525
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2525
            AG_TITLE = 'ISCL'                                             2525
            AG_EXNAME = 'POSITION'                                        2525
            AG_PARLIST = 'X_Y_Z'                                          2525
            CALL AXPOSITION                                               2525
C       *                                                                 2525
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK/2.  2525
C       0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===            2525
            CALL AGSRESET                                                 2528
            AG_X = 0.0                                                    2528
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK/2.0)                        2528
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2528
            AG_TITLE = 'ISKH'                                             2528
            AG_EXNAME = 'POSITION'                                        2528
            AG_PARLIST = 'X_Y_Z'                                          2528
            CALL AXPOSITION                                               2528
C       *                                                                 2528
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  2528
C       CU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===   2528
            CALL AGSRESET                                                 2531
            AG_X = 0.0                                                    2531
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)               2531
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2531
            AG_TITLE = 'ISCL'                                             2531
            AG_EXNAME = 'POSITION'                                        2531
            AG_PARLIST = 'X_Y_Z'                                          2531
            CALL AXPOSITION                                               2531
C       *                                                                 2531
            ENDIF                                                         2531
C       Check NU>10                                                       2533
            IF (NU.GT.10) THEN                                            2533
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  2536
C       U_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.  2536
C       5) <===                                                           2536
            CALL AGSRESET                                                 2536
            AG_X = 0.0                                                    2536
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)       2536
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2536
            AG_TITLE = 'ISKH'                                             2536
            AG_EXNAME = 'POSITION'                                        2536
            AG_PARLIST = 'X_Y_Z'                                          2536
            CALL AXPOSITION                                               2536
C       *                                                                 2536
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  2536
C       U_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWID  2536
C       TH*(NU-0.5) <===                                                  2536
            CALL AGSRESET                                                 2539
            AG_X = 0.0                                                    2539
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/  2539
     *      2.0)                                                          2539
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2539
            AG_TITLE = 'ISCL'                                             2539
            AG_EXNAME = 'POSITION'                                        2539
            AG_PARLIST = 'X_Y_Z'                                          2539
            CALL AXPOSITION                                               2539
C       *                                                                 2539
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  2539
C       CU_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0  2539
C       .5) <===                                                          2539
            CALL AGSRESET                                                 2542
            AG_X = 0.0                                                    2542
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)      2542
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2542
            AG_TITLE = 'ISKH'                                             2542
            AG_EXNAME = 'POSITION'                                        2542
            AG_PARLIST = 'X_Y_Z'                                          2542
            CALL AXPOSITION                                               2542
C       *                                                                 2542
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  2542
C       CU_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWI  2542
C       DTH*(NU-0.5) <===                                                 2542
            CALL AGSRESET                                                 2545
            AG_X = 0.0                                                    2545
            AG_Y = -1.0*(MOD_THK/                                         2545
     *      2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/2.0)                  2545
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             2545
            AG_TITLE = 'ISCL'                                             2545
            AG_EXNAME = 'POSITION'                                        2545
            AG_PARLIST = 'X_Y_Z'                                          2545
            CALL AXPOSITION                                               2545
C       *                                                                 2545
            ENDIF                                                         2545
         GO TO 5171                                                       2548
5172     CONTINUE                                                         2548
5071  CALL AGSPOPB                                                        2550
      GO TO BLOCK_IBAM, (5070 ,5080)                                      2550
C End of Local Procedure                                                  2550
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              2553
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               2553
5150  CONTINUE                                                            2553
         AG_TITLE='IBLM'                                                  2553
         AG_MODULE=MODULE                                                 2553
         AG_MARK='V00'                                                    2553
         CALL AGSPUSH                                                     2553
         AG_MODULE=MODULE                                                 2553
C    *                                                                    2553
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=2 SERIAL=ISTLAYER <===       2554
         CALL AGSRESET                                                    2554
         AG_SEEN = 0                                                      2554
         AG_COLO = 2                                                      2554
         AG_SERIAL = ISTLAYER                                             2554
         AG_TITLE = 'IBLM'                                                2554
         AG_EXNAME = 'ATTRIBUTE'                                          2554
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  2554
         CALL AXATTRIBUTE                                                 2554
C    *                                                                    2554
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_SENSATHK/2.0  2558
C     DZ = ISBG_SENSORLNGTH/2.0 <===                                      2558
         CALL AGSRESET                                                    2558
         AG_DX = ISBG_LADDERWIDTH/2.0                                     2558
         AG_DY = ISBG_SENSATHK/2.0                                        2558
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     2558
         AG_TITLE = 'BOX'                                                 2558
         AG_EXNAME = 'SHAPE'                                              2558
         AG_PARLIST = 'DX_DY_DZ'                                          2558
         CALL AXSHAPE                                                     2558
C    *                                                                    2558
* -- Start stacking all the parts of the module
* -- Note that the module are mirror symmetric wrt the x-z plane
* -- with exception of the readout chips (minimize average material!)
* -- Carbon foam
C    use ISAN bank                                                        2565
         BPATH_ISAN='ISAN*'                                               2565
         IDNUM_ISAN(1)=0                                                  2565
         ISAN_VERSION=1                                                   2565
         CALL AGDGETP('ISTBGEO4','*',-999,'ISAN',NISAN_VERSION,           2565
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     2565
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                2565
C    Create ISTP :                                                        2566
C    Call To Local Procedure ISTP                                         2566
         ASSIGN 5190 TO BLOCK_ISTP                                        2566
         GO TO  5180                                                      2566
5190     CONTINUE                                                         2566
C    *                                                                    2566
C    Geant POSITION : ISTP ===> X=0.0 Y=0.0 Z = 0.0 <===                  2569
         CALL AGSRESET                                                    2569
         AG_X = 0.0                                                       2569
         AG_Y = 0.0                                                       2569
         AG_Z = 0.0                                                       2569
         AG_TITLE = 'ISTP'                                                2569
         AG_EXNAME = 'POSITION'                                           2569
         AG_PARLIST = 'X_Y_Z'                                             2569
         CALL AXPOSITION                                                  2569
C    *                                                                    2569
* -- Glue layers between foam and silicon
C    use ISGA bank                                                        2572
         BPATH_ISGA='ISGA*'                                               2572
         IDNUM_ISGA(1)=0                                                  2572
         ISGA_VERSION=1                                                   2572
         CALL AGDGETP('ISTBGEO4','*',-999,'ISGA',NISGA_VERSION,           2572
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2572
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2572
C    Create ISXA :                                                        2573
C    Call To Local Procedure ISXA                                         2573
         ASSIGN 5210 TO BLOCK_ISXA                                        2573
         GO TO  5200                                                      2573
5210     CONTINUE                                                         2573
C    *                                                                    2573
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK/2.0 Z   2576
C    = 0.0 <===                                                           2576
         CALL AGSRESET                                                    2576
         AG_X = 0.0                                                       2576
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK/2.0                             2576
         AG_Z = 0.0                                                       2576
         AG_TITLE = 'ISXA'                                                2576
         AG_EXNAME = 'POSITION'                                           2576
         AG_PARLIST = 'X_Y_Z'                                             2576
         CALL AXPOSITION                                                  2576
C    *                                                                    2576
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK/2.0 Z  2576
C     = 0.0 <===                                                          2576
         CALL AGSRESET                                                    2579
         AG_X = 0.0                                                       2579
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK/2.0                            2579
         AG_Z = 0.0                                                       2579
         AG_TITLE = 'ISXA'                                                2579
         AG_EXNAME = 'POSITION'                                           2579
         AG_PARLIST = 'X_Y_Z'                                             2579
         CALL AXPOSITION                                                  2579
C    *                                                                    2579
* -- Silicon Sensors
C    Create IBSS :                                                        2582
C    Call To Local Procedure IBSS                                         2582
         ASSIGN 5230 TO BLOCK_IBSS                                        2582
         GO TO  5220                                                      2582
5230     CONTINUE                                                         2582
C    *                                                                    2582
C    Geant POSITION : IBSS ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2585
C    ENSORTHK/2.0 Z = 0.0 <===                                            2585
         CALL AGSRESET                                                    2585
         AG_X = 0.0                                                       2585
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK/2.0              2585
         AG_Z = 0.0                                                       2585
         AG_TITLE = 'IBSS'                                                2585
         AG_EXNAME = 'POSITION'                                           2585
         AG_PARLIST = 'X_Y_Z'                                             2585
         CALL AXPOSITION                                                  2585
C    *                                                                    2585
C    Geant POSITION : IBSS ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2585
C    SENSORTHK/2.0 Z = 0.0 ALPHAZ = 180 <===                              2585
         CALL AGSRESET                                                    2589
         AG_X = 0.0                                                       2589
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK/2.0             2589
         AG_Z = 0.0                                                       2589
         AG_ALPHAN=AG_ALPHAN+1                                            2589
         AG_ALPHAK(AG_ALPHAN)=3                                           2589
         AG_ALPHAL(AG_ALPHAN)=180                                         2589
         AG_TITLE = 'IBSS'                                                2589
         AG_EXNAME = 'POSITION'                                           2589
         AG_PARLIST = 'X_Y_Z_ALPHAZ'                                      2589
         CALL AXPOSITION                                                  2589
C    *                                                                    2589
* -- Glue layers between silicon and hybrid
C    use ISGA bank                                                        2592
         BPATH_ISGA='ISGA*'                                               2592
         IDNUM_ISGA(1)=0                                                  2592
         ISGA_VERSION=1                                                   2592
         CALL AGDGETP('ISTBGEO4','*',-999,'ISGA',NISGA_VERSION,           2592
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2592
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2592
C    Create ISXA :                                                        2593
C    Call To Local Procedure ISXA                                         2593
         ASSIGN 5240 TO BLOCK_ISXA                                        2593
         GO TO  5200                                                      2593
5240     CONTINUE                                                         2593
C    *                                                                    2593
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2596
C    ENSORTHK+ISGA_THK/2.0 Z = 0.0 <===                                   2596
         CALL AGSRESET                                                    2596
         AG_X = 0.0                                                       2596
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK/2.0     2596
         AG_Z = 0.0                                                       2596
         AG_TITLE = 'ISXA'                                                2596
         AG_EXNAME = 'POSITION'                                           2596
         AG_PARLIST = 'X_Y_Z'                                             2596
         CALL AXPOSITION                                                  2596
C    *                                                                    2596
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2596
C    SENSORTHK-ISGA_THK/2.0 Z = 0.0 <===                                  2596
         CALL AGSRESET                                                    2599
         AG_X = 0.0                                                       2599
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK/2.0    2599
         AG_Z = 0.0                                                       2599
         AG_TITLE = 'ISXA'                                                2599
         AG_EXNAME = 'POSITION'                                           2599
         AG_PARLIST = 'X_Y_Z'                                             2599
         CALL AXPOSITION                                                  2599
C    *                                                                    2599
* -- Kapton hybrids
C    use ISHY bank                                                        2602
         BPATH_ISHY='ISHY*'                                               2602
         IDNUM_ISHY(1)=0                                                  2602
         ISHY_VERSION=1                                                   2602
         CALL AGDGETP('ISTBGEO4','*',-999,'ISHY',NISHY_VERSION,           2602
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     2602
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                2602
C    Create ISKH :                                                        2603
C    Call To Local Procedure ISKH                                         2603
         ASSIGN 5250 TO BLOCK_ISKH                                        2603
         GO TO  5110                                                      2603
5250     CONTINUE                                                         2603
C    *                                                                    2603
C    Geant POSITION : ISKH ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2606
C    ENSORTHK+ISGA_THK+ISHY_THK/2.0 Z = 0.0 <===                          2606
         CALL AGSRESET                                                    2606
         AG_X = 0.0                                                       2606
         AG_Y = 1.0*ISAN_THK/                                             2606
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK/2.0                2606
         AG_Z = 0.0                                                       2606
         AG_TITLE = 'ISKH'                                                2606
         AG_EXNAME = 'POSITION'                                           2606
         AG_PARLIST = 'X_Y_Z'                                             2606
         CALL AXPOSITION                                                  2606
C    *                                                                    2606
C    Geant POSITION : ISKH ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2606
C    SENSORTHK-ISGA_THK-ISHY_THK/2.0 Z = 0.0 <===                         2606
         CALL AGSRESET                                                    2609
         AG_X = 0.0                                                       2609
         AG_Y = -1.0*ISAN_THK/                                            2609
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK/2.0                2609
         AG_Z = 0.0                                                       2609
         AG_TITLE = 'ISKH'                                                2609
         AG_EXNAME = 'POSITION'                                           2609
         AG_PARLIST = 'X_Y_Z'                                             2609
         CALL AXPOSITION                                                  2609
C    *                                                                    2609
* -- Copper on the hybrid, 10 um total for couple of 5um lines at 50% coverage + ground plane
C    use ISCU bank                                                        2612
         BPATH_ISCU='ISCU*'                                               2612
         IDNUM_ISCU(1)=0                                                  2612
         ISCU_VERSION=1                                                   2612
         CALL AGDGETP('ISTBGEO4','*',-999,'ISCU',NISCU_VERSION,           2612
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     2612
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                2612
C    Create ISCL :                                                        2613
C    Call To Local Procedure ISCL                                         2613
         ASSIGN 5260 TO BLOCK_ISCL                                        2613
         GO TO  5130                                                      2613
5260     CONTINUE                                                         2613
C    *                                                                    2613
C    Geant POSITION : ISCL ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  2616
C    ENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0 Z = 0.0 <===                 2616
         CALL AGSRESET                                                    2616
         AG_X = 0.0                                                       2616
         AG_Y = 1.0*ISAN_THK/                                             2616
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0       2616
         AG_Z = 0.0                                                       2616
         AG_TITLE = 'ISCL'                                                2616
         AG_EXNAME = 'POSITION'                                           2616
         AG_PARLIST = 'X_Y_Z'                                             2616
         CALL AXPOSITION                                                  2616
C    *                                                                    2616
C    Geant POSITION : ISCL ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  2616
C    SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0 Z = 0.0 <===                2616
         CALL AGSRESET                                                    2619
         AG_X = 0.0                                                       2619
         AG_Y = -1.0*ISAN_THK/                                            2619
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0       2619
         AG_Z = 0.0                                                       2619
         AG_TITLE = 'ISCL'                                                2619
         AG_EXNAME = 'POSITION'                                           2619
         AG_PARLIST = 'X_Y_Z'                                             2619
         CALL AXPOSITION                                                  2619
C    *                                                                    2619
* -- Glue layers between hybrid and chip
C    use ISGB bank                                                        2622
         BPATH_ISGB='ISGB*'                                               2622
         IDNUM_ISGB(1)=0                                                  2622
         ISGB_VERSION=1                                                   2622
         CALL AGDGETP('ISTBGEO4','*',-999,'ISGB',NISGB_VERSION,           2622
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     2622
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                2622
C    Create ISLB :                                                        2623
C    Call To Local Procedure ISLB                                         2623
         ASSIGN 5280 TO BLOCK_ISLB                                        2623
         GO TO  5270                                                      2623
5280     CONTINUE                                                         2623
C    *                                                                    2623
C    Geant POSITION : ISLB ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  2626
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  2626
C    _THK+ISGB_THK/2.0 Z = 0.0 <===                                       2626
         CALL AGSRESET                                                    2626
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   2626
         AG_Y = 1.0*ISAN_THK/                                             2626
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          2626
     *   ISGB_THK/2.0                                                     2626
         AG_Z = 0.0                                                       2626
         AG_TITLE = 'ISLB'                                                2626
         AG_EXNAME = 'POSITION'                                           2626
         AG_PARLIST = 'X_Y_Z'                                             2626
         CALL AXPOSITION                                                  2626
C    *                                                                    2626
C    Geant POSITION : ISLB ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  2626
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  2626
C    CU_THK-ISGB_THK/2.0 Z = 0.0 <===                                     2626
         CALL AGSRESET                                                    2629
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  2629
         AG_Y = -1.0*ISAN_THK/                                            2629
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          2629
     *   ISGB_THK/2.0                                                     2629
         AG_Z = 0.0                                                       2629
         AG_TITLE = 'ISLB'                                                2629
         AG_EXNAME = 'POSITION'                                           2629
         AG_PARLIST = 'X_Y_Z'                                             2629
         CALL AXPOSITION                                                  2629
C    *                                                                    2629
* -- Readout chips, put at 2mm from the edge of the sensor
C    use ISCG bank                                                        2632
         BPATH_ISCG='ISCG*'                                               2632
         IDNUM_ISCG(1)=0                                                  2632
         ISCG_VERSION=1                                                   2632
         CALL AGDGETP('ISTBGEO4','*',-999,'ISCG',NISCG_VERSION,           2632
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     2632
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                2632
C    Create ISSC :                                                        2633
C    Call To Local Procedure ISSC                                         2633
         ASSIGN 5300 TO BLOCK_ISSC                                        2633
         GO TO  5290                                                      2633
5300     CONTINUE                                                         2633
C    *                                                                    2633
C    Geant POSITION : ISSC ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  2636
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  2636
C    _THK+ISGB_THK+ISCG_THK/2.0 Z = 0.0 <===                              2636
         CALL AGSRESET                                                    2636
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   2636
         AG_Y = 1.0*ISAN_THK/                                             2636
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          2636
     *   ISGB_THK+ISCG_THK/2.0                                            2636
         AG_Z = 0.0                                                       2636
         AG_TITLE = 'ISSC'                                                2636
         AG_EXNAME = 'POSITION'                                           2636
         AG_PARLIST = 'X_Y_Z'                                             2636
         CALL AXPOSITION                                                  2636
C    *                                                                    2636
C    Geant POSITION : ISSC ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  2636
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  2636
C    CU_THK-ISGB_THK-ISCG_THK/2.0 Z = 0.0 <===                            2636
         CALL AGSRESET                                                    2639
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  2639
         AG_Y = -1.0*ISAN_THK/                                            2639
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          2639
     *   ISGB_THK-ISCG_THK/2.0                                            2639
         AG_Z = 0.0                                                       2639
         AG_TITLE = 'ISSC'                                                2639
         AG_EXNAME = 'POSITION'                                           2639
         AG_PARLIST = 'X_Y_Z'                                             2639
         CALL AXPOSITION                                                  2639
C    *                                                                    2639
5151  CALL AGSPOPB                                                        2639
      GO TO BLOCK_IBLM, (5150 ,5160)                                      2640
C End of Local Procedure                                                  2640
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              2643
C IBSS IS THE SILICON SENSOR                                              2643
5220  CONTINUE                                                            2643
         AG_TITLE='IBSS'                                                  2643
         AG_MODULE=MODULE                                                 2643
         AG_MARK='V00'                                                    2643
         CALL AGSPUSH                                                     2643
         AG_MODULE=MODULE                                                 2643
C    *                                                                    2643
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          2644
         CALL AGSRESET                                                    2644
         AG_TITLE = 'SILICON'                                             2644
         AG_EXNAME = 'MATERIAL'                                           2644
         AG_PARLIST = 'NONE'                                              2644
         CALL AXMATERIAL                                                  2644
C    *                                                                    2644
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         2644
         CALL AGSRESET                                                    2645
         AG_ISVOL = 1                                                     2645
         AG_TITLE = 'SENSITIVE'                                           2645
         AG_EXNAME = 'MATERIAL'                                           2645
         AG_PARLIST = 'ISVOL'                                             2645
         CALL AXMATERIAL                                                  2645
C    *                                                                    2645
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=38 <===                      2647
         CALL AGSRESET                                                    2647
         AG_SEEN = 1                                                      2647
         AG_COLO = 38                                                     2647
         AG_TITLE = 'IBSS'                                                2647
         AG_EXNAME = 'ATTRIBUTE'                                          2647
         AG_PARLIST = 'SEEN_COLO'                                         2647
         CALL AXATTRIBUTE                                                 2647
C    *                                                                    2647
C    Geant SHAPE : BOX ===> DX=ISBG_SENSORWIDTH/2.0 DY=ISBG_SENSORTHK/2.  2651
C    0 DZ = ISBG_SENSORLNGTH/2.0 <===                                     2651
         CALL AGSRESET                                                    2651
         AG_DX = ISBG_SENSORWIDTH/2.0                                     2651
         AG_DY = ISBG_SENSORTHK/2.0                                       2651
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     2651
         AG_TITLE = 'BOX'                                                 2651
         AG_EXNAME = 'SHAPE'                                              2651
         AG_PARLIST = 'DX_DY_DZ'                                          2651
         CALL AXSHAPE                                                     2651
C    *                                                                    2651
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  2655
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  2655
C    ,0.001)                                                              2655
         AG_TITLE = 'IBSS'                                                2655
         AG_EXNAME = 'HITS'                                               2655
         AG_TYPE=AG_MAGIC                                                 2655
         CALL AGSDETV('IBSS')                                             2655
C    *                                                                    2655
         AG_PARLIST='Z'                                                   2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = AG_MAGIC                                              2655
         AG_BIN=.001                                                      2655
         AG_OPTION='S'                                                    2655
         AG_FHMIN = AG_MAGIC                                              2655
         AG_FHMAX = AG_MAGIC                                              2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='Y'                                                   2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = AG_MAGIC                                              2655
         AG_BIN=.001                                                      2655
         AG_FHMIN=AG_MAGIC                                                2655
         AG_FHMAX=AG_MAGIC                                                2655
         AG_OPTION='*'                                                    2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='X'                                                   2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = AG_MAGIC                                              2655
         AG_BIN=.001                                                      2655
         AG_FHMIN=AG_MAGIC                                                2655
         AG_FHMAX=AG_MAGIC                                                2655
         AG_OPTION='*'                                                    2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='PTOT'                                                2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = 16                                                    2655
         AG_BIN=AG_MAGIC                                                  2655
         AG_OPTION='*'                                                    2655
         AG_FHMIN = 0                                                     2655
         AG_FHMAX = 100                                                   2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='CX'                                                  2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = 10                                                    2655
         AG_BIN=AG_MAGIC                                                  2655
         AG_FHMIN=AG_MAGIC                                                2655
         AG_FHMAX=AG_MAGIC                                                2655
         AG_OPTION='*'                                                    2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='CY'                                                  2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = 10                                                    2655
         AG_BIN=AG_MAGIC                                                  2655
         AG_FHMIN=AG_MAGIC                                                2655
         AG_FHMAX=AG_MAGIC                                                2655
         AG_OPTION='*'                                                    2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='CZ'                                                  2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = 10                                                    2655
         AG_BIN=AG_MAGIC                                                  2655
         AG_FHMIN=AG_MAGIC                                                2655
         AG_FHMAX=AG_MAGIC                                                2655
         AG_OPTION='*'                                                    2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='SLENG'                                               2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = 16                                                    2655
         AG_BIN=AG_MAGIC                                                  2655
         AG_OPTION='*'                                                    2655
         AG_FHMIN = 0                                                     2655
         AG_FHMAX = 500                                                   2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='TOF'                                                 2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = 16                                                    2655
         AG_BIN=AG_MAGIC                                                  2655
         AG_OPTION='*'                                                    2655
         AG_FHMIN = 0                                                     2655
         AG_FHMAX = 1.E-6                                                 2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='STEP'                                                2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = AG_MAGIC                                              2655
         AG_BIN=.01                                                       2655
         AG_FHMIN=AG_MAGIC                                                2655
         AG_FHMAX=AG_MAGIC                                                2655
         AG_OPTION='*'                                                    2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         AG_PARLIST='ELOSS'                                               2655
         AG_TITLE = 'DETH'                                                2655
         AG_NBITS = 16                                                    2655
         AG_BIN=AG_MAGIC                                                  2655
         AG_OPTION='*'                                                    2655
         AG_FHMIN = 0                                                     2655
         AG_FHMAX = 0.001                                                 2655
         CALL AGSDETH (0)                                                 2655
C    *                                                                    2655
         CALL AGSDETU('IBSS')                                             2655
C    *                                                                    2655
5221  CALL AGSPOPB                                                        2657
      GO TO BLOCK_IBSS, (5220 ,5230)                                      2657
C End of Local Procedure                                                  2657
* -----------------------------------------------------------------------------
C Begin Local Procedure ISKH                                              2660
C ISKH IS THE KAPTON HYBRID                                               2660
5110  CONTINUE                                                            2660
         AG_TITLE='ISKH'                                                  2660
         AG_MODULE=MODULE                                                 2660
         AG_MARK='V00'                                                    2660
         CALL AGSPUSH                                                     2660
         AG_MODULE=MODULE                                                 2660
C    *                                                                    2660
C    Geant ATTRIBUTE : ISKH ===> SEEN=1 COLO=42 <===                      2661
         CALL AGSRESET                                                    2661
         AG_SEEN = 1                                                      2661
         AG_COLO = 42                                                     2661
         AG_TITLE = 'ISKH'                                                2661
         AG_EXNAME = 'ATTRIBUTE'                                          2661
         AG_PARLIST = 'SEEN_COLO'                                         2661
         CALL AXATTRIBUTE                                                 2661
C    *                                                                    2661
C    KAPTON C22-H10-N2-O4                                                 2663
C    Geant COMPONENT : C ===> A=12 Z=6 W=22.0*12.0/366.0 <===             2664
         CALL AGSRESET                                                    2664
         AG_A = 12                                                        2664
         AG_Z = 6                                                         2664
         AG_W = 22.0*12.0/366.0                                           2664
         AG_TITLE = 'C'                                                   2664
         AG_EXNAME = 'COMPONENT'                                          2664
         AG_PARLIST = 'A_Z_W'                                             2664
         CALL AXCOMPONENT                                                 2664
C    *                                                                    2664
C    Geant COMPONENT : H ===> A=1 Z=1 W=10.0*1.0/366.0 <===               2664
         CALL AGSRESET                                                    2665
         AG_A = 1                                                         2665
         AG_Z = 1                                                         2665
         AG_W = 10.0*1.0/366.0                                            2665
         AG_TITLE = 'H'                                                   2665
         AG_EXNAME = 'COMPONENT'                                          2665
         AG_PARLIST = 'A_Z_W'                                             2665
         CALL AXCOMPONENT                                                 2665
C    *                                                                    2665
C    Geant COMPONENT : N ===> A=14 Z=7 W=2.0*14.0/366.0 <===              2665
         CALL AGSRESET                                                    2666
         AG_A = 14                                                        2666
         AG_Z = 7                                                         2666
         AG_W = 2.0*14.0/366.0                                            2666
         AG_TITLE = 'N'                                                   2666
         AG_EXNAME = 'COMPONENT'                                          2666
         AG_PARLIST = 'A_Z_W'                                             2666
         CALL AXCOMPONENT                                                 2666
C    *                                                                    2666
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/366.0 <===              2666
         CALL AGSRESET                                                    2667
         AG_A = 16                                                        2667
         AG_Z = 8                                                         2667
         AG_W = 4.0*16.0/366.0                                            2667
         AG_TITLE = 'O'                                                   2667
         AG_EXNAME = 'COMPONENT'                                          2667
         AG_PARLIST = 'A_Z_W'                                             2667
         CALL AXCOMPONENT                                                 2667
C    *                                                                    2667
C    Geant MIXTURE : KAPTON ===> DENS=1.42 <===                           2667
         CALL AGSRESET                                                    2668
         AG_DENS = 1.42                                                   2668
         AG_TITLE = 'KAPTON'                                              2668
         AG_EXNAME = 'MIXTURE'                                            2668
         AG_PARLIST = 'DENS'                                              2668
         CALL AXMIXTURE                                                   2668
C    *                                                                    2668
C    Geant SHAPE : BOX ===> DX=ISHY_H/2.0 DY=ISHY_THK/2.0 DZ = ISHY_W/2.  2672
C    0 <===                                                               2672
         CALL AGSRESET                                                    2672
         AG_DX = ISHY_H/2.0                                               2672
         AG_DY = ISHY_THK/2.0                                             2672
         AG_DZ = ISHY_W/2.0                                               2672
         AG_TITLE = 'BOX'                                                 2672
         AG_EXNAME = 'SHAPE'                                              2672
         AG_PARLIST = 'DX_DY_DZ'                                          2672
         CALL AXSHAPE                                                     2672
C    *                                                                    2672
5111  CALL AGSPOPB                                                        2674
      GO TO BLOCK_ISKH, (5110 ,5120,5250)                                 2674
C End of Local Procedure                                                  2674
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCL                                              2677
C ISCL IS THE COPPER LAYER ON THE KAPTON HYBRID                           2677
5130  CONTINUE                                                            2677
         AG_TITLE='ISCL'                                                  2677
         AG_MODULE=MODULE                                                 2677
         AG_MARK='V00'                                                    2677
         CALL AGSPUSH                                                     2677
         AG_MODULE=MODULE                                                 2677
C    *                                                                    2677
C    Geant ATTRIBUTE : ISCL ===> SEEN=1 COLO=46 <===                      2678
         CALL AGSRESET                                                    2678
         AG_SEEN = 1                                                      2678
         AG_COLO = 46                                                     2678
         AG_TITLE = 'ISCL'                                                2678
         AG_EXNAME = 'ATTRIBUTE'                                          2678
         AG_PARLIST = 'SEEN_COLO'                                         2678
         CALL AXATTRIBUTE                                                 2678
C    *                                                                    2678
C    Geant MATERIAL : COPPER ===> inherited arguments used <===           2680
         CALL AGSRESET                                                    2680
         AG_TITLE = 'COPPER'                                              2680
         AG_EXNAME = 'MATERIAL'                                           2680
         AG_PARLIST = 'NONE'                                              2680
         CALL AXMATERIAL                                                  2680
C    *                                                                    2680
C    Geant SHAPE : BOX ===> DX=ISCU_H/2.0 DY=ISCU_THK/2.0 DZ = ISCU_W/2.  2684
C    0 <===                                                               2684
         CALL AGSRESET                                                    2684
         AG_DX = ISCU_H/2.0                                               2684
         AG_DY = ISCU_THK/2.0                                             2684
         AG_DZ = ISCU_W/2.0                                               2684
         AG_TITLE = 'BOX'                                                 2684
         AG_EXNAME = 'SHAPE'                                              2684
         AG_PARLIST = 'DX_DY_DZ'                                          2684
         CALL AXSHAPE                                                     2684
C    *                                                                    2684
5131  CALL AGSPOPB                                                        2686
      GO TO BLOCK_ISCL, (5130 ,5140,5260)                                 2686
C End of Local Procedure                                                  2686
* -----------------------------------------------------------------------------
C Begin Local Procedure ISTP                                              2689
C ISTP IS THE CARBON FOAM                                                 2689
5180  CONTINUE                                                            2689
         AG_TITLE='ISTP'                                                  2689
         AG_MODULE=MODULE                                                 2689
         AG_MARK='V00'                                                    2689
         CALL AGSPUSH                                                     2689
         AG_MODULE=MODULE                                                 2689
C    *                                                                    2689
C    Geant ATTRIBUTE : ISTP ===> SEEN=1 COLO=13 <===                      2690
         CALL AGSRESET                                                    2690
         AG_SEEN = 1                                                      2690
         AG_COLO = 13                                                     2690
         AG_TITLE = 'ISTP'                                                2690
         AG_EXNAME = 'ATTRIBUTE'                                          2690
         AG_PARLIST = 'SEEN_COLO'                                         2690
         CALL AXATTRIBUTE                                                 2690
C    *                                                                    2690
C    CARBON FOAM DENSITY 0.24                                             2692
C    0.1 COMES FROM 4-5% OF CARBON DENSITY FOR CARBON FOAM                2693
C    0.24 IS WHEN WE ARTICIALLY INCREASE THE DENSITY TO SQUEEZE INTO 1.6  2694
C    86 MM                                                                2694
C    BETWEEN THE SENSORS                                                  2695
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        2696
         CALL AGSRESET                                                    2696
         AG_A = 12                                                        2696
         AG_Z = 6                                                         2696
         AG_W = 0.05                                                      2696
         AG_TITLE = 'C'                                                   2696
         AG_EXNAME = 'COMPONENT'                                          2696
         AG_PARLIST = 'A_Z_W'                                             2696
         CALL AXCOMPONENT                                                 2696
C    *                                                                    2696
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        2696
         CALL AGSRESET                                                    2697
         AG_A = 14                                                        2697
         AG_Z = 7                                                         2697
         AG_W = 0.95                                                      2697
         AG_TITLE = 'N'                                                   2697
         AG_EXNAME = 'COMPONENT'                                          2697
         AG_PARLIST = 'A_Z_W'                                             2697
         CALL AXCOMPONENT                                                 2697
C    *                                                                    2697
C    Geant MIXTURE : CFOAM ===> DENS=0.24 <===                            2697
         CALL AGSRESET                                                    2698
         AG_DENS = 0.24                                                   2698
         AG_TITLE = 'CFOAM'                                               2698
         AG_EXNAME = 'MIXTURE'                                            2698
         AG_PARLIST = 'DENS'                                              2698
         CALL AXMIXTURE                                                   2698
C    *                                                                    2698
C    Geant SHAPE : BOX ===> DX=ISAN_H/2.0 DY=ISAN_THK/2.0 DZ = ISAN_W/2.  2702
C    0 <===                                                               2702
         CALL AGSRESET                                                    2702
         AG_DX = ISAN_H/2.0                                               2702
         AG_DY = ISAN_THK/2.0                                             2702
         AG_DZ = ISAN_W/2.0                                               2702
         AG_TITLE = 'BOX'                                                 2702
         AG_EXNAME = 'SHAPE'                                              2702
         AG_PARLIST = 'DX_DY_DZ'                                          2702
         CALL AXSHAPE                                                     2702
C    *                                                                    2702
5181  CALL AGSPOPB                                                        2704
      GO TO BLOCK_ISTP, (5180 ,5190)                                      2704
C End of Local Procedure                                                  2704
* -----------------------------------------------------------------------------
C Begin Local Procedure ISSC                                              2707
C ISSC IS THE READOUT CHIP                                                2707
5290  CONTINUE                                                            2707
         AG_TITLE='ISSC'                                                  2707
         AG_MODULE=MODULE                                                 2707
         AG_MARK='V00'                                                    2707
         CALL AGSPUSH                                                     2707
         AG_MODULE=MODULE                                                 2707
C    *                                                                    2707
C    Geant ATTRIBUTE : ISSC ===> SEEN=1 COLO=37 <===                      2708
         CALL AGSRESET                                                    2708
         AG_SEEN = 1                                                      2708
         AG_COLO = 37                                                     2708
         AG_TITLE = 'ISSC'                                                2708
         AG_EXNAME = 'ATTRIBUTE'                                          2708
         AG_PARLIST = 'SEEN_COLO'                                         2708
         CALL AXATTRIBUTE                                                 2708
C    *                                                                    2708
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          2710
         CALL AGSRESET                                                    2710
         AG_TITLE = 'SILICON'                                             2710
         AG_EXNAME = 'MATERIAL'                                           2710
         AG_PARLIST = 'NONE'                                              2710
         CALL AXMATERIAL                                                  2710
C    *                                                                    2710
C    Geant SHAPE : BOX ===> DX=ISCG_W/2.0 DY=ISCG_THK/2.0 DZ = ISCG_H/2.  2714
C    0 <===                                                               2714
         CALL AGSRESET                                                    2714
         AG_DX = ISCG_W/2.0                                               2714
         AG_DY = ISCG_THK/2.0                                             2714
         AG_DZ = ISCG_H/2.0                                               2714
         AG_TITLE = 'BOX'                                                 2714
         AG_EXNAME = 'SHAPE'                                              2714
         AG_PARLIST = 'DX_DY_DZ'                                          2714
         CALL AXSHAPE                                                     2714
C    *                                                                    2714
5291  CALL AGSPOPB                                                        2716
      GO TO BLOCK_ISSC, (5290 ,5300)                                      2716
C End of Local Procedure                                                  2716
* -----------------------------------------------------------------------------
C Begin Local Procedure ISXA                                              2719
C ISXA IS THE LARGE GLUE LAYER BETWEEN CARBON FOAM AND SENSOR (AND SENSO  2719
C R AND HYBRID)                                                           2719
5200  CONTINUE                                                            2719
         AG_TITLE='ISXA'                                                  2719
         AG_MODULE=MODULE                                                 2719
         AG_MARK='V00'                                                    2719
         CALL AGSPUSH                                                     2719
         AG_MODULE=MODULE                                                 2719
C    *                                                                    2719
C    Geant ATTRIBUTE : ISXA ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      2720
         CALL AGSRESET                                                    2720
         AG_SEEN = 1                                                      2720
         AG_COLO = 11                                                     2720
         AG_SERIAL = ISTLAYER                                             2720
         AG_TITLE = 'ISXA'                                                2720
         AG_EXNAME = 'ATTRIBUTE'                                          2720
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  2720
         CALL AXATTRIBUTE                                                 2720
C    *                                                                    2720
C    EPOXY C8-H14-O4                                                      2722
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              2723
         CALL AGSRESET                                                    2723
         AG_A = 12                                                        2723
         AG_Z = 6                                                         2723
         AG_W = 8.0*12.0/174.0                                            2723
         AG_TITLE = 'C'                                                   2723
         AG_EXNAME = 'COMPONENT'                                          2723
         AG_PARLIST = 'A_Z_W'                                             2723
         CALL AXCOMPONENT                                                 2723
C    *                                                                    2723
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               2723
         CALL AGSRESET                                                    2724
         AG_A = 1                                                         2724
         AG_Z = 1                                                         2724
         AG_W = 14.0*1.0/174.0                                            2724
         AG_TITLE = 'H'                                                   2724
         AG_EXNAME = 'COMPONENT'                                          2724
         AG_PARLIST = 'A_Z_W'                                             2724
         CALL AXCOMPONENT                                                 2724
C    *                                                                    2724
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              2724
         CALL AGSRESET                                                    2725
         AG_A = 16                                                        2725
         AG_Z = 8                                                         2725
         AG_W = 4.0*16.0/174.0                                            2725
         AG_TITLE = 'O'                                                   2725
         AG_EXNAME = 'COMPONENT'                                          2725
         AG_PARLIST = 'A_Z_W'                                             2725
         CALL AXCOMPONENT                                                 2725
C    *                                                                    2725
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             2725
         CALL AGSRESET                                                    2726
         AG_DENS = 1.3                                                    2726
         AG_TITLE = 'EPOXY'                                               2726
         AG_EXNAME = 'MIXTURE'                                            2726
         AG_PARLIST = 'DENS'                                              2726
         CALL AXMIXTURE                                                   2726
C    *                                                                    2726
C    Geant SHAPE : BOX ===> DX=ISGA_W/2.0 DY=ISGA_THK/2.0 DZ = ISGA_H/2.  2730
C    0 <===                                                               2730
         CALL AGSRESET                                                    2730
         AG_DX = ISGA_W/2.0                                               2730
         AG_DY = ISGA_THK/2.0                                             2730
         AG_DZ = ISGA_H/2.0                                               2730
         AG_TITLE = 'BOX'                                                 2730
         AG_EXNAME = 'SHAPE'                                              2730
         AG_PARLIST = 'DX_DY_DZ'                                          2730
         CALL AXSHAPE                                                     2730
C    *                                                                    2730
5201  CALL AGSPOPB                                                        2732
      GO TO BLOCK_ISXA, (5200 ,5210,5240)                                 2732
C End of Local Procedure                                                  2732
* -----------------------------------------------------------------------------
C Begin Local Procedure ISLB                                              2735
C ISLB IS THE SMALL GLUE LAYER BETWEEN HYBRID AND CHIP                    2735
5270  CONTINUE                                                            2735
         AG_TITLE='ISLB'                                                  2735
         AG_MODULE=MODULE                                                 2735
         AG_MARK='V00'                                                    2735
         CALL AGSPUSH                                                     2735
         AG_MODULE=MODULE                                                 2735
C    *                                                                    2735
C    Geant ATTRIBUTE : ISLB ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      2736
         CALL AGSRESET                                                    2736
         AG_SEEN = 1                                                      2736
         AG_COLO = 11                                                     2736
         AG_SERIAL = ISTLAYER                                             2736
         AG_TITLE = 'ISLB'                                                2736
         AG_EXNAME = 'ATTRIBUTE'                                          2736
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  2736
         CALL AXATTRIBUTE                                                 2736
C    *                                                                    2736
C    EPOXY C8-H14-O4                                                      2738
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              2739
         CALL AGSRESET                                                    2739
         AG_A = 12                                                        2739
         AG_Z = 6                                                         2739
         AG_W = 8.0*12.0/174.0                                            2739
         AG_TITLE = 'C'                                                   2739
         AG_EXNAME = 'COMPONENT'                                          2739
         AG_PARLIST = 'A_Z_W'                                             2739
         CALL AXCOMPONENT                                                 2739
C    *                                                                    2739
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               2739
         CALL AGSRESET                                                    2740
         AG_A = 1                                                         2740
         AG_Z = 1                                                         2740
         AG_W = 14.0*1.0/174.0                                            2740
         AG_TITLE = 'H'                                                   2740
         AG_EXNAME = 'COMPONENT'                                          2740
         AG_PARLIST = 'A_Z_W'                                             2740
         CALL AXCOMPONENT                                                 2740
C    *                                                                    2740
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              2740
         CALL AGSRESET                                                    2741
         AG_A = 16                                                        2741
         AG_Z = 8                                                         2741
         AG_W = 4.0*16.0/174.0                                            2741
         AG_TITLE = 'O'                                                   2741
         AG_EXNAME = 'COMPONENT'                                          2741
         AG_PARLIST = 'A_Z_W'                                             2741
         CALL AXCOMPONENT                                                 2741
C    *                                                                    2741
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             2741
         CALL AGSRESET                                                    2742
         AG_DENS = 1.3                                                    2742
         AG_TITLE = 'EPOXY'                                               2742
         AG_EXNAME = 'MIXTURE'                                            2742
         AG_PARLIST = 'DENS'                                              2742
         CALL AXMIXTURE                                                   2742
C    *                                                                    2742
C    Geant SHAPE : BOX ===> DX=ISGB_W/2.0 DY=ISGB_THK/2.0 DZ = ISGB_H/2.  2746
C    0 <===                                                               2746
         CALL AGSRESET                                                    2746
         AG_DX = ISGB_W/2.0                                               2746
         AG_DY = ISGB_THK/2.0                                             2746
         AG_DZ = ISGB_H/2.0                                               2746
         AG_TITLE = 'BOX'                                                 2746
         AG_EXNAME = 'SHAPE'                                              2746
         AG_PARLIST = 'DX_DY_DZ'                                          2746
         CALL AXSHAPE                                                     2746
C    *                                                                    2746
5271  CALL AGSPOPB                                                        2748
      GO TO BLOCK_ISLB, (5270 ,5280)                                      2748
C End of Local Procedure                                                  2748
* -----------------------------------------------------------------------------
C Begin Local Procedure ISRI                                              2751
C ISRI IS THE SUPPORT RING FOR THE LAYERS                                 2751
5090  CONTINUE                                                            2751
         AG_TITLE='ISRI'                                                  2751
         AG_MODULE=MODULE                                                 2751
         AG_MARK='V00'                                                    2751
         CALL AGSPUSH                                                     2751
         AG_MODULE=MODULE                                                 2751
C    *                                                                    2751
C    Geant ATTRIBUTE : ISRA ===> SEEN=1 COLO=3 <===                       2752
         CALL AGSRESET                                                    2752
         AG_SEEN = 1                                                      2752
         AG_COLO = 3                                                      2752
         AG_TITLE = 'ISRA'                                                2752
         AG_EXNAME = 'ATTRIBUTE'                                          2752
         AG_PARLIST = 'SEEN_COLO'                                         2752
         CALL AXATTRIBUTE                                                 2752
C    *                                                                    2752
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        2754
         CALL AGSRESET                                                    2754
         AG_A = 12                                                        2754
         AG_Z = 6                                                         2754
         AG_W = 0.05                                                      2754
         AG_TITLE = 'C'                                                   2754
         AG_EXNAME = 'COMPONENT'                                          2754
         AG_PARLIST = 'A_Z_W'                                             2754
         CALL AXCOMPONENT                                                 2754
C    *                                                                    2754
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        2754
         CALL AGSRESET                                                    2755
         AG_A = 14                                                        2755
         AG_Z = 7                                                         2755
         AG_W = 0.95                                                      2755
         AG_TITLE = 'N'                                                   2755
         AG_EXNAME = 'COMPONENT'                                          2755
         AG_PARLIST = 'A_Z_W'                                             2755
         CALL AXCOMPONENT                                                 2755
C    *                                                                    2755
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            2755
         CALL AGSRESET                                                    2756
         AG_DENS = 0.10                                                   2756
         AG_TITLE = 'CFOAM'                                               2756
         AG_EXNAME = 'MIXTURE'                                            2756
         AG_PARLIST = 'DENS'                                              2756
         CALL AXMIXTURE                                                   2756
C    *                                                                    2756
C    Geant SHAPE : TUBE ===> RMIN=ISRR_RIN RMAX=ISRR_ROUT DZ = ISRR_LENG  2760
C    TH/2.0 <===                                                          2760
         CALL AGSRESET                                                    2760
         AG_RMIN = ISRR_RIN                                               2760
         AG_RMAX = ISRR_ROUT                                              2760
         AG_DZ = ISRR_LENGTH/2.0                                          2760
         AG_TITLE = 'TUBE'                                                2760
         AG_EXNAME = 'SHAPE'                                              2760
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      2760
         CALL AXSHAPE                                                     2760
C    *                                                                    2760
5091  CALL AGSPOPB                                                        2762
      GO TO BLOCK_ISRI, (5090 ,5100)                                      2762
C End of Local Procedure                                                  2762
* -----------------------------------------------------------------------------
* -------------------------------------------------------
      END                                                                 2767
* $Id: istbgeo5.g,v 1.1 2006/12/18 02:36:00 potekhin Exp $
* $Log: istbgeo5.g,v $
* Revision 1.1  2006/12/18 02:36:00  potekhin
* Two layer, mid layer at 9.5 cm
*
*****************************************************************
* HFT+IST1+IST2 configuration
*****************************************************************
      SUBROUTINE ISTBGEO5                                                 2776
C ISTBGEO5 IS THE GEOMETRY OF THE INNER SILICON TRACKER                   2776
      IMPLICIT NONE                                                       2776
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       2776
      DATA MODULE/'ISTBGEO5'/, BANK_TITLE/'*'/                            2776
      DATA MCOMMENT/'IS THE GEOMETRY OF THE INNER SILICON TRACKER'/       2776
      LOGICAL FIRST                                                       2776
      DATA FIRST/.TRUE./                                                  2776
      SAVE FIRST                                                          2776
      INTEGER JUMPAD                                                      2776
      EXTERNAL JUMPAD                                                     2776
      INTEGER OK                                                          2776
      PARAMETER (OK=0)                                                    2776
      INTEGER AG_I,AG_J                                                   2776
      SAVE AG_I,AG_J                                                      2776
C CREATED 12/12/06                                                        2776
      DATA AG_I/0/,AG_J/0/                                                2777
      CHARACTER*40 CREATED /'12/12/06'/                                   2777
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  2777
C AUTHOR GERRIT VAN NIEUWENHUIZEN                                         2777
      CHARACTER*40 AUTHOR /'GERRIT VAN NIEUWENHUIZEN'/                    2778
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  2778
*****************************************************************
C - Advanced Geant interface                                              2780
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      2780
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       2780
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         2780
     *AG_OPTION,AG_ORT,AG_MARK                                            2780
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         2780
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     2780
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     2780
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    2780
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          2780
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   2780
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     2780
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        2780
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   2780
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 2780
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     2780
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       2780
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        2780
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       2780
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       2780
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       2780
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         2780
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     2780
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       2780
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   2780
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       2780
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     2780
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          2780
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         2780
     *-696969,AG_LDETU=250)                                               2780
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    2780
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  2780
     *AG_IMFLD,AG_ISIMU                                                   2780
C Inherited variables a: saved during internal calls                      2780
C b: reset at the entry in a block and then saved                         2780
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        2780
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       2780
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         2780
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     2780
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       2780
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         2780
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           2780
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        2780
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        2780
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            2780
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           2780
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    2780
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      2780
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           2780
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          2780
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                2780
C local variables valid inside same block                                 2780
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       2780
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  2780
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         2780
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    2780
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          2780
     *AG_OPTION                                                           2780
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        2780
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             2780
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              2780
C temporarly                                                              2780
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           2780
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    2780
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       2780
     *AG_HY)                                                              2780
      REAL MIL_P,INCH_P                                                   2780
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               2780
C - GEANT description of logical units                                    2780
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            2780
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      2780
      COMMON/GCMAIL/ CHMAIL                                               2780
      CHARACTER*132 CHMAIL                                                2780
* ---
      REAL ANGLE, ANGLEPOS, ANGLECORR, TRUER, RADDEG, RLAD                2782
      INTEGER NL, LY, NU, CABLE, ISTLAYER                                 2783
      REAL MOD_THK                                                        2784
* ---
      INTEGER BLOCK_IBMO                                                  2788
      INTEGER BLOCK_IBLM                                                  2788
      INTEGER BLOCK_IBAM                                                  2788
      INTEGER BLOCK_IBSS                                                  2788
      INTEGER BLOCK_ISTP                                                  2788
      INTEGER BLOCK_ISKH                                                  2788
      INTEGER BLOCK_ISCL                                                  2788
      INTEGER BLOCK_ISSC                                                  2788
      INTEGER BLOCK_ISXA                                                  2788
      INTEGER BLOCK_ISLB                                                  2788
      INTEGER BLOCK_ISRI                                                  2788
      INTEGER BLOCK_ISCO                                                  2788
      INTEGER BLOCK_IBMY                                                  2788
      INTEGER BLOCK_IBMW                                                  2788
      INTEGER BLOCK_IBME                                                  2788
C -                                                                       2790
      REAL ISMG_LAYER                                                     2790
      EQUIVALENCE (BANK_ISMG(3),ISMG_LAYER,RE_ISMG_LAYER),                2790
     *(NAMES_ISMG(1),NISMG_LAYER)                                         2790
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_LAYER),(MAP_ISMG(1,1),            2790
     *MISMG_LAYER)                                                        2790
      CHARACTER CISMG_LAYER*40/' '/                                       2790
      CHARACTER NISMG_LAYER*12/'R.LAYER'/                                 2790
      INTEGER MISMG_LAYER(2)/1,1/                                         2790
      REAL RE_ISMG_LAYER                                                  2790
C -                                                                       2790
      REAL ISMG_RIN                                                       2790
      EQUIVALENCE (BANK_ISMG(4),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(2),     2790
     *NISMG_RIN)                                                          2790
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_RIN),(MAP_ISMG(1,2),MISMG_RIN)    2790
      CHARACTER CISMG_RIN*40/' '/                                         2790
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     2790
      INTEGER MISMG_RIN(2)/1,1/                                           2790
      REAL RE_ISMG_RIN                                                    2790
C -                                                                       2790
      REAL ISMG_ROUT                                                      2790
      EQUIVALENCE (BANK_ISMG(5),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(3),   2790
     *NISMG_ROUT)                                                         2790
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_ROUT),(MAP_ISMG(1,3),             2790
     *MISMG_ROUT)                                                         2790
      CHARACTER CISMG_ROUT*40/' '/                                        2790
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   2790
      INTEGER MISMG_ROUT(2)/1,1/                                          2790
      REAL RE_ISMG_ROUT                                                   2790
C -                                                                       2790
      REAL ISMG_TOTALLENGTH                                               2790
      EQUIVALENCE (BANK_ISMG(6),ISMG_TOTALLENGTH,RE_ISMG_TOTALLENGTH),    2790
     *(NAMES_ISMG(4),NISMG_TOTALLENGTH)                                   2790
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_TOTALLENGTH),(MAP_ISMG(1,4),      2790
     *MISMG_TOTALLENGTH)                                                  2790
      CHARACTER CISMG_TOTALLENGTH*40/' '/                                 2790
      CHARACTER NISMG_TOTALLENGTH*12/'R.TOTALLENGTH'/                     2790
      INTEGER MISMG_TOTALLENGTH(2)/1,1/                                   2790
      REAL RE_ISMG_TOTALLENGTH                                            2790
C -                                                                       2790
      REAL ISMG_CODE                                                      2790
      EQUIVALENCE (BANK_ISMG(7),ISMG_CODE,RE_ISMG_CODE),(NAMES_ISMG(5),   2790
     *NISMG_CODE)                                                         2790
      EQUIVALENCE (COMMEN_ISMG(5),CISMG_CODE),(MAP_ISMG(1,5),             2790
     *MISMG_CODE)                                                         2790
      CHARACTER CISMG_CODE*40/' '/                                        2790
      CHARACTER NISMG_CODE*12/'R.CODE'/                                   2790
      INTEGER MISMG_CODE(2)/1,1/                                          2790
      REAL RE_ISMG_CODE                                                   2790
C -                                                                       2790
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                2790
      PARAMETER (LEN_ISMG=7)                                              2790
      PARAMETER (LLEN_ISMG=5)                                             2790
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           2790
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        2790
      DATA IDNUM_ISMG/10*0/                                               2790
      REAL BANK_ISMG(LEN_ISMG)                                            2790
      CHARACTER*60 BPATH_ISMG/' '/                                        2790
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          2790
     *BPATH_ISMG                                                          2790
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             2790
C *                                                                       2790
C -                                                                       2794
      REAL ISBG_LAYER                                                     2794
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                2794
     *(NAMES_ISBG(1),NISBG_LAYER)                                         2794
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            2794
     *MISBG_LAYER)                                                        2794
      CHARACTER CISBG_LAYER*40/' '/                                       2794
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 2794
      INTEGER MISBG_LAYER(2)/1,1/                                         2794
      REAL RE_ISBG_LAYER                                                  2794
C -                                                                       2794
      REAL ISBG_NLADDER                                                   2794
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            2794
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       2794
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          2794
     *MISBG_NLADDER)                                                      2794
      CHARACTER CISBG_NLADDER*40/' '/                                     2794
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             2794
      INTEGER MISBG_NLADDER(2)/1,1/                                       2794
      REAL RE_ISBG_NLADDER                                                2794
C -                                                                       2794
      REAL ISBG_NUNIT                                                     2794
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                2794
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         2794
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            2794
     *MISBG_NUNIT)                                                        2794
      CHARACTER CISBG_NUNIT*40/' '/                                       2794
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 2794
      INTEGER MISBG_NUNIT(2)/1,1/                                         2794
      REAL RE_ISBG_NUNIT                                                  2794
C -                                                                       2794
      REAL ISBG_LENGTH                                                    2794
      EQUIVALENCE (BANK_ISBG(6),ISBG_LENGTH,RE_ISBG_LENGTH),              2794
     *(NAMES_ISBG(4),NISBG_LENGTH)                                        2794
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_LENGTH),(MAP_ISBG(1,4),           2794
     *MISBG_LENGTH)                                                       2794
      CHARACTER CISBG_LENGTH*40/' '/                                      2794
      CHARACTER NISBG_LENGTH*12/'R.LENGTH'/                               2794
      INTEGER MISBG_LENGTH(2)/1,1/                                        2794
      REAL RE_ISBG_LENGTH                                                 2794
C -                                                                       2794
      REAL ISBG_LADDERWIDTH                                               2794
      EQUIVALENCE (BANK_ISBG(7),ISBG_LADDERWIDTH,RE_ISBG_LADDERWIDTH),    2794
     *(NAMES_ISBG(5),NISBG_LADDERWIDTH)                                   2794
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_LADDERWIDTH),(MAP_ISBG(1,5),      2794
     *MISBG_LADDERWIDTH)                                                  2794
      CHARACTER CISBG_LADDERWIDTH*40/' '/                                 2794
      CHARACTER NISBG_LADDERWIDTH*12/'R.LADDERWIDTH'/                     2794
      INTEGER MISBG_LADDERWIDTH(2)/1,1/                                   2794
      REAL RE_ISBG_LADDERWIDTH                                            2794
C -                                                                       2794
      REAL ISBG_LADDERTHK                                                 2794
      EQUIVALENCE (BANK_ISBG(8),ISBG_LADDERTHK,RE_ISBG_LADDERTHK),        2794
     *(NAMES_ISBG(6),NISBG_LADDERTHK)                                     2794
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_LADDERTHK),(MAP_ISBG(1,6),        2794
     *MISBG_LADDERTHK)                                                    2794
      CHARACTER CISBG_LADDERTHK*40/' '/                                   2794
      CHARACTER NISBG_LADDERTHK*12/'R.LADDERTHK'/                         2794
      INTEGER MISBG_LADDERTHK(2)/1,1/                                     2794
      REAL RE_ISBG_LADDERTHK                                              2794
C -                                                                       2794
      REAL ISBG_SENSATHK                                                  2794
      EQUIVALENCE (BANK_ISBG(9),ISBG_SENSATHK,RE_ISBG_SENSATHK),          2794
     *(NAMES_ISBG(7),NISBG_SENSATHK)                                      2794
      EQUIVALENCE (COMMEN_ISBG(7),CISBG_SENSATHK),(MAP_ISBG(1,7),         2794
     *MISBG_SENSATHK)                                                     2794
      CHARACTER CISBG_SENSATHK*40/' '/                                    2794
      CHARACTER NISBG_SENSATHK*12/'R.SENSATHK'/                           2794
      INTEGER MISBG_SENSATHK(2)/1,1/                                      2794
      REAL RE_ISBG_SENSATHK                                               2794
C -                                                                       2794
      REAL ISBG_SPACING                                                   2794
      EQUIVALENCE (BANK_ISBG(10),ISBG_SPACING,RE_ISBG_SPACING),           2794
     *(NAMES_ISBG(8),NISBG_SPACING)                                       2794
      EQUIVALENCE (COMMEN_ISBG(8),CISBG_SPACING),(MAP_ISBG(1,8),          2794
     *MISBG_SPACING)                                                      2794
      CHARACTER CISBG_SPACING*40/' '/                                     2794
      CHARACTER NISBG_SPACING*12/'R.SPACING'/                             2794
      INTEGER MISBG_SPACING(2)/1,1/                                       2794
      REAL RE_ISBG_SPACING                                                2794
C -                                                                       2794
      REAL ISBG_SENSORWIDTH                                               2794
      EQUIVALENCE (BANK_ISBG(11),ISBG_SENSORWIDTH,RE_ISBG_SENSORWIDTH),   2794
     *(NAMES_ISBG(9),NISBG_SENSORWIDTH)                                   2794
      EQUIVALENCE (COMMEN_ISBG(9),CISBG_SENSORWIDTH),(MAP_ISBG(1,9),      2794
     *MISBG_SENSORWIDTH)                                                  2794
      CHARACTER CISBG_SENSORWIDTH*40/' '/                                 2794
      CHARACTER NISBG_SENSORWIDTH*12/'R.SENSORWIDTH'/                     2794
      INTEGER MISBG_SENSORWIDTH(2)/1,1/                                   2794
      REAL RE_ISBG_SENSORWIDTH                                            2794
C -                                                                       2794
      REAL ISBG_SENSORTHK                                                 2794
      EQUIVALENCE (BANK_ISBG(12),ISBG_SENSORTHK,RE_ISBG_SENSORTHK),       2794
     *(NAMES_ISBG(10),NISBG_SENSORTHK)                                    2794
      EQUIVALENCE (COMMEN_ISBG(10),CISBG_SENSORTHK),(MAP_ISBG(1,10),      2794
     *MISBG_SENSORTHK)                                                    2794
      CHARACTER CISBG_SENSORTHK*40/' '/                                   2794
      CHARACTER NISBG_SENSORTHK*12/'R.SENSORTHK'/                         2794
      INTEGER MISBG_SENSORTHK(2)/1,1/                                     2794
      REAL RE_ISBG_SENSORTHK                                              2794
C -                                                                       2794
      REAL ISBG_SENSORLNGTH                                               2794
      EQUIVALENCE (BANK_ISBG(13),ISBG_SENSORLNGTH,RE_ISBG_SENSORLNGTH),   2794
     *(NAMES_ISBG(11),NISBG_SENSORLNGTH)                                  2794
      EQUIVALENCE (COMMEN_ISBG(11),CISBG_SENSORLNGTH),(MAP_ISBG(1,11),    2794
     *MISBG_SENSORLNGTH)                                                  2794
      CHARACTER CISBG_SENSORLNGTH*40/' '/                                 2794
      CHARACTER NISBG_SENSORLNGTH*12/'R.SENSORLNGTH'/                     2794
      INTEGER MISBG_SENSORLNGTH(2)/1,1/                                   2794
      REAL RE_ISBG_SENSORLNGTH                                            2794
C -                                                                       2794
      REAL ISBG_R                                                         2794
      EQUIVALENCE (BANK_ISBG(14),ISBG_R,RE_ISBG_R),(NAMES_ISBG(12),       2794
     *NISBG_R)                                                            2794
      EQUIVALENCE (COMMEN_ISBG(12),CISBG_R),(MAP_ISBG(1,12),MISBG_R)      2794
      CHARACTER CISBG_R*40/' '/                                           2794
      CHARACTER NISBG_R*12/'R.R'/                                         2794
      INTEGER MISBG_R(2)/1,1/                                             2794
      REAL RE_ISBG_R                                                      2794
C -                                                                       2794
      REAL ISBG_A                                                         2794
      EQUIVALENCE (BANK_ISBG(15),ISBG_A,RE_ISBG_A),(NAMES_ISBG(13),       2794
     *NISBG_A)                                                            2794
      EQUIVALENCE (COMMEN_ISBG(13),CISBG_A),(MAP_ISBG(1,13),MISBG_A)      2794
      CHARACTER CISBG_A*40/' '/                                           2794
      CHARACTER NISBG_A*12/'R.A'/                                         2794
      INTEGER MISBG_A(2)/1,1/                                             2794
      REAL RE_ISBG_A                                                      2794
C -                                                                       2794
      REAL ISBG_PPAROFFSET                                                2794
      EQUIVALENCE (BANK_ISBG(16),ISBG_PPAROFFSET,RE_ISBG_PPAROFFSET),     2794
     *(NAMES_ISBG(14),NISBG_PPAROFFSET)                                   2794
      EQUIVALENCE (COMMEN_ISBG(14),CISBG_PPAROFFSET),(MAP_ISBG(1,14),     2794
     *MISBG_PPAROFFSET)                                                   2794
      CHARACTER CISBG_PPAROFFSET*40/' '/                                  2794
      CHARACTER NISBG_PPAROFFSET*12/'R.PPAROFFSET'/                       2794
      INTEGER MISBG_PPAROFFSET(2)/1,1/                                    2794
      REAL RE_ISBG_PPAROFFSET                                             2794
C -                                                                       2794
      REAL ISBG_PPEROFFSET                                                2794
      EQUIVALENCE (BANK_ISBG(17),ISBG_PPEROFFSET,RE_ISBG_PPEROFFSET),     2794
     *(NAMES_ISBG(15),NISBG_PPEROFFSET)                                   2794
      EQUIVALENCE (COMMEN_ISBG(15),CISBG_PPEROFFSET),(MAP_ISBG(1,15),     2794
     *MISBG_PPEROFFSET)                                                   2794
      CHARACTER CISBG_PPEROFFSET*40/' '/                                  2794
      CHARACTER NISBG_PPEROFFSET*12/'R.PPEROFFSET'/                       2794
      INTEGER MISBG_PPEROFFSET(2)/1,1/                                    2794
      REAL RE_ISBG_PPEROFFSET                                             2794
C -                                                                       2794
      REAL ISBG_AOFFSET                                                   2794
      EQUIVALENCE (BANK_ISBG(18),ISBG_AOFFSET,RE_ISBG_AOFFSET),           2794
     *(NAMES_ISBG(16),NISBG_AOFFSET)                                      2794
      EQUIVALENCE (COMMEN_ISBG(16),CISBG_AOFFSET),(MAP_ISBG(1,16),        2794
     *MISBG_AOFFSET)                                                      2794
      CHARACTER CISBG_AOFFSET*40/' '/                                     2794
      CHARACTER NISBG_AOFFSET*12/'R.AOFFSET'/                             2794
      INTEGER MISBG_AOFFSET(2)/1,1/                                       2794
      REAL RE_ISBG_AOFFSET                                                2794
C -                                                                       2794
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                2794
      PARAMETER (LEN_ISBG=18)                                             2794
      PARAMETER (LLEN_ISBG=16)                                            2794
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           2794
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        2794
      DATA IDNUM_ISBG/10*0/                                               2794
      REAL BANK_ISBG(LEN_ISBG)                                            2794
      CHARACTER*60 BPATH_ISBG/' '/                                        2794
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          2794
     *BPATH_ISBG                                                          2794
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             2794
C *                                                                       2794
C -                                                                       2795
      REAL ISAN_VERSION                                                   2795
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            2795
     *(NAMES_ISAN(1),NISAN_VERSION)                                       2795
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          2795
     *MISAN_VERSION)                                                      2795
      CHARACTER CISAN_VERSION*40/' '/                                     2795
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             2795
      INTEGER MISAN_VERSION(2)/1,1/                                       2795
      REAL RE_ISAN_VERSION                                                2795
C -                                                                       2795
      REAL ISAN_W                                                         2795
      EQUIVALENCE (BANK_ISAN(4),ISAN_W,RE_ISAN_W),(NAMES_ISAN(2),         2795
     *NISAN_W)                                                            2795
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_W),(MAP_ISAN(1,2),MISAN_W)        2795
      CHARACTER CISAN_W*40/' '/                                           2795
      CHARACTER NISAN_W*12/'R.W'/                                         2795
      INTEGER MISAN_W(2)/1,1/                                             2795
      REAL RE_ISAN_W                                                      2795
C -                                                                       2795
      REAL ISAN_H                                                         2795
      EQUIVALENCE (BANK_ISAN(5),ISAN_H,RE_ISAN_H),(NAMES_ISAN(3),         2795
     *NISAN_H)                                                            2795
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_H),(MAP_ISAN(1,3),MISAN_H)        2795
      CHARACTER CISAN_H*40/' '/                                           2795
      CHARACTER NISAN_H*12/'R.H'/                                         2795
      INTEGER MISAN_H(2)/1,1/                                             2795
      REAL RE_ISAN_H                                                      2795
C -                                                                       2795
      REAL ISAN_THK                                                       2795
      EQUIVALENCE (BANK_ISAN(6),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(4),     2795
     *NISAN_THK)                                                          2795
      EQUIVALENCE (COMMEN_ISAN(4),CISAN_THK),(MAP_ISAN(1,4),MISAN_THK)    2795
      CHARACTER CISAN_THK*40/' '/                                         2795
      CHARACTER NISAN_THK*12/'R.THK'/                                     2795
      INTEGER MISAN_THK(2)/1,1/                                           2795
      REAL RE_ISAN_THK                                                    2795
C -                                                                       2795
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                2795
      PARAMETER (LEN_ISAN=6)                                              2795
      PARAMETER (LLEN_ISAN=4)                                             2795
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           2795
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        2795
      DATA IDNUM_ISAN/10*0/                                               2795
      REAL BANK_ISAN(LEN_ISAN)                                            2795
      CHARACTER*60 BPATH_ISAN/' '/                                        2795
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          2795
     *BPATH_ISAN                                                          2795
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             2795
C *                                                                       2795
C -                                                                       2796
      REAL ISHY_VERSION                                                   2796
      EQUIVALENCE (BANK_ISHY(3),ISHY_VERSION,RE_ISHY_VERSION),            2796
     *(NAMES_ISHY(1),NISHY_VERSION)                                       2796
      EQUIVALENCE (COMMEN_ISHY(1),CISHY_VERSION),(MAP_ISHY(1,1),          2796
     *MISHY_VERSION)                                                      2796
      CHARACTER CISHY_VERSION*40/' '/                                     2796
      CHARACTER NISHY_VERSION*12/'R.VERSION'/                             2796
      INTEGER MISHY_VERSION(2)/1,1/                                       2796
      REAL RE_ISHY_VERSION                                                2796
C -                                                                       2796
      REAL ISHY_W                                                         2796
      EQUIVALENCE (BANK_ISHY(4),ISHY_W,RE_ISHY_W),(NAMES_ISHY(2),         2796
     *NISHY_W)                                                            2796
      EQUIVALENCE (COMMEN_ISHY(2),CISHY_W),(MAP_ISHY(1,2),MISHY_W)        2796
      CHARACTER CISHY_W*40/' '/                                           2796
      CHARACTER NISHY_W*12/'R.W'/                                         2796
      INTEGER MISHY_W(2)/1,1/                                             2796
      REAL RE_ISHY_W                                                      2796
C -                                                                       2796
      REAL ISHY_H                                                         2796
      EQUIVALENCE (BANK_ISHY(5),ISHY_H,RE_ISHY_H),(NAMES_ISHY(3),         2796
     *NISHY_H)                                                            2796
      EQUIVALENCE (COMMEN_ISHY(3),CISHY_H),(MAP_ISHY(1,3),MISHY_H)        2796
      CHARACTER CISHY_H*40/' '/                                           2796
      CHARACTER NISHY_H*12/'R.H'/                                         2796
      INTEGER MISHY_H(2)/1,1/                                             2796
      REAL RE_ISHY_H                                                      2796
C -                                                                       2796
      REAL ISHY_THK                                                       2796
      EQUIVALENCE (BANK_ISHY(6),ISHY_THK,RE_ISHY_THK),(NAMES_ISHY(4),     2796
     *NISHY_THK)                                                          2796
      EQUIVALENCE (COMMEN_ISHY(4),CISHY_THK),(MAP_ISHY(1,4),MISHY_THK)    2796
      CHARACTER CISHY_THK*40/' '/                                         2796
      CHARACTER NISHY_THK*12/'R.THK'/                                     2796
      INTEGER MISHY_THK(2)/1,1/                                           2796
      REAL RE_ISHY_THK                                                    2796
C -                                                                       2796
      INTEGER LEN_ISHY,LLEN_ISHY,LINK_ISHY                                2796
      PARAMETER (LEN_ISHY=6)                                              2796
      PARAMETER (LLEN_ISHY=4)                                             2796
      INTEGER FLAG_ISHY/0/,MAP_ISHY(2,LLEN_ISHY),IDNUM_ISHY(10)           2796
      CHARACTER NAMES_ISHY(LLEN_ISHY)*12,COMMEN_ISHY(LLEN_ISHY)*40        2796
      DATA IDNUM_ISHY/10*0/                                               2796
      REAL BANK_ISHY(LEN_ISHY)                                            2796
      CHARACTER*60 BPATH_ISHY/' '/                                        2796
      SAVE FLAG_ISHY,MAP_ISHY,IDNUM_ISHY,NAMES_ISHY,COMMEN_ISHY,          2796
     *BPATH_ISHY                                                          2796
      DATA LINK_ISHY/0/,BANK_ISHY/LEN_ISHY*0/                             2796
C *                                                                       2796
C -                                                                       2797
      REAL ISCU_VERSION                                                   2797
      EQUIVALENCE (BANK_ISCU(3),ISCU_VERSION,RE_ISCU_VERSION),            2797
     *(NAMES_ISCU(1),NISCU_VERSION)                                       2797
      EQUIVALENCE (COMMEN_ISCU(1),CISCU_VERSION),(MAP_ISCU(1,1),          2797
     *MISCU_VERSION)                                                      2797
      CHARACTER CISCU_VERSION*40/' '/                                     2797
      CHARACTER NISCU_VERSION*12/'R.VERSION'/                             2797
      INTEGER MISCU_VERSION(2)/1,1/                                       2797
      REAL RE_ISCU_VERSION                                                2797
C -                                                                       2797
      REAL ISCU_W                                                         2797
      EQUIVALENCE (BANK_ISCU(4),ISCU_W,RE_ISCU_W),(NAMES_ISCU(2),         2797
     *NISCU_W)                                                            2797
      EQUIVALENCE (COMMEN_ISCU(2),CISCU_W),(MAP_ISCU(1,2),MISCU_W)        2797
      CHARACTER CISCU_W*40/' '/                                           2797
      CHARACTER NISCU_W*12/'R.W'/                                         2797
      INTEGER MISCU_W(2)/1,1/                                             2797
      REAL RE_ISCU_W                                                      2797
C -                                                                       2797
      REAL ISCU_H                                                         2797
      EQUIVALENCE (BANK_ISCU(5),ISCU_H,RE_ISCU_H),(NAMES_ISCU(3),         2797
     *NISCU_H)                                                            2797
      EQUIVALENCE (COMMEN_ISCU(3),CISCU_H),(MAP_ISCU(1,3),MISCU_H)        2797
      CHARACTER CISCU_H*40/' '/                                           2797
      CHARACTER NISCU_H*12/'R.H'/                                         2797
      INTEGER MISCU_H(2)/1,1/                                             2797
      REAL RE_ISCU_H                                                      2797
C -                                                                       2797
      REAL ISCU_THK                                                       2797
      EQUIVALENCE (BANK_ISCU(6),ISCU_THK,RE_ISCU_THK),(NAMES_ISCU(4),     2797
     *NISCU_THK)                                                          2797
      EQUIVALENCE (COMMEN_ISCU(4),CISCU_THK),(MAP_ISCU(1,4),MISCU_THK)    2797
      CHARACTER CISCU_THK*40/' '/                                         2797
      CHARACTER NISCU_THK*12/'R.THK'/                                     2797
      INTEGER MISCU_THK(2)/1,1/                                           2797
      REAL RE_ISCU_THK                                                    2797
C -                                                                       2797
      INTEGER LEN_ISCU,LLEN_ISCU,LINK_ISCU                                2797
      PARAMETER (LEN_ISCU=6)                                              2797
      PARAMETER (LLEN_ISCU=4)                                             2797
      INTEGER FLAG_ISCU/0/,MAP_ISCU(2,LLEN_ISCU),IDNUM_ISCU(10)           2797
      CHARACTER NAMES_ISCU(LLEN_ISCU)*12,COMMEN_ISCU(LLEN_ISCU)*40        2797
      DATA IDNUM_ISCU/10*0/                                               2797
      REAL BANK_ISCU(LEN_ISCU)                                            2797
      CHARACTER*60 BPATH_ISCU/' '/                                        2797
      SAVE FLAG_ISCU,MAP_ISCU,IDNUM_ISCU,NAMES_ISCU,COMMEN_ISCU,          2797
     *BPATH_ISCU                                                          2797
      DATA LINK_ISCU/0/,BANK_ISCU/LEN_ISCU*0/                             2797
C *                                                                       2797
C -                                                                       2798
      REAL ISCG_VERSION                                                   2798
      EQUIVALENCE (BANK_ISCG(3),ISCG_VERSION,RE_ISCG_VERSION),            2798
     *(NAMES_ISCG(1),NISCG_VERSION)                                       2798
      EQUIVALENCE (COMMEN_ISCG(1),CISCG_VERSION),(MAP_ISCG(1,1),          2798
     *MISCG_VERSION)                                                      2798
      CHARACTER CISCG_VERSION*40/' '/                                     2798
      CHARACTER NISCG_VERSION*12/'R.VERSION'/                             2798
      INTEGER MISCG_VERSION(2)/1,1/                                       2798
      REAL RE_ISCG_VERSION                                                2798
C -                                                                       2798
      REAL ISCG_W                                                         2798
      EQUIVALENCE (BANK_ISCG(4),ISCG_W,RE_ISCG_W),(NAMES_ISCG(2),         2798
     *NISCG_W)                                                            2798
      EQUIVALENCE (COMMEN_ISCG(2),CISCG_W),(MAP_ISCG(1,2),MISCG_W)        2798
      CHARACTER CISCG_W*40/' '/                                           2798
      CHARACTER NISCG_W*12/'R.W'/                                         2798
      INTEGER MISCG_W(2)/1,1/                                             2798
      REAL RE_ISCG_W                                                      2798
C -                                                                       2798
      REAL ISCG_H                                                         2798
      EQUIVALENCE (BANK_ISCG(5),ISCG_H,RE_ISCG_H),(NAMES_ISCG(3),         2798
     *NISCG_H)                                                            2798
      EQUIVALENCE (COMMEN_ISCG(3),CISCG_H),(MAP_ISCG(1,3),MISCG_H)        2798
      CHARACTER CISCG_H*40/' '/                                           2798
      CHARACTER NISCG_H*12/'R.H'/                                         2798
      INTEGER MISCG_H(2)/1,1/                                             2798
      REAL RE_ISCG_H                                                      2798
C -                                                                       2798
      REAL ISCG_THK                                                       2798
      EQUIVALENCE (BANK_ISCG(6),ISCG_THK,RE_ISCG_THK),(NAMES_ISCG(4),     2798
     *NISCG_THK)                                                          2798
      EQUIVALENCE (COMMEN_ISCG(4),CISCG_THK),(MAP_ISCG(1,4),MISCG_THK)    2798
      CHARACTER CISCG_THK*40/' '/                                         2798
      CHARACTER NISCG_THK*12/'R.THK'/                                     2798
      INTEGER MISCG_THK(2)/1,1/                                           2798
      REAL RE_ISCG_THK                                                    2798
C -                                                                       2798
      INTEGER LEN_ISCG,LLEN_ISCG,LINK_ISCG                                2798
      PARAMETER (LEN_ISCG=6)                                              2798
      PARAMETER (LLEN_ISCG=4)                                             2798
      INTEGER FLAG_ISCG/0/,MAP_ISCG(2,LLEN_ISCG),IDNUM_ISCG(10)           2798
      CHARACTER NAMES_ISCG(LLEN_ISCG)*12,COMMEN_ISCG(LLEN_ISCG)*40        2798
      DATA IDNUM_ISCG/10*0/                                               2798
      REAL BANK_ISCG(LEN_ISCG)                                            2798
      CHARACTER*60 BPATH_ISCG/' '/                                        2798
      SAVE FLAG_ISCG,MAP_ISCG,IDNUM_ISCG,NAMES_ISCG,COMMEN_ISCG,          2798
     *BPATH_ISCG                                                          2798
      DATA LINK_ISCG/0/,BANK_ISCG/LEN_ISCG*0/                             2798
C *                                                                       2798
C -                                                                       2799
      REAL ISGA_VERSION                                                   2799
      EQUIVALENCE (BANK_ISGA(3),ISGA_VERSION,RE_ISGA_VERSION),            2799
     *(NAMES_ISGA(1),NISGA_VERSION)                                       2799
      EQUIVALENCE (COMMEN_ISGA(1),CISGA_VERSION),(MAP_ISGA(1,1),          2799
     *MISGA_VERSION)                                                      2799
      CHARACTER CISGA_VERSION*40/' '/                                     2799
      CHARACTER NISGA_VERSION*12/'R.VERSION'/                             2799
      INTEGER MISGA_VERSION(2)/1,1/                                       2799
      REAL RE_ISGA_VERSION                                                2799
C -                                                                       2799
      REAL ISGA_W                                                         2799
      EQUIVALENCE (BANK_ISGA(4),ISGA_W,RE_ISGA_W),(NAMES_ISGA(2),         2799
     *NISGA_W)                                                            2799
      EQUIVALENCE (COMMEN_ISGA(2),CISGA_W),(MAP_ISGA(1,2),MISGA_W)        2799
      CHARACTER CISGA_W*40/' '/                                           2799
      CHARACTER NISGA_W*12/'R.W'/                                         2799
      INTEGER MISGA_W(2)/1,1/                                             2799
      REAL RE_ISGA_W                                                      2799
C -                                                                       2799
      REAL ISGA_H                                                         2799
      EQUIVALENCE (BANK_ISGA(5),ISGA_H,RE_ISGA_H),(NAMES_ISGA(3),         2799
     *NISGA_H)                                                            2799
      EQUIVALENCE (COMMEN_ISGA(3),CISGA_H),(MAP_ISGA(1,3),MISGA_H)        2799
      CHARACTER CISGA_H*40/' '/                                           2799
      CHARACTER NISGA_H*12/'R.H'/                                         2799
      INTEGER MISGA_H(2)/1,1/                                             2799
      REAL RE_ISGA_H                                                      2799
C -                                                                       2799
      REAL ISGA_THK                                                       2799
      EQUIVALENCE (BANK_ISGA(6),ISGA_THK,RE_ISGA_THK),(NAMES_ISGA(4),     2799
     *NISGA_THK)                                                          2799
      EQUIVALENCE (COMMEN_ISGA(4),CISGA_THK),(MAP_ISGA(1,4),MISGA_THK)    2799
      CHARACTER CISGA_THK*40/' '/                                         2799
      CHARACTER NISGA_THK*12/'R.THK'/                                     2799
      INTEGER MISGA_THK(2)/1,1/                                           2799
      REAL RE_ISGA_THK                                                    2799
C -                                                                       2799
      INTEGER LEN_ISGA,LLEN_ISGA,LINK_ISGA                                2799
      PARAMETER (LEN_ISGA=6)                                              2799
      PARAMETER (LLEN_ISGA=4)                                             2799
      INTEGER FLAG_ISGA/0/,MAP_ISGA(2,LLEN_ISGA),IDNUM_ISGA(10)           2799
      CHARACTER NAMES_ISGA(LLEN_ISGA)*12,COMMEN_ISGA(LLEN_ISGA)*40        2799
      DATA IDNUM_ISGA/10*0/                                               2799
      REAL BANK_ISGA(LEN_ISGA)                                            2799
      CHARACTER*60 BPATH_ISGA/' '/                                        2799
      SAVE FLAG_ISGA,MAP_ISGA,IDNUM_ISGA,NAMES_ISGA,COMMEN_ISGA,          2799
     *BPATH_ISGA                                                          2799
      DATA LINK_ISGA/0/,BANK_ISGA/LEN_ISGA*0/                             2799
C *                                                                       2799
C -                                                                       2800
      REAL ISGB_VERSION                                                   2800
      EQUIVALENCE (BANK_ISGB(3),ISGB_VERSION,RE_ISGB_VERSION),            2800
     *(NAMES_ISGB(1),NISGB_VERSION)                                       2800
      EQUIVALENCE (COMMEN_ISGB(1),CISGB_VERSION),(MAP_ISGB(1,1),          2800
     *MISGB_VERSION)                                                      2800
      CHARACTER CISGB_VERSION*40/' '/                                     2800
      CHARACTER NISGB_VERSION*12/'R.VERSION'/                             2800
      INTEGER MISGB_VERSION(2)/1,1/                                       2800
      REAL RE_ISGB_VERSION                                                2800
C -                                                                       2800
      REAL ISGB_W                                                         2800
      EQUIVALENCE (BANK_ISGB(4),ISGB_W,RE_ISGB_W),(NAMES_ISGB(2),         2800
     *NISGB_W)                                                            2800
      EQUIVALENCE (COMMEN_ISGB(2),CISGB_W),(MAP_ISGB(1,2),MISGB_W)        2800
      CHARACTER CISGB_W*40/' '/                                           2800
      CHARACTER NISGB_W*12/'R.W'/                                         2800
      INTEGER MISGB_W(2)/1,1/                                             2800
      REAL RE_ISGB_W                                                      2800
C -                                                                       2800
      REAL ISGB_H                                                         2800
      EQUIVALENCE (BANK_ISGB(5),ISGB_H,RE_ISGB_H),(NAMES_ISGB(3),         2800
     *NISGB_H)                                                            2800
      EQUIVALENCE (COMMEN_ISGB(3),CISGB_H),(MAP_ISGB(1,3),MISGB_H)        2800
      CHARACTER CISGB_H*40/' '/                                           2800
      CHARACTER NISGB_H*12/'R.H'/                                         2800
      INTEGER MISGB_H(2)/1,1/                                             2800
      REAL RE_ISGB_H                                                      2800
C -                                                                       2800
      REAL ISGB_THK                                                       2800
      EQUIVALENCE (BANK_ISGB(6),ISGB_THK,RE_ISGB_THK),(NAMES_ISGB(4),     2800
     *NISGB_THK)                                                          2800
      EQUIVALENCE (COMMEN_ISGB(4),CISGB_THK),(MAP_ISGB(1,4),MISGB_THK)    2800
      CHARACTER CISGB_THK*40/' '/                                         2800
      CHARACTER NISGB_THK*12/'R.THK'/                                     2800
      INTEGER MISGB_THK(2)/1,1/                                           2800
      REAL RE_ISGB_THK                                                    2800
C -                                                                       2800
      INTEGER LEN_ISGB,LLEN_ISGB,LINK_ISGB                                2800
      PARAMETER (LEN_ISGB=6)                                              2800
      PARAMETER (LLEN_ISGB=4)                                             2800
      INTEGER FLAG_ISGB/0/,MAP_ISGB(2,LLEN_ISGB),IDNUM_ISGB(10)           2800
      CHARACTER NAMES_ISGB(LLEN_ISGB)*12,COMMEN_ISGB(LLEN_ISGB)*40        2800
      DATA IDNUM_ISGB/10*0/                                               2800
      REAL BANK_ISGB(LEN_ISGB)                                            2800
      CHARACTER*60 BPATH_ISGB/' '/                                        2800
      SAVE FLAG_ISGB,MAP_ISGB,IDNUM_ISGB,NAMES_ISGB,COMMEN_ISGB,          2800
     *BPATH_ISGB                                                          2800
      DATA LINK_ISGB/0/,BANK_ISGB/LEN_ISGB*0/                             2800
C *                                                                       2800
C -                                                                       2801
      REAL ISRR_LAYER                                                     2801
      EQUIVALENCE (BANK_ISRR(3),ISRR_LAYER,RE_ISRR_LAYER),                2801
     *(NAMES_ISRR(1),NISRR_LAYER)                                         2801
      EQUIVALENCE (COMMEN_ISRR(1),CISRR_LAYER),(MAP_ISRR(1,1),            2801
     *MISRR_LAYER)                                                        2801
      CHARACTER CISRR_LAYER*40/' '/                                       2801
      CHARACTER NISRR_LAYER*12/'R.LAYER'/                                 2801
      INTEGER MISRR_LAYER(2)/1,1/                                         2801
      REAL RE_ISRR_LAYER                                                  2801
C -                                                                       2801
      REAL ISRR_RIN                                                       2801
      EQUIVALENCE (BANK_ISRR(4),ISRR_RIN,RE_ISRR_RIN),(NAMES_ISRR(2),     2801
     *NISRR_RIN)                                                          2801
      EQUIVALENCE (COMMEN_ISRR(2),CISRR_RIN),(MAP_ISRR(1,2),MISRR_RIN)    2801
      CHARACTER CISRR_RIN*40/' '/                                         2801
      CHARACTER NISRR_RIN*12/'R.RIN'/                                     2801
      INTEGER MISRR_RIN(2)/1,1/                                           2801
      REAL RE_ISRR_RIN                                                    2801
C -                                                                       2801
      REAL ISRR_ROUT                                                      2801
      EQUIVALENCE (BANK_ISRR(5),ISRR_ROUT,RE_ISRR_ROUT),(NAMES_ISRR(3),   2801
     *NISRR_ROUT)                                                         2801
      EQUIVALENCE (COMMEN_ISRR(3),CISRR_ROUT),(MAP_ISRR(1,3),             2801
     *MISRR_ROUT)                                                         2801
      CHARACTER CISRR_ROUT*40/' '/                                        2801
      CHARACTER NISRR_ROUT*12/'R.ROUT'/                                   2801
      INTEGER MISRR_ROUT(2)/1,1/                                          2801
      REAL RE_ISRR_ROUT                                                   2801
C -                                                                       2801
      REAL ISRR_LENGTH                                                    2801
      EQUIVALENCE (BANK_ISRR(6),ISRR_LENGTH,RE_ISRR_LENGTH),              2801
     *(NAMES_ISRR(4),NISRR_LENGTH)                                        2801
      EQUIVALENCE (COMMEN_ISRR(4),CISRR_LENGTH),(MAP_ISRR(1,4),           2801
     *MISRR_LENGTH)                                                       2801
      CHARACTER CISRR_LENGTH*40/' '/                                      2801
      CHARACTER NISRR_LENGTH*12/'R.LENGTH'/                               2801
      INTEGER MISRR_LENGTH(2)/1,1/                                        2801
      REAL RE_ISRR_LENGTH                                                 2801
C -                                                                       2801
      INTEGER LEN_ISRR,LLEN_ISRR,LINK_ISRR                                2801
      PARAMETER (LEN_ISRR=6)                                              2801
      PARAMETER (LLEN_ISRR=4)                                             2801
      INTEGER FLAG_ISRR/0/,MAP_ISRR(2,LLEN_ISRR),IDNUM_ISRR(10)           2801
      CHARACTER NAMES_ISRR(LLEN_ISRR)*12,COMMEN_ISRR(LLEN_ISRR)*40        2801
      DATA IDNUM_ISRR/10*0/                                               2801
      REAL BANK_ISRR(LEN_ISRR)                                            2801
      CHARACTER*60 BPATH_ISRR/' '/                                        2801
      SAVE FLAG_ISRR,MAP_ISRR,IDNUM_ISRR,NAMES_ISRR,COMMEN_ISRR,          2801
     *BPATH_ISRR                                                          2801
      DATA LINK_ISRR/0/,BANK_ISRR/LEN_ISRR*0/                             2801
C *                                                                       2801
C -                                                                       2802
      REAL ISCC_VERSION                                                   2802
      EQUIVALENCE (BANK_ISCC(3),ISCC_VERSION,RE_ISCC_VERSION),            2802
     *(NAMES_ISCC(1),NISCC_VERSION)                                       2802
      EQUIVALENCE (COMMEN_ISCC(1),CISCC_VERSION),(MAP_ISCC(1,1),          2802
     *MISCC_VERSION)                                                      2802
      CHARACTER CISCC_VERSION*40/' '/                                     2802
      CHARACTER NISCC_VERSION*12/'R.VERSION'/                             2802
      INTEGER MISCC_VERSION(2)/1,1/                                       2802
      REAL RE_ISCC_VERSION                                                2802
C -                                                                       2802
      REAL ISCC_RIN1                                                      2802
      EQUIVALENCE (BANK_ISCC(4),ISCC_RIN1,RE_ISCC_RIN1),(NAMES_ISCC(2),   2802
     *NISCC_RIN1)                                                         2802
      EQUIVALENCE (COMMEN_ISCC(2),CISCC_RIN1),(MAP_ISCC(1,2),             2802
     *MISCC_RIN1)                                                         2802
      CHARACTER CISCC_RIN1*40/' '/                                        2802
      CHARACTER NISCC_RIN1*12/'R.RIN1'/                                   2802
      INTEGER MISCC_RIN1(2)/1,1/                                          2802
      REAL RE_ISCC_RIN1                                                   2802
C -                                                                       2802
      REAL ISCC_ROUT1                                                     2802
      EQUIVALENCE (BANK_ISCC(5),ISCC_ROUT1,RE_ISCC_ROUT1),                2802
     *(NAMES_ISCC(3),NISCC_ROUT1)                                         2802
      EQUIVALENCE (COMMEN_ISCC(3),CISCC_ROUT1),(MAP_ISCC(1,3),            2802
     *MISCC_ROUT1)                                                        2802
      CHARACTER CISCC_ROUT1*40/' '/                                       2802
      CHARACTER NISCC_ROUT1*12/'R.ROUT1'/                                 2802
      INTEGER MISCC_ROUT1(2)/1,1/                                         2802
      REAL RE_ISCC_ROUT1                                                  2802
C -                                                                       2802
      REAL ISCC_RIN2                                                      2802
      EQUIVALENCE (BANK_ISCC(6),ISCC_RIN2,RE_ISCC_RIN2),(NAMES_ISCC(4),   2802
     *NISCC_RIN2)                                                         2802
      EQUIVALENCE (COMMEN_ISCC(4),CISCC_RIN2),(MAP_ISCC(1,4),             2802
     *MISCC_RIN2)                                                         2802
      CHARACTER CISCC_RIN2*40/' '/                                        2802
      CHARACTER NISCC_RIN2*12/'R.RIN2'/                                   2802
      INTEGER MISCC_RIN2(2)/1,1/                                          2802
      REAL RE_ISCC_RIN2                                                   2802
C -                                                                       2802
      REAL ISCC_ROUT2                                                     2802
      EQUIVALENCE (BANK_ISCC(7),ISCC_ROUT2,RE_ISCC_ROUT2),                2802
     *(NAMES_ISCC(5),NISCC_ROUT2)                                         2802
      EQUIVALENCE (COMMEN_ISCC(5),CISCC_ROUT2),(MAP_ISCC(1,5),            2802
     *MISCC_ROUT2)                                                        2802
      CHARACTER CISCC_ROUT2*40/' '/                                       2802
      CHARACTER NISCC_ROUT2*12/'R.ROUT2'/                                 2802
      INTEGER MISCC_ROUT2(2)/1,1/                                         2802
      REAL RE_ISCC_ROUT2                                                  2802
C -                                                                       2802
      REAL ISCC_LENGTH                                                    2802
      EQUIVALENCE (BANK_ISCC(8),ISCC_LENGTH,RE_ISCC_LENGTH),              2802
     *(NAMES_ISCC(6),NISCC_LENGTH)                                        2802
      EQUIVALENCE (COMMEN_ISCC(6),CISCC_LENGTH),(MAP_ISCC(1,6),           2802
     *MISCC_LENGTH)                                                       2802
      CHARACTER CISCC_LENGTH*40/' '/                                      2802
      CHARACTER NISCC_LENGTH*12/'R.LENGTH'/                               2802
      INTEGER MISCC_LENGTH(2)/1,1/                                        2802
      REAL RE_ISCC_LENGTH                                                 2802
C -                                                                       2802
      INTEGER LEN_ISCC,LLEN_ISCC,LINK_ISCC                                2802
      PARAMETER (LEN_ISCC=8)                                              2802
      PARAMETER (LLEN_ISCC=6)                                             2802
      INTEGER FLAG_ISCC/0/,MAP_ISCC(2,LLEN_ISCC),IDNUM_ISCC(10)           2802
      CHARACTER NAMES_ISCC(LLEN_ISCC)*12,COMMEN_ISCC(LLEN_ISCC)*40        2802
      DATA IDNUM_ISCC/10*0/                                               2802
      REAL BANK_ISCC(LEN_ISCC)                                            2802
      CHARACTER*60 BPATH_ISCC/' '/                                        2802
      SAVE FLAG_ISCC,MAP_ISCC,IDNUM_ISCC,NAMES_ISCC,COMMEN_ISCC,          2802
     *BPATH_ISCC                                                          2802
      DATA LINK_ISCC/0/,BANK_ISCC/LEN_ISCC*0/                             2802
C *                                                                       2802
C -                                                                       2804
      REAL ISVR_VERSION                                                   2804
      EQUIVALENCE (BANK_ISVR(3),ISVR_VERSION,RE_ISVR_VERSION),            2804
     *(NAMES_ISVR(1),NISVR_VERSION)                                       2804
      EQUIVALENCE (COMMEN_ISVR(1),CISVR_VERSION),(MAP_ISVR(1,1),          2804
     *MISVR_VERSION)                                                      2804
      CHARACTER CISVR_VERSION*40/' '/                                     2804
      CHARACTER NISVR_VERSION*12/'R.VERSION'/                             2804
      INTEGER MISVR_VERSION(2)/1,1/                                       2804
      REAL RE_ISVR_VERSION                                                2804
C -                                                                       2804
      REAL ISVR_CODE                                                      2804
      EQUIVALENCE (BANK_ISVR(4),ISVR_CODE,RE_ISVR_CODE),(NAMES_ISVR(2),   2804
     *NISVR_CODE)                                                         2804
      EQUIVALENCE (COMMEN_ISVR(2),CISVR_CODE),(MAP_ISVR(1,2),             2804
     *MISVR_CODE)                                                         2804
      CHARACTER CISVR_CODE*40/' '/                                        2804
      CHARACTER NISVR_CODE*12/'R.CODE'/                                   2804
      INTEGER MISVR_CODE(2)/1,1/                                          2804
      REAL RE_ISVR_CODE                                                   2804
C -                                                                       2804
      INTEGER LEN_ISVR,LLEN_ISVR,LINK_ISVR                                2804
      PARAMETER (LEN_ISVR=4)                                              2804
      PARAMETER (LLEN_ISVR=2)                                             2804
      INTEGER FLAG_ISVR/0/,MAP_ISVR(2,LLEN_ISVR),IDNUM_ISVR(10)           2804
      CHARACTER NAMES_ISVR(LLEN_ISVR)*12,COMMEN_ISVR(LLEN_ISVR)*40        2804
      DATA IDNUM_ISVR/10*0/                                               2804
      REAL BANK_ISVR(LEN_ISVR)                                            2804
      CHARACTER*60 BPATH_ISVR/' '/                                        2804
      SAVE FLAG_ISVR,MAP_ISVR,IDNUM_ISVR,NAMES_ISVR,COMMEN_ISVR,          2804
     *BPATH_ISVR                                                          2804
      DATA LINK_ISVR/0/,BANK_ISVR/LEN_ISVR*0/                             2804
C *                                                                       2804
* -------------------------------------------------------
C *                                                                       2806
      CALL AGSBEGM(MODULE,IPRIN)                                          2806
      IF (IPRIN.LT.0) RETURN                                              2806
C Filling bank ISMG - MOTHER VOLUME WHOLE DETECTOR                        2806
      BANK_TITLE='MOTHER VOLUME WHOLE DETECTOR'                           2806
      BPATH_ISMG='ISMG*'                                                  2806
      IDNUM_ISMG(1)=0                                                     2807
C VERSION                                                                 2807
      ISMG_LAYER=1                                                        2807
      CISMG_LAYER='VERSION'                                               2807
C INNER RADIUS                                                            2808
      ISMG_RIN=8.61                                                       2808
      CISMG_RIN='INNER RADIUS'                                            2808
C OUTER RADIUS                                                            2809
      ISMG_ROUT=18.00                                                     2809
      CISMG_ROUT='OUTER RADIUS'                                           2809
C OVERAL LENGTH OF THE DETECTOR                                           2810
      ISMG_TOTALLENGTH=54.50                                              2810
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE DETECTOR'                   2810
C FILE VERSION                                                            2811
      ISMG_CODE=5.00                                                      2811
      CISMG_CODE='FILE VERSION'                                           2811
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2812
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2812
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2812
C *                                                                       2812
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2812
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2812
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2812
C *                                                                       2814
      CALL AGSBEGM(MODULE,IPRIN)                                          2814
      IF (IPRIN.LT.0) RETURN                                              2814
C Filling bank ISMG - MOTHER VOLUME INNER LAYER                           2814
      BANK_TITLE='MOTHER VOLUME INNER LAYER'                              2814
      BPATH_ISMG='ISMG*'                                                  2814
      IDNUM_ISMG(1)=0                                                     2815
C VERSION                                                                 2815
      ISMG_LAYER=2                                                        2815
      CISMG_LAYER='VERSION'                                               2815
C INNER RADIUS                                                            2816
      ISMG_RIN=8.61                                                       2816
      CISMG_RIN='INNER RADIUS'                                            2816
C OUTER RADIUS                                                            2817
      ISMG_ROUT=12.00                                                     2817
      CISMG_ROUT='OUTER RADIUS'                                           2817
C OVERAL LENGTH OF THE LAYER                                              2818
      ISMG_TOTALLENGTH=40.00                                              2818
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      2818
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2819
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2819
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2819
C *                                                                       2819
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2819
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2819
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2819
C *                                                                       2821
      CALL AGSBEGM(MODULE,IPRIN)                                          2821
      IF (IPRIN.LT.0) RETURN                                              2821
C Filling bank ISMG - MOTHER VOLUME OUTER LAYER                           2821
      BANK_TITLE='MOTHER VOLUME OUTER LAYER'                              2821
      BPATH_ISMG='ISMG*'                                                  2821
      IDNUM_ISMG(1)=0                                                     2822
C VERSION                                                                 2822
      ISMG_LAYER=3                                                        2822
      CISMG_LAYER='VERSION'                                               2822
C INNER RADIUS                                                            2823
      ISMG_RIN=15.00                                                      2823
      CISMG_RIN='INNER RADIUS'                                            2823
C OUTER RADIUS                                                            2824
      ISMG_ROUT=18.00                                                     2824
      CISMG_ROUT='OUTER RADIUS'                                           2824
C OVERAL LENGTH OF THE LAYER                                              2825
      ISMG_TOTALLENGTH=54.50                                              2825
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      2825
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2826
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2826
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2826
C *                                                                       2826
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    2826
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           2826
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   2826
*--------------------------------------------------------
C *                                                                       2829
      CALL AGSBEGM(MODULE,IPRIN)                                          2829
      IF (IPRIN.LT.0) RETURN                                              2829
C Filling bank ISBG - INNER SILICON TRACKER DATA                          2829
      BANK_TITLE='INNER SILICON TRACKER DATA'                             2829
      BPATH_ISBG='ISBG*'                                                  2829
      IDNUM_ISBG(1)=0                                                     2830
C LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE                             2830
      ISBG_LAYER=1                                                        2830
      CISBG_LAYER='LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE'           2830
C LADDER COUNT                                                            2831
      ISBG_NLADDER=15                                                     2831
      CISBG_NLADDER='LADDER COUNT'                                        2831
C SENSOR UNITS PER LADDER                                                 2832
      ISBG_NUNIT=7                                                        2832
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               2832
C OVERAL LENGTH OF THE DETECTOR                                           2833
      ISBG_LENGTH=28.0                                                    2833
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        2833
C 1ST LADDER NOMINAL RADIUS                                               2834
      ISBG_R=9.0                                                          2834
      CISBG_R='1ST LADDER NOMINAL RADIUS'                                 2834
C 1ST LADDER NOMINAL POSITION ANGLE                                       2835
      ISBG_A=0.0                                                          2835
      CISBG_A='1ST LADDER NOMINAL POSITION ANGLE'                         2835
C ANGULAR OFFSET                                                          2836
      ISBG_AOFFSET=81.0                                                   2836
      CISBG_AOFFSET='ANGULAR OFFSET'                                      2836
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    2837
      ISBG_PPAROFFSET=0.0                                                 2837
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  2837
     *DULE'                                                               2837
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               2838
      ISBG_PPEROFFSET=0.0                                                 2838
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  2838
     *HE MODULE'                                                          2838
C LADDER WIDTH                                                            2839
      ISBG_LADDERWIDTH=4.0                                                2839
      CISBG_LADDERWIDTH='LADDER WIDTH'                                    2839
C LADDER THICKNESS                                                        2840
      ISBG_LADDERTHK=0.4626                                               2840
      CISBG_LADDERTHK='LADDER THICKNESS'                                  2840
C MODULE THICKNESS                                                        2841
      ISBG_SENSATHK=0.4282                                                2841
      CISBG_SENSATHK='MODULE THICKNESS'                                   2841
C SENSOR WIDTH                                                            2842
      ISBG_SENSORWIDTH=4.0                                                2842
      CISBG_SENSORWIDTH='SENSOR WIDTH'                                    2842
C SENSOR LENGTH                                                           2843
      ISBG_SENSORLNGTH=4.0                                                2843
      CISBG_SENSORLNGTH='SENSOR LENGTH'                                   2843
C SENSOR THICKNESS                                                        2844
      ISBG_SENSORTHK=0.0300                                               2844
      CISBG_SENSORTHK='SENSOR THICKNESS'                                  2844
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2845
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2845
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2845
C *                                                                       2845
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2845
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2845
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2845
C *                                                                       2847
      CALL AGSBEGM(MODULE,IPRIN)                                          2847
      IF (IPRIN.LT.0) RETURN                                              2847
C Filling bank ISBG - INNER SILICON TRACKER DATA                          2847
      BANK_TITLE='INNER SILICON TRACKER DATA'                             2847
      BPATH_ISBG='ISBG*'                                                  2847
      IDNUM_ISBG(1)=0                                                     2848
C LAYER INDEX                                                             2848
      ISBG_LAYER=2                                                        2848
      CISBG_LAYER='LAYER INDEX'                                           2848
C LADDER COUNT                                                            2849
      ISBG_NLADDER=15                                                     2849
      CISBG_NLADDER='LADDER COUNT'                                        2849
C SENSOR UNITS PER LADDER                                                 2850
      ISBG_NUNIT=9                                                        2850
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               2850
C OVERAL LENGTH OF THE DETECTOR                                           2851
      ISBG_LENGTH=36.0                                                    2851
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        2851
C 2ND LADDER NOMINAL RADIUS                                               2852
      ISBG_R=9.5                                                          2852
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 2852
C 2ND LADDER NOMINAL POSITION ANGLE                                       2853
      ISBG_A=0.0                                                          2853
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         2853
C ANGULAR OFFSET                                                          2854
      ISBG_AOFFSET=81.0                                                   2854
      CISBG_AOFFSET='ANGULAR OFFSET'                                      2854
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    2855
      ISBG_PPAROFFSET=0.0                                                 2855
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  2855
     *DULE'                                                               2855
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               2856
      ISBG_PPEROFFSET=0.0                                                 2856
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  2856
     *HE MODULE'                                                          2856
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2857
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2857
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2857
C *                                                                       2857
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2857
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2857
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2857
C *                                                                       2859
      CALL AGSBEGM(MODULE,IPRIN)                                          2859
      IF (IPRIN.LT.0) RETURN                                              2859
C Filling bank ISBG - INNER SILICON TRACKER DATA                          2859
      BANK_TITLE='INNER SILICON TRACKER DATA'                             2859
      BPATH_ISBG='ISBG*'                                                  2859
      IDNUM_ISBG(1)=0                                                     2860
C LAYER INDEX                                                             2860
      ISBG_LAYER=3                                                        2860
      CISBG_LAYER='LAYER INDEX'                                           2860
C LADDER COUNT                                                            2861
      ISBG_NLADDER=27                                                     2861
      CISBG_NLADDER='LADDER COUNT'                                        2861
C SENSOR UNITS PER LADDER                                                 2862
      ISBG_NUNIT=13                                                       2862
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               2862
C OVERAL LENGTH OF THE DETECTOR                                           2863
      ISBG_LENGTH=52.0                                                    2863
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        2863
C 2ND LADDER NOMINAL RADIUS                                               2864
      ISBG_R=17.0                                                         2864
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 2864
C 2ND LADDER NOMINAL POSITION ANGLE                                       2865
      ISBG_A=0.0                                                          2865
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         2865
C ANGULAR OFFSET                                                          2866
      ISBG_AOFFSET=81.0                                                   2866
      CISBG_AOFFSET='ANGULAR OFFSET'                                      2866
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    2867
      ISBG_PPAROFFSET=0.0                                                 2867
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  2867
     *DULE'                                                               2867
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               2868
      ISBG_PPEROFFSET=0.0                                                 2868
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  2868
     *HE MODULE'                                                          2868
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2869
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2869
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2869
C *                                                                       2869
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    2869
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           2869
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   2869
*--------------------------------------------------------
C *                                                                       2872
      CALL AGSBEGM(MODULE,IPRIN)                                          2872
      IF (IPRIN.LT.0) RETURN                                              2872
C Filling bank ISAN - THERMAL CONDUCTIVE CARBON FOAM PLATE                2872
      BANK_TITLE='THERMAL CONDUCTIVE CARBON FOAM PLATE'                   2872
      BPATH_ISAN='ISAN*'                                                  2872
      IDNUM_ISAN(1)=0                                                     2873
C MAY HAVE A FEW                                                          2873
      ISAN_VERSION=1                                                      2873
      CISAN_VERSION='MAY HAVE A FEW'                                      2873
C WIDTH                                                                   2874
      ISAN_W=4.0                                                          2874
      CISAN_W='WIDTH'                                                     2874
C LENGTH                                                                  2875
      ISAN_H=4.0                                                          2875
      CISAN_H='LENGTH'                                                    2875
C THICKNESS                                                               2876
      ISAN_THK=0.1686                                                     2876
      CISAN_THK='THICKNESS'                                               2876
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    2877
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           2877
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   2877
C *                                                                       2877
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    2877
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           2877
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   2877
*--------------------------------------------------------
C *                                                                       2880
      CALL AGSBEGM(MODULE,IPRIN)                                          2880
      IF (IPRIN.LT.0) RETURN                                              2880
C Filling bank ISHY - KAPTON HYBRID                                       2880
      BANK_TITLE='KAPTON HYBRID'                                          2880
      BPATH_ISHY='ISHY*'                                                  2880
      IDNUM_ISHY(1)=0                                                     2881
C MAY HAVE A FEW                                                          2881
      ISHY_VERSION=1                                                      2881
      CISHY_VERSION='MAY HAVE A FEW'                                      2881
C WIDTH                                                                   2882
      ISHY_W=4.0                                                          2882
      CISHY_W='WIDTH'                                                     2882
C LENGTH                                                                  2883
      ISHY_H=4.0                                                          2883
      CISHY_H='LENGTH'                                                    2883
C THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2MIL KAPTON        2884
      ISHY_THK=0.0050                                                     2884
      CISHY_THK='THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2M  2884
     *IL KAPTON'                                                          2884
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    2885
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           2885
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   2885
C *                                                                       2885
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    2885
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           2885
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   2885
*--------------------------------------------------------
C *                                                                       2888
      CALL AGSBEGM(MODULE,IPRIN)                                          2888
      IF (IPRIN.LT.0) RETURN                                              2888
C Filling bank ISCU - COPPER TRACES ON HYBRID                             2888
      BANK_TITLE='COPPER TRACES ON HYBRID'                                2888
      BPATH_ISCU='ISCU*'                                                  2888
      IDNUM_ISCU(1)=0                                                     2889
C MAY HAVE A FEW                                                          2889
      ISCU_VERSION=1                                                      2889
      CISCU_VERSION='MAY HAVE A FEW'                                      2889
C WIDTH                                                                   2890
      ISCU_W=4.0                                                          2890
      CISCU_W='WIDTH'                                                     2890
C LENGTH                                                                  2891
      ISCU_H=4.0                                                          2891
      CISCU_H='LENGTH'                                                    2891
C THICKNESS, 0.7MIL CU                                                    2892
      ISCU_THK=0.0018                                                     2892
      CISCU_THK='THICKNESS, 0.7MIL CU'                                    2892
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    2893
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           2893
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   2893
C *                                                                       2893
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    2893
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           2893
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   2893
*--------------------------------------------------------
C *                                                                       2896
      CALL AGSBEGM(MODULE,IPRIN)                                          2896
      IF (IPRIN.LT.0) RETURN                                              2896
C Filling bank ISCG - READOUT CHIP GEOMETRY, FIRST APPROX.                2896
      BANK_TITLE='READOUT CHIP GEOMETRY, FIRST APPROX.'                   2896
      BPATH_ISCG='ISCG*'                                                  2896
      IDNUM_ISCG(1)=0                                                     2897
C WE MAY HAVE A FEW DIFFERENT CHIPS                                       2897
      ISCG_VERSION=1                                                      2897
      CISCG_VERSION='WE MAY HAVE A FEW DIFFERENT CHIPS'                   2897
C WIDTH                                                                   2898
      ISCG_W=0.8055                                                       2898
      CISCG_W='WIDTH'                                                     2898
C HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)                          2899
      ISCG_H=4.0                                                          2899
      CISCG_H='HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)'            2899
C THICKNESS                                                               2900
      ISCG_THK=0.0762                                                     2900
      CISCG_THK='THICKNESS'                                               2900
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    2901
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           2901
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   2901
C *                                                                       2901
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    2901
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           2901
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   2901
*--------------------------------------------------------
C *                                                                       2904
      CALL AGSBEGM(MODULE,IPRIN)                                          2904
      IF (IPRIN.LT.0) RETURN                                              2904
C Filling bank ISGA - GLUE LAYER, SAME SIZE AS SENSOR                     2904
      BANK_TITLE='GLUE LAYER, SAME SIZE AS SENSOR'                        2904
      BPATH_ISGA='ISGA*'                                                  2904
      IDNUM_ISGA(1)=0                                                     2905
C MAY HAVE A FEW                                                          2905
      ISGA_VERSION=1                                                      2905
      CISGA_VERSION='MAY HAVE A FEW'                                      2905
C WIDTH                                                                   2906
      ISGA_W=4.0                                                          2906
      CISGA_W='WIDTH'                                                     2906
C LENGTH                                                                  2907
      ISGA_H=4.0                                                          2907
      CISGA_H='LENGTH'                                                    2907
C THICKNESS, USE 50UM                                                     2908
      ISGA_THK=0.0050                                                     2908
      CISGA_THK='THICKNESS, USE 50UM'                                     2908
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    2909
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           2909
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   2909
C *                                                                       2909
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    2909
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           2909
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   2909
*--------------------------------------------------------
C *                                                                       2912
      CALL AGSBEGM(MODULE,IPRIN)                                          2912
      IF (IPRIN.LT.0) RETURN                                              2912
C Filling bank ISGB - GLUE LAYER, SAME SIZE AS CHIP                       2912
      BANK_TITLE='GLUE LAYER, SAME SIZE AS CHIP'                          2912
      BPATH_ISGB='ISGB*'                                                  2912
      IDNUM_ISGB(1)=0                                                     2913
C MAY HAVE A FEW                                                          2913
      ISGB_VERSION=1                                                      2913
      CISGB_VERSION='MAY HAVE A FEW'                                      2913
C WIDTH                                                                   2914
      ISGB_W=0.8055                                                       2914
      CISGB_W='WIDTH'                                                     2914
C LENGTH                                                                  2915
      ISGB_H=4.0                                                          2915
      CISGB_H='LENGTH'                                                    2915
C THICKNESS, USE 50UM                                                     2916
      ISGB_THK=0.0050                                                     2916
      CISGB_THK='THICKNESS, USE 50UM'                                     2916
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    2917
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           2917
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   2917
C *                                                                       2917
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    2917
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           2917
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   2917
* -------------------------------------------------------
C *                                                                       2919
      CALL AGSBEGM(MODULE,IPRIN)                                          2919
      IF (IPRIN.LT.0) RETURN                                              2919
C Filling bank ISRR - SUPPORT RING FOR LAYER 1                            2919
      BANK_TITLE='SUPPORT RING FOR LAYER 1'                               2919
      BPATH_ISRR='ISRR*'                                                  2919
      IDNUM_ISRR(1)=0                                                     2920
C LAYER                                                                   2920
      ISRR_LAYER=1                                                        2920
      CISRR_LAYER='LAYER'                                                 2920
C INNER RADIUS                                                            2921
      ISRR_RIN=6.00                                                       2921
      CISRR_RIN='INNER RADIUS'                                            2921
C OUTER RADIUS                                                            2922
      ISRR_ROUT=9.00                                                      2922
      CISRR_ROUT='OUTER RADIUS'                                           2922
C THICKNESS OF THE RING                                                   2923
      ISRR_LENGTH=2.00                                                    2923
      CISRR_LENGTH='THICKNESS OF THE RING'                                2923
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2924
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2924
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2924
C *                                                                       2924
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2924
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2924
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2924
C *                                                                       2926
      CALL AGSBEGM(MODULE,IPRIN)                                          2926
      IF (IPRIN.LT.0) RETURN                                              2926
C Filling bank ISRR - SUPPORT RING FOR LAYER 2                            2926
      BANK_TITLE='SUPPORT RING FOR LAYER 2'                               2926
      BPATH_ISRR='ISRR*'                                                  2926
      IDNUM_ISRR(1)=0                                                     2927
C LAYER                                                                   2927
      ISRR_LAYER=2                                                        2927
      CISRR_LAYER='LAYER'                                                 2927
C INNER RADIUS                                                            2928
      ISRR_RIN=8.70                                                       2928
      CISRR_RIN='INNER RADIUS'                                            2928
C OUTER RADIUS                                                            2929
      ISRR_ROUT=11.70                                                     2929
      CISRR_ROUT='OUTER RADIUS'                                           2929
C THICKNESS OF THE RING                                                   2930
      ISRR_LENGTH=2.00                                                    2930
      CISRR_LENGTH='THICKNESS OF THE RING'                                2930
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2931
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2931
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2931
C *                                                                       2931
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2931
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2931
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2931
C *                                                                       2933
      CALL AGSBEGM(MODULE,IPRIN)                                          2933
      IF (IPRIN.LT.0) RETURN                                              2933
C Filling bank ISRR - SUPPORT RING FOR LAYER 3                            2933
      BANK_TITLE='SUPPORT RING FOR LAYER 3'                               2933
      BPATH_ISRR='ISRR*'                                                  2933
      IDNUM_ISRR(1)=0                                                     2934
C LAYER                                                                   2934
      ISRR_LAYER=3                                                        2934
      CISRR_LAYER='LAYER'                                                 2934
C INNER RADIUS                                                            2935
      ISRR_RIN=15.00                                                      2935
      CISRR_RIN='INNER RADIUS'                                            2935
C OUTER RADIUS                                                            2936
      ISRR_ROUT=18.00                                                     2936
      CISRR_ROUT='OUTER RADIUS'                                           2936
C THICKNESS OF THE RING                                                   2937
      ISRR_LENGTH=1.25                                                    2937
      CISRR_LENGTH='THICKNESS OF THE RING'                                2937
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2938
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2938
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2938
C *                                                                       2938
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    2938
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           2938
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   2938
* -------------------------------------------------------
C *                                                                       2940
      CALL AGSBEGM(MODULE,IPRIN)                                          2940
      IF (IPRIN.LT.0) RETURN                                              2940
C Filling bank ISCC - INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3          2940
      BANK_TITLE='INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3'             2940
      BPATH_ISCC='ISCC*'                                                  2940
      IDNUM_ISCC(1)=0                                                     2941
C VERSION                                                                 2941
      ISCC_VERSION=1                                                      2941
      CISCC_VERSION='VERSION'                                             2941
C INNER RADIUS SMALL                                                      2942
      ISCC_RIN1=10.70                                                     2942
      CISCC_RIN1='INNER RADIUS SMALL'                                     2942
C OUTER RADIUS SMALL                                                      2943
      ISCC_ROUT1=11.70                                                    2943
      CISCC_ROUT1='OUTER RADIUS SMALL'                                    2943
C INNER RADIUS LARGE                                                      2944
      ISCC_RIN2=15.00                                                     2944
      CISCC_RIN2='INNER RADIUS LARGE'                                     2944
C OUTER RADIUS LARGE                                                      2945
      ISCC_ROUT2=16.00                                                    2945
      CISCC_ROUT2='OUTER RADIUS LARGE'                                    2945
C THICKNESS OF THE RING                                                   2946
      ISCC_LENGTH=6.00                                                    2946
      CISCC_LENGTH='THICKNESS OF THE RING'                                2946
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    2947
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           2947
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   2947
C *                                                                       2947
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    2947
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           2947
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   2947
* -------------------------------------------------------
C *                                                                       2949
      CALL AGSBEGM(MODULE,IPRIN)                                          2949
      IF (IPRIN.LT.0) RETURN                                              2949
C Filling bank ISVR - CODE VERSION FOR G2T_VOLUME_ID                      2949
      BANK_TITLE='CODE VERSION FOR G2T_VOLUME_ID'                         2949
      BPATH_ISVR='ISVR*'                                                  2949
      IDNUM_ISVR(1)=0                                                     2950
C VERSION                                                                 2950
      ISVR_VERSION=2                                                      2950
      CISVR_VERSION='VERSION'                                             2950
C VERSION                                                                 2951
      ISVR_CODE=2                                                         2951
      CISVR_CODE='VERSION'                                                2951
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    2952
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           2952
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   2952
C *                                                                       2952
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    2952
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           2952
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   2952
* -------------------------------------------------------
* -------------------------------------------------------
      RADDEG = 3.14159265/180.0                                           2956
* -------------------------------------------------------
C use ISMG bank                                                           2958
      BPATH_ISMG='ISMG*'                                                  2958
      IDNUM_ISMG(1)=0                                                     2958
      ISMG_LAYER=1                                                        2958
      CALL AGDGETP('ISTBGEO5','*',-999,'ISMG',NISMG_LAYER,RE_ISMG_LAYER,  2958
     *BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,BANK_ISMG,LEN_ISMG,     2958
     *LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                                      2958
C use default ISVR bank                                                   2959
      BPATH_ISVR='ISVR*'                                                  2959
      IDNUM_ISVR(1)=0                                                     2959
      CALL AGDGETP('ISTBGEO5','*',-999,'ISVR',' ',BANK_ISVR, BPATH_ISVR,  2959
     *IDNUM_ISVR,1,MAP_ISVR,NAMES_ISVR,BANK_ISVR,LEN_ISVR,LLEN_ISVR,      2959
     *LINK_ISVR,FLAG_ISVR)                                                2959
      CALL AGSBEGM(MODULE,IPRIN)                                          2961
C Check IPRIN<0                                                           2961
      IF (IPRIN.LT.0) RETURN                                              2961
C Create IBMO :                                                           2961
C Call To Local Procedure IBMO                                            2961
      ASSIGN 5020 TO BLOCK_IBMO                                           2961
      GO TO  5010                                                         2961
5020  CONTINUE                                                            2961
C *                                                                       2961
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           2962
      CALL AGSRESET                                                       2962
      AG_MOTHER = 'CAVE'                                                  2962
      AG_TITLE = 'IBMO'                                                   2962
      AG_EXNAME = 'POSITION'                                              2962
      AG_PARLIST = 'MOTHER'                                               2962
      CALL AXPOSITION                                                     2962
C *                                                                       2962
      WRITE (*,*) 'ISTB mother - IBMO - created'                          2964
* -------------------------------------------------------
      CALL AGSENDM                                                        2966
      RETURN                                                              2966
C Begin Local Procedure IBMO                                              2966
C IBMO IS THE MOTHER OF THE ISTB DETECTOR                                 2966
5010  CONTINUE                                                            2966
         AG_TITLE='IBMO'                                                  2966
         AG_MODULE=MODULE                                                 2966
         AG_MARK='V00'                                                    2966
         CALL AGSPUSH                                                     2966
         AG_MODULE=MODULE                                                 2966
C    *                                                                    2966
C    Geant MATERIAL : AIR ===> inherited arguments used <===              2967
         CALL AGSRESET                                                    2967
         AG_TITLE = 'AIR'                                                 2967
         AG_EXNAME = 'MATERIAL'                                           2967
         AG_PARLIST = 'NONE'                                              2967
         CALL AXMATERIAL                                                  2967
C    *                                                                    2967
C    Geant ATTRIBUTE : IBMO ===> SEEN=0 COLO=1 <===                       2967
         CALL AGSRESET                                                    2968
         AG_SEEN = 0                                                      2968
         AG_COLO = 1                                                      2968
         AG_TITLE = 'IBMO'                                                2968
         AG_EXNAME = 'ATTRIBUTE'                                          2968
         AG_PARLIST = 'SEEN_COLO'                                         2968
         CALL AXATTRIBUTE                                                 2968
C    *                                                                    2968
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  2972
C    LLENGTH/2.0 <===                                                     2972
         CALL AGSRESET                                                    2972
         AG_RMIN = ISMG_RIN                                               2972
         AG_RMAX = ISMG_ROUT                                              2972
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     2972
         AG_TITLE = 'TUBE'                                                2972
         AG_EXNAME = 'SHAPE'                                              2972
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      2972
         CALL AXSHAPE                                                     2972
C    *                                                                    2972
* -- Some administration to calculate the thickness of a module
* -- Kept for (private) future use
C    use ISAN bank                                                        2976
         BPATH_ISAN='ISAN*'                                               2976
         IDNUM_ISAN(1)=0                                                  2976
         ISAN_VERSION=1                                                   2976
         CALL AGDGETP('ISTBGEO5','*',-999,'ISAN',NISAN_VERSION,           2976
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     2976
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                2976
C    use ISGA bank                                                        2977
         BPATH_ISGA='ISGA*'                                               2977
         IDNUM_ISGA(1)=0                                                  2977
         ISGA_VERSION=1                                                   2977
         CALL AGDGETP('ISTBGEO5','*',-999,'ISGA',NISGA_VERSION,           2977
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2977
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2977
C    use ISBG bank                                                        2978
         BPATH_ISBG='ISBG*'                                               2978
         IDNUM_ISBG(1)=0                                                  2978
         ISBG_LAYER=1                                                     2978
         CALL AGDGETP('ISTBGEO5','*',-999,'ISBG',NISBG_LAYER,             2978
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       2978
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                2978
C    use ISGA bank                                                        2979
         BPATH_ISGA='ISGA*'                                               2979
         IDNUM_ISGA(1)=0                                                  2979
         ISGA_VERSION=1                                                   2979
         CALL AGDGETP('ISTBGEO5','*',-999,'ISGA',NISGA_VERSION,           2979
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     2979
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                2979
C    use ISHY bank                                                        2980
         BPATH_ISHY='ISHY*'                                               2980
         IDNUM_ISHY(1)=0                                                  2980
         ISHY_VERSION=1                                                   2980
         CALL AGDGETP('ISTBGEO5','*',-999,'ISHY',NISHY_VERSION,           2980
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     2980
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                2980
C    use ISCU bank                                                        2981
         BPATH_ISCU='ISCU*'                                               2981
         IDNUM_ISCU(1)=0                                                  2981
         ISCU_VERSION=1                                                   2981
         CALL AGDGETP('ISTBGEO5','*',-999,'ISCU',NISCU_VERSION,           2981
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     2981
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                2981
C    use ISGB bank                                                        2982
         BPATH_ISGB='ISGB*'                                               2982
         IDNUM_ISGB(1)=0                                                  2982
         ISGB_VERSION=1                                                   2982
         CALL AGDGETP('ISTBGEO5','*',-999,'ISGB',NISGB_VERSION,           2982
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     2982
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                2982
C    use ISCG bank                                                        2983
         BPATH_ISCG='ISCG*'                                               2983
         IDNUM_ISCG(1)=0                                                  2983
         ISCG_VERSION=1                                                   2983
         CALL AGDGETP('ISTBGEO5','*',-999,'ISCG',NISCG_VERSION,           2983
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     2983
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                2983
         MOD_THK = 2.0*(ISAN_THK/                                         2985
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+                   2985
     *   ISCU_THK+ISGB_THK+ISCG_THK)                                      2985
C    *                                                                    2987
         ISTLAYER=2                                                       2987
            GO TO 5033                                                    2987
5031        ISTLAYER=ISTLAYER+1                                           2987
5033        IF(ISTLAYER-(3).GT.0) GO TO 5032                              2987
C       use ISMG bank                                                     2988
            BPATH_ISMG='ISMG*'                                            2988
            IDNUM_ISMG(1)=0                                               2988
            ISMG_LAYER=ISTLAYER                                           2988
            CALL AGDGETP('ISTBGEO5','*',-999,'ISMG',NISMG_LAYER,          2988
     *      RE_ISMG_LAYER,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,    2988
     *      BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)             2988
C       use ISBG bank                                                     2989
            BPATH_ISBG='ISBG*'                                            2989
            IDNUM_ISBG(1)=0                                               2989
            ISBG_LAYER=ISTLAYER                                           2989
            CALL AGDGETP('ISTBGEO5','*',-999,'ISBG',NISBG_LAYER,          2989
     *      RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,    2989
     *      BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)             2989
C       use ISRR bank                                                     2990
            BPATH_ISRR='ISRR*'                                            2990
            IDNUM_ISRR(1)=0                                               2990
            ISRR_LAYER=ISTLAYER                                           2990
            CALL AGDGETP('ISTBGEO5','*',-999,'ISRR',NISRR_LAYER,          2990
     *      RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,    2990
     *      BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)             2990
C       Create IBMY :                                                     2991
C       Call To Local Procedure IBMY                                      2991
            ASSIGN 5050 TO BLOCK_IBMY                                     2991
            GO TO  5040                                                   2991
5050        CONTINUE                                                      2991
C       *                                                                 2991
C       Geant POSITION : IBMY ===> inherited arguments used <===          2992
            CALL AGSRESET                                                 2992
            AG_TITLE = 'IBMY'                                             2992
            AG_EXNAME = 'POSITION'                                        2992
            AG_PARLIST = 'NONE'                                           2992
            CALL AXPOSITION                                               2992
C       *                                                                 2992
         GO TO 5031                                                       2993
5032     CONTINUE                                                         2993
*     place the interconnects, east and west side
C    use ISBG bank                                                        2996
         BPATH_ISBG='ISBG*'                                               2996
         IDNUM_ISBG(1)=0                                                  2996
         ISBG_LAYER=2                                                     2996
         CALL AGDGETP('ISTBGEO5','*',-999,'ISBG',NISBG_LAYER,             2996
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       2996
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                2996
C    use ISRR bank                                                        2997
         BPATH_ISRR='ISRR*'                                               2997
         IDNUM_ISRR(1)=0                                                  2997
         ISRR_LAYER=2                                                     2997
         CALL AGDGETP('ISTBGEO5','*',-999,'ISRR',NISRR_LAYER,             2997
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       2997
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                2997
C    use ISCC bank                                                        2998
         BPATH_ISCC='ISCC*'                                               2998
         IDNUM_ISCC(1)=0                                                  2998
         ISCC_VERSION=1                                                   2998
         CALL AGDGETP('ISTBGEO5','*',-999,'ISCC',NISCC_VERSION,           2998
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     2998
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                2998
C    Create IBME :                                                        2999
C    Call To Local Procedure IBME                                         2999
         ASSIGN 5070 TO BLOCK_IBME                                        2999
         GO TO  5060                                                      2999
5070     CONTINUE                                                         2999
C    *                                                                    2999
C    Geant POSITION : IBME ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  3002
C    R_LENGTH+ISCC_LENGTH/2.0) <===                                       3002
         CALL AGSRESET                                                    3002
         AG_X = 0.0                                                       3002
         AG_Y = 0.0                                                       3002
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)         3002
         AG_TITLE = 'IBME'                                                3002
         AG_EXNAME = 'POSITION'                                           3002
         AG_PARLIST = 'X_Y_Z'                                             3002
         CALL AXPOSITION                                                  3002
C    *                                                                    3002
C    Create IBMW :                                                        3003
C    Call To Local Procedure IBMW                                         3003
         ASSIGN 5090 TO BLOCK_IBMW                                        3003
         GO TO  5080                                                      3003
5090     CONTINUE                                                         3003
C    *                                                                    3003
C    Geant POSITION : IBMW ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  3006
C    RR_LENGTH+ISCC_LENGTH/2.0) <===                                      3006
         CALL AGSRESET                                                    3006
         AG_X = 0.0                                                       3006
         AG_Y = 0.0                                                       3006
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)        3006
         AG_TITLE = 'IBMW'                                                3006
         AG_EXNAME = 'POSITION'                                           3006
         AG_PARLIST = 'X_Y_Z'                                             3006
         CALL AXPOSITION                                                  3006
C    *                                                                    3006
5011  CALL AGSPOPB                                                        3008
      GO TO BLOCK_IBMO, (5010 ,5020)                                      3008
C End of Local Procedure                                                  3008
* -------------------------------------------------------
C Begin Local Procedure IBMY                                              3011
C IBMY IS THE MOTHER OF THE IST LAYERS                                    3011
5040  CONTINUE                                                            3011
         AG_TITLE='IBMY'                                                  3011
         AG_MODULE=MODULE                                                 3011
         AG_MARK='V00'                                                    3011
         CALL AGSPUSH                                                     3011
         AG_MODULE=MODULE                                                 3011
C    *                                                                    3011
C    Geant MATERIAL : AIR ===> inherited arguments used <===              3012
         CALL AGSRESET                                                    3012
         AG_TITLE = 'AIR'                                                 3012
         AG_EXNAME = 'MATERIAL'                                           3012
         AG_PARLIST = 'NONE'                                              3012
         CALL AXMATERIAL                                                  3012
C    *                                                                    3012
C    Geant ATTRIBUTE : IBMY ===> SEEN=0 COLO=1 SERIAL=ISTLAYER <===       3012
         CALL AGSRESET                                                    3013
         AG_SEEN = 0                                                      3013
         AG_COLO = 1                                                      3013
         AG_SERIAL = ISTLAYER                                             3013
         AG_TITLE = 'IBMY'                                                3013
         AG_EXNAME = 'ATTRIBUTE'                                          3013
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3013
         CALL AXATTRIBUTE                                                 3013
C    *                                                                    3013
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  3017
C    LLENGTH/2.0 <===                                                     3017
         CALL AGSRESET                                                    3017
         AG_RMIN = ISMG_RIN                                               3017
         AG_RMAX = ISMG_ROUT                                              3017
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     3017
         AG_TITLE = 'TUBE'                                                3017
         AG_EXNAME = 'SHAPE'                                              3017
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      3017
         CALL AXSHAPE                                                     3017
C    *                                                                    3017
         WRITE(*,*) '===>GEOINFO/istbgeo: Creating IST layer',            3020
     *   ISBG_LAYER,' Rin=',ISMG_RIN,' Rout=',ISMG_ROUT                   3020
C    *                                                                    3021
         NL=1                                                             3021
            GO TO 5103                                                    3021
5101        NL=NL+1                                                       3021
5103        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5102                         3021
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                3021
C       BASE TILT, TO BE FURTHER CORRECTED                                3023
            ANGLE = (360.0/ISBG_NLADDER)*NL                               3023
*       GvN Offset perpendicular to the length of the module/ladder
*       this to move the midpoint of the sensors back on the required
*       radius after the tilting
            RLAD = ISBG_R+ISBG_PPEROFFSET                                 3028
*       Individual ladders can be individually tilted by using
*       the aOffset parameter (angular offset), and the pOffset
*       (position offset), which is the individual lateral
*       displacement.
            ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                        3035
*       The anglePos defines the POSITION of the center of the ladder
*       in space, along the lines of x=r*cos(...), y=r*sin(...)
*       have to correct and convert to radians:
C       SEE ABOVE COMMENT                                                 3041
            ANGLEPOS = ANGLE*RADDEG - ANGLECORR                           3041
            TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                      3042
C       Create IBAM :                                                     3044
C       Call To Local Procedure IBAM                                      3044
            ASSIGN 5120 TO BLOCK_IBAM                                     3044
            GO TO  5110                                                   3044
5120        CONTINUE                                                      3044
C       *                                                                 3044
C       Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(ANG  3048
C       LEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===                   3048
            CALL AGSRESET                                                 3048
            AG_X = TRUER*COS(ANGLEPOS)                                    3048
            AG_Y = TRUER*SIN(ANGLEPOS)                                    3048
            AG_Z = 0.0                                                    3048
            AG_ALPHAN=AG_ALPHAN+1                                         3048
            AG_ALPHAK(AG_ALPHAN)=3                                        3048
            AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                       3048
            AG_TITLE = 'IBAM'                                             3048
            AG_EXNAME = 'POSITION'                                        3048
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   3048
            CALL AXPOSITION                                               3048
C       *                                                                 3048
         GO TO 5101                                                       3050
5102     CONTINUE                                                         3050
*     place 2 support rings at both ends of the ladders
C    Create ISRI :                                                        3053
C    Call To Local Procedure ISRI                                         3053
         ASSIGN 5140 TO BLOCK_ISRI                                        3053
         GO TO  5130                                                      3053
5140     CONTINUE                                                         3053
C    *                                                                    3053
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  3056
C    R_LENGTH/2.0) <===                                                   3056
         CALL AGSRESET                                                    3056
         AG_X = 0.0                                                       3056
         AG_Y = 0.0                                                       3056
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                     3056
         AG_TITLE = 'ISRI'                                                3056
         AG_EXNAME = 'POSITION'                                           3056
         AG_PARLIST = 'X_Y_Z'                                             3056
         CALL AXPOSITION                                                  3056
C    *                                                                    3056
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  3056
C    RR_LENGTH/2.0) <===                                                  3056
         CALL AGSRESET                                                    3059
         AG_X = 0.0                                                       3059
         AG_Y = 0.0                                                       3059
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                    3059
         AG_TITLE = 'ISRI'                                                3059
         AG_EXNAME = 'POSITION'                                           3059
         AG_PARLIST = 'X_Y_Z'                                             3059
         CALL AXPOSITION                                                  3059
C    *                                                                    3059
5041  CALL AGSPOPB                                                        3061
      GO TO BLOCK_IBMY, (5040 ,5050)                                      3061
C End of Local Procedure                                                  3061
* -----------------------------------------------------------------------------
C Begin Local Procedure IBME                                              3063
C IBME IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE WEST SIDE      3063
5060  CONTINUE                                                            3063
         AG_TITLE='IBME'                                                  3063
         AG_MODULE=MODULE                                                 3063
         AG_MARK='V00'                                                    3063
         CALL AGSPUSH                                                     3063
         AG_MODULE=MODULE                                                 3063
C    *                                                                    3063
C    Geant MATERIAL : AIR ===> inherited arguments used <===              3064
         CALL AGSRESET                                                    3064
         AG_TITLE = 'AIR'                                                 3064
         AG_EXNAME = 'MATERIAL'                                           3064
         AG_PARLIST = 'NONE'                                              3064
         CALL AXMATERIAL                                                  3064
C    *                                                                    3064
C    Geant ATTRIBUTE : IBME ===> SEEN=0 COLO=1 <===                       3064
         CALL AGSRESET                                                    3065
         AG_SEEN = 0                                                      3065
         AG_COLO = 1                                                      3065
         AG_TITLE = 'IBME'                                                3065
         AG_EXNAME = 'ATTRIBUTE'                                          3065
         AG_PARLIST = 'SEEN_COLO'                                         3065
         CALL AXATTRIBUTE                                                 3065
C    *                                                                    3065
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  3071
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     3071
         CALL AGSRESET                                                    3071
         AG_RMN1 = ISCC_RIN1                                              3071
         AG_RMX1 = ISCC_ROUT1                                             3071
         AG_RMN2 = ISCC_RIN2                                              3071
         AG_RMX2 = ISCC_ROUT2                                             3071
         AG_DZ = ISCC_LENGTH/2.0                                          3071
         AG_TITLE = 'CONE'                                                3071
         AG_EXNAME = 'SHAPE'                                              3071
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            3071
         CALL AXSHAPE                                                     3071
C    *                                                                    3071
C    use ISBG bank                                                        3073
         BPATH_ISBG='ISBG*'                                               3073
         IDNUM_ISBG(1)=0                                                  3073
         ISBG_LAYER=2                                                     3073
         CALL AGDGETP('ISTBGEO5','*',-999,'ISBG',NISBG_LAYER,             3073
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       3073
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                3073
C    use ISRR bank                                                        3074
         BPATH_ISRR='ISRR*'                                               3074
         IDNUM_ISRR(1)=0                                                  3074
         ISRR_LAYER=2                                                     3074
         CALL AGDGETP('ISTBGEO5','*',-999,'ISRR',NISRR_LAYER,             3074
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       3074
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                3074
C    use ISCC bank                                                        3075
         BPATH_ISCC='ISCC*'                                               3075
         IDNUM_ISCC(1)=0                                                  3075
         ISCC_VERSION=1                                                   3075
         CALL AGDGETP('ISTBGEO5','*',-999,'ISCC',NISCC_VERSION,           3075
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     3075
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                3075
C    Create ISCO :                                                        3076
C    Call To Local Procedure ISCO                                         3076
         ASSIGN 5160 TO BLOCK_ISCO                                        3076
         GO TO  5150                                                      3076
5160     CONTINUE                                                         3076
C    *                                                                    3076
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 <===                  3079
         CALL AGSRESET                                                    3079
         AG_X = 0.0                                                       3079
         AG_Y = 0.0                                                       3079
         AG_Z = 0.0                                                       3079
         AG_TITLE = 'ISCO'                                                3079
         AG_EXNAME = 'POSITION'                                           3079
         AG_PARLIST = 'X_Y_Z'                                             3079
         CALL AXPOSITION                                                  3079
C    *                                                                    3079
5061  CALL AGSPOPB                                                        3081
      GO TO BLOCK_IBME, (5060 ,5070)                                      3081
C End of Local Procedure                                                  3081
* -----------------------------------------------------------------------------
C Begin Local Procedure IBMW                                              3084
C IBMW IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE EAST SIDE      3084
5080  CONTINUE                                                            3084
         AG_TITLE='IBMW'                                                  3084
         AG_MODULE=MODULE                                                 3084
         AG_MARK='V00'                                                    3084
         CALL AGSPUSH                                                     3084
         AG_MODULE=MODULE                                                 3084
C    *                                                                    3084
C    Geant MATERIAL : AIR ===> inherited arguments used <===              3085
         CALL AGSRESET                                                    3085
         AG_TITLE = 'AIR'                                                 3085
         AG_EXNAME = 'MATERIAL'                                           3085
         AG_PARLIST = 'NONE'                                              3085
         CALL AXMATERIAL                                                  3085
C    *                                                                    3085
C    Geant ATTRIBUTE : IBMW ===> SEEN=0 COLO=1 <===                       3085
         CALL AGSRESET                                                    3086
         AG_SEEN = 0                                                      3086
         AG_COLO = 1                                                      3086
         AG_TITLE = 'IBMW'                                                3086
         AG_EXNAME = 'ATTRIBUTE'                                          3086
         AG_PARLIST = 'SEEN_COLO'                                         3086
         CALL AXATTRIBUTE                                                 3086
C    *                                                                    3086
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN2 RMX1=ISCC_ROUT2 RMN2 = ISCC_  3086
C    RIN1 RMX2 = ISCC_ROUT1 DZ = ISCC_LENGTH/2.0 <===                     3086
         CALL AGSRESET                                                    3091
         AG_RMN1 = ISCC_RIN2                                              3091
         AG_RMX1 = ISCC_ROUT2                                             3091
         AG_RMN2 = ISCC_RIN1                                              3091
         AG_RMX2 = ISCC_ROUT1                                             3091
         AG_DZ = ISCC_LENGTH/2.0                                          3091
         AG_TITLE = 'CONE'                                                3091
         AG_EXNAME = 'SHAPE'                                              3091
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            3091
         CALL AXSHAPE                                                     3091
C    *                                                                    3091
C    use ISBG bank                                                        3093
         BPATH_ISBG='ISBG*'                                               3093
         IDNUM_ISBG(1)=0                                                  3093
         ISBG_LAYER=2                                                     3093
         CALL AGDGETP('ISTBGEO5','*',-999,'ISBG',NISBG_LAYER,             3093
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       3093
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                3093
C    use ISRR bank                                                        3094
         BPATH_ISRR='ISRR*'                                               3094
         IDNUM_ISRR(1)=0                                                  3094
         ISRR_LAYER=2                                                     3094
         CALL AGDGETP('ISTBGEO5','*',-999,'ISRR',NISRR_LAYER,             3094
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       3094
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                3094
C    use ISCC bank                                                        3095
         BPATH_ISCC='ISCC*'                                               3095
         IDNUM_ISCC(1)=0                                                  3095
         ISCC_VERSION=1                                                   3095
         CALL AGDGETP('ISTBGEO5','*',-999,'ISCC',NISCC_VERSION,           3095
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     3095
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                3095
C    Create ISCO :                                                        3096
C    Call To Local Procedure ISCO                                         3096
         ASSIGN 5170 TO BLOCK_ISCO                                        3096
         GO TO  5150                                                      3096
5170     CONTINUE                                                         3096
C    *                                                                    3096
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 ALPHAX = 180 <===     3100
         CALL AGSRESET                                                    3100
         AG_X = 0.0                                                       3100
         AG_Y = 0.0                                                       3100
         AG_Z = 0.0                                                       3100
         AG_ALPHAN=AG_ALPHAN+1                                            3100
         AG_ALPHAK(AG_ALPHAN)=1                                           3100
         AG_ALPHAL(AG_ALPHAN)=180                                         3100
         AG_TITLE = 'ISCO'                                                3100
         AG_EXNAME = 'POSITION'                                           3100
         AG_PARLIST = 'X_Y_Z_ALPHAX'                                      3100
         CALL AXPOSITION                                                  3100
C    *                                                                    3100
5081  CALL AGSPOPB                                                        3102
      GO TO BLOCK_IBMW, (5080 ,5090)                                      3102
C End of Local Procedure                                                  3102
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              3105
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             3105
5110  CONTINUE                                                            3105
         AG_TITLE='IBAM'                                                  3105
         AG_MODULE=MODULE                                                 3105
         AG_MARK='V00'                                                    3105
         CALL AGSPUSH                                                     3105
         AG_MODULE=MODULE                                                 3105
C    *                                                                    3105
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=1 <===                       3106
         CALL AGSRESET                                                    3106
         AG_SEEN = 0                                                      3106
         AG_COLO = 1                                                      3106
         AG_TITLE = 'IBAM'                                                3106
         AG_EXNAME = 'ATTRIBUTE'                                          3106
         AG_PARLIST = 'SEEN_COLO'                                         3106
         CALL AXATTRIBUTE                                                 3106
C    *                                                                    3106
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_LADDERTHK/2.  3110
C    0 DZ = ISBG_LENGTH/2.0 <===                                          3110
         CALL AGSRESET                                                    3110
         AG_DX = ISBG_LADDERWIDTH/2.0                                     3110
         AG_DY = ISBG_LADDERTHK/2.0                                       3110
         AG_DZ = ISBG_LENGTH/2.0                                          3110
         AG_TITLE = 'BOX'                                                 3110
         AG_EXNAME = 'SHAPE'                                              3110
         AG_PARLIST = 'DX_DY_DZ'                                          3110
         CALL AXSHAPE                                                     3110
C    *                                                                    3110
C    use ISHY bank                                                        3112
         BPATH_ISHY='ISHY*'                                               3112
         IDNUM_ISHY(1)=0                                                  3112
         ISHY_VERSION=1                                                   3112
         CALL AGDGETP('ISTBGEO5','*',-999,'ISHY',NISHY_VERSION,           3112
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     3112
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                3112
C    Create ISKH :                                                        3113
C    Call To Local Procedure ISKH                                         3113
         ASSIGN 5190 TO BLOCK_ISKH                                        3113
         GO TO  5180                                                      3113
5190     CONTINUE                                                         3113
C    *                                                                    3113
C    Create ISCL :                                                        3114
C    Call To Local Procedure ISCL                                         3114
         ASSIGN 5210 TO BLOCK_ISCL                                        3114
         GO TO  5200                                                      3114
5210     CONTINUE                                                         3114
C    *                                                                    3114
C    Create IBLM :                                                        3115
C    Call To Local Procedure IBLM                                         3115
         ASSIGN 5230 TO BLOCK_IBLM                                        3115
         GO TO  5220                                                      3115
5230     CONTINUE                                                         3115
C    *                                                                    3115
C    *                                                                    3116
         NU=1                                                             3116
            GO TO 5243                                                    3116
5241        NU=NU+1                                                       3116
5243        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5242                           3116
* --    IST modules
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -ISBG_LENGTH/2.0+ISBG  3120
C       _SENSORWIDTH*(NU-0.5) <===                                        3120
            CALL AGSRESET                                                 3120
            AG_X = 0.0                                                    3120
            AG_Y = 0.0                                                    3120
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3120
            AG_TITLE = 'IBLM'                                             3120
            AG_EXNAME = 'POSITION'                                        3120
            AG_PARLIST = 'X_Y_Z'                                          3120
            CALL AXPOSITION                                               3120
C       *                                                                 3120
* --    Dummy readout cables (Kapton+Copper) stacked on top of modules
* --    Note that the first part of the cable (the hybrid) is already part of the module
* --    daisy chain cables as: 5 sensors + 4 sensors             (for layer 1)
* --                           5 sensors + 5 sensors + 3 sensors (for layer 2)
C       Check NU>5                                                        3125
            IF (NU.GT.5) THEN                                             3125
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK/2.0  3128
C       ) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===             3128
            CALL AGSRESET                                                 3128
            AG_X = 0.0                                                    3128
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK/2.0)                         3128
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3128
            AG_TITLE = 'ISKH'                                             3128
            AG_EXNAME = 'POSITION'                                        3128
            AG_PARLIST = 'X_Y_Z'                                          3128
            CALL AXPOSITION                                               3128
C       *                                                                 3128
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  3128
C       U_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===    3128
            CALL AGSRESET                                                 3131
            AG_X = 0.0                                                    3131
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)                3131
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3131
            AG_TITLE = 'ISCL'                                             3131
            AG_EXNAME = 'POSITION'                                        3131
            AG_PARLIST = 'X_Y_Z'                                          3131
            CALL AXPOSITION                                               3131
C       *                                                                 3131
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK/2.  3131
C       0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===            3131
            CALL AGSRESET                                                 3134
            AG_X = 0.0                                                    3134
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK/2.0)                        3134
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3134
            AG_TITLE = 'ISKH'                                             3134
            AG_EXNAME = 'POSITION'                                        3134
            AG_PARLIST = 'X_Y_Z'                                          3134
            CALL AXPOSITION                                               3134
C       *                                                                 3134
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  3134
C       CU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===   3134
            CALL AGSRESET                                                 3137
            AG_X = 0.0                                                    3137
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)               3137
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3137
            AG_TITLE = 'ISCL'                                             3137
            AG_EXNAME = 'POSITION'                                        3137
            AG_PARLIST = 'X_Y_Z'                                          3137
            CALL AXPOSITION                                               3137
C       *                                                                 3137
            ENDIF                                                         3137
C       Check NU>10                                                       3139
            IF (NU.GT.10) THEN                                            3139
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  3142
C       U_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.  3142
C       5) <===                                                           3142
            CALL AGSRESET                                                 3142
            AG_X = 0.0                                                    3142
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)       3142
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3142
            AG_TITLE = 'ISKH'                                             3142
            AG_EXNAME = 'POSITION'                                        3142
            AG_PARLIST = 'X_Y_Z'                                          3142
            CALL AXPOSITION                                               3142
C       *                                                                 3142
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  3142
C       U_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWID  3142
C       TH*(NU-0.5) <===                                                  3142
            CALL AGSRESET                                                 3145
            AG_X = 0.0                                                    3145
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/  3145
     *      2.0)                                                          3145
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3145
            AG_TITLE = 'ISCL'                                             3145
            AG_EXNAME = 'POSITION'                                        3145
            AG_PARLIST = 'X_Y_Z'                                          3145
            CALL AXPOSITION                                               3145
C       *                                                                 3145
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  3145
C       CU_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0  3145
C       .5) <===                                                          3145
            CALL AGSRESET                                                 3148
            AG_X = 0.0                                                    3148
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)      3148
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3148
            AG_TITLE = 'ISKH'                                             3148
            AG_EXNAME = 'POSITION'                                        3148
            AG_PARLIST = 'X_Y_Z'                                          3148
            CALL AXPOSITION                                               3148
C       *                                                                 3148
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  3148
C       CU_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWI  3148
C       DTH*(NU-0.5) <===                                                 3148
            CALL AGSRESET                                                 3151
            AG_X = 0.0                                                    3151
            AG_Y = -1.0*(MOD_THK/                                         3151
     *      2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/2.0)                  3151
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3151
            AG_TITLE = 'ISCL'                                             3151
            AG_EXNAME = 'POSITION'                                        3151
            AG_PARLIST = 'X_Y_Z'                                          3151
            CALL AXPOSITION                                               3151
C       *                                                                 3151
            ENDIF                                                         3151
         GO TO 5241                                                       3154
5242     CONTINUE                                                         3154
5111  CALL AGSPOPB                                                        3156
      GO TO BLOCK_IBAM, (5110 ,5120)                                      3156
C End of Local Procedure                                                  3156
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              3159
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               3159
5220  CONTINUE                                                            3159
         AG_TITLE='IBLM'                                                  3159
         AG_MODULE=MODULE                                                 3159
         AG_MARK='V00'                                                    3159
         CALL AGSPUSH                                                     3159
         AG_MODULE=MODULE                                                 3159
C    *                                                                    3159
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=2 SERIAL=ISTLAYER <===       3160
         CALL AGSRESET                                                    3160
         AG_SEEN = 0                                                      3160
         AG_COLO = 2                                                      3160
         AG_SERIAL = ISTLAYER                                             3160
         AG_TITLE = 'IBLM'                                                3160
         AG_EXNAME = 'ATTRIBUTE'                                          3160
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3160
         CALL AXATTRIBUTE                                                 3160
C    *                                                                    3160
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_SENSATHK/2.0  3164
C     DZ = ISBG_SENSORLNGTH/2.0 <===                                      3164
         CALL AGSRESET                                                    3164
         AG_DX = ISBG_LADDERWIDTH/2.0                                     3164
         AG_DY = ISBG_SENSATHK/2.0                                        3164
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     3164
         AG_TITLE = 'BOX'                                                 3164
         AG_EXNAME = 'SHAPE'                                              3164
         AG_PARLIST = 'DX_DY_DZ'                                          3164
         CALL AXSHAPE                                                     3164
C    *                                                                    3164
* -- Start stacking all the parts of the module
* -- Note that the module are mirror symmetric wrt the x-z plane
* -- with exception of the readout chips (minimize average material!)
* -- Carbon foam
C    use ISAN bank                                                        3171
         BPATH_ISAN='ISAN*'                                               3171
         IDNUM_ISAN(1)=0                                                  3171
         ISAN_VERSION=1                                                   3171
         CALL AGDGETP('ISTBGEO5','*',-999,'ISAN',NISAN_VERSION,           3171
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     3171
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                3171
C    Create ISTP :                                                        3172
C    Call To Local Procedure ISTP                                         3172
         ASSIGN 5260 TO BLOCK_ISTP                                        3172
         GO TO  5250                                                      3172
5260     CONTINUE                                                         3172
C    *                                                                    3172
C    Geant POSITION : ISTP ===> X=0.0 Y=0.0 Z = 0.0 <===                  3175
         CALL AGSRESET                                                    3175
         AG_X = 0.0                                                       3175
         AG_Y = 0.0                                                       3175
         AG_Z = 0.0                                                       3175
         AG_TITLE = 'ISTP'                                                3175
         AG_EXNAME = 'POSITION'                                           3175
         AG_PARLIST = 'X_Y_Z'                                             3175
         CALL AXPOSITION                                                  3175
C    *                                                                    3175
* -- Glue layers between foam and silicon
C    use ISGA bank                                                        3178
         BPATH_ISGA='ISGA*'                                               3178
         IDNUM_ISGA(1)=0                                                  3178
         ISGA_VERSION=1                                                   3178
         CALL AGDGETP('ISTBGEO5','*',-999,'ISGA',NISGA_VERSION,           3178
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     3178
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                3178
C    Create ISXA :                                                        3179
C    Call To Local Procedure ISXA                                         3179
         ASSIGN 5280 TO BLOCK_ISXA                                        3179
         GO TO  5270                                                      3179
5280     CONTINUE                                                         3179
C    *                                                                    3179
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK/2.0 Z   3182
C    = 0.0 <===                                                           3182
         CALL AGSRESET                                                    3182
         AG_X = 0.0                                                       3182
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK/2.0                             3182
         AG_Z = 0.0                                                       3182
         AG_TITLE = 'ISXA'                                                3182
         AG_EXNAME = 'POSITION'                                           3182
         AG_PARLIST = 'X_Y_Z'                                             3182
         CALL AXPOSITION                                                  3182
C    *                                                                    3182
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK/2.0 Z  3182
C     = 0.0 <===                                                          3182
         CALL AGSRESET                                                    3185
         AG_X = 0.0                                                       3185
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK/2.0                            3185
         AG_Z = 0.0                                                       3185
         AG_TITLE = 'ISXA'                                                3185
         AG_EXNAME = 'POSITION'                                           3185
         AG_PARLIST = 'X_Y_Z'                                             3185
         CALL AXPOSITION                                                  3185
C    *                                                                    3185
* -- Silicon Sensors
C    Create IBSS :                                                        3188
C    Call To Local Procedure IBSS                                         3188
         ASSIGN 5300 TO BLOCK_IBSS                                        3188
         GO TO  5290                                                      3188
5300     CONTINUE                                                         3188
C    *                                                                    3188
C    Geant POSITION : IBSS ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3191
C    ENSORTHK/2.0 Z = 0.0 <===                                            3191
         CALL AGSRESET                                                    3191
         AG_X = 0.0                                                       3191
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK/2.0              3191
         AG_Z = 0.0                                                       3191
         AG_TITLE = 'IBSS'                                                3191
         AG_EXNAME = 'POSITION'                                           3191
         AG_PARLIST = 'X_Y_Z'                                             3191
         CALL AXPOSITION                                                  3191
C    *                                                                    3191
C    Geant POSITION : IBSS ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3191
C    SENSORTHK/2.0 Z = 0.0 ALPHAZ = 180 <===                              3191
         CALL AGSRESET                                                    3195
         AG_X = 0.0                                                       3195
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK/2.0             3195
         AG_Z = 0.0                                                       3195
         AG_ALPHAN=AG_ALPHAN+1                                            3195
         AG_ALPHAK(AG_ALPHAN)=3                                           3195
         AG_ALPHAL(AG_ALPHAN)=180                                         3195
         AG_TITLE = 'IBSS'                                                3195
         AG_EXNAME = 'POSITION'                                           3195
         AG_PARLIST = 'X_Y_Z_ALPHAZ'                                      3195
         CALL AXPOSITION                                                  3195
C    *                                                                    3195
* -- Glue layers between silicon and hybrid
C    use ISGA bank                                                        3198
         BPATH_ISGA='ISGA*'                                               3198
         IDNUM_ISGA(1)=0                                                  3198
         ISGA_VERSION=1                                                   3198
         CALL AGDGETP('ISTBGEO5','*',-999,'ISGA',NISGA_VERSION,           3198
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     3198
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                3198
C    Create ISXA :                                                        3199
C    Call To Local Procedure ISXA                                         3199
         ASSIGN 5310 TO BLOCK_ISXA                                        3199
         GO TO  5270                                                      3199
5310     CONTINUE                                                         3199
C    *                                                                    3199
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3202
C    ENSORTHK+ISGA_THK/2.0 Z = 0.0 <===                                   3202
         CALL AGSRESET                                                    3202
         AG_X = 0.0                                                       3202
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK/2.0     3202
         AG_Z = 0.0                                                       3202
         AG_TITLE = 'ISXA'                                                3202
         AG_EXNAME = 'POSITION'                                           3202
         AG_PARLIST = 'X_Y_Z'                                             3202
         CALL AXPOSITION                                                  3202
C    *                                                                    3202
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3202
C    SENSORTHK-ISGA_THK/2.0 Z = 0.0 <===                                  3202
         CALL AGSRESET                                                    3205
         AG_X = 0.0                                                       3205
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK/2.0    3205
         AG_Z = 0.0                                                       3205
         AG_TITLE = 'ISXA'                                                3205
         AG_EXNAME = 'POSITION'                                           3205
         AG_PARLIST = 'X_Y_Z'                                             3205
         CALL AXPOSITION                                                  3205
C    *                                                                    3205
* -- Kapton hybrids
C    use ISHY bank                                                        3208
         BPATH_ISHY='ISHY*'                                               3208
         IDNUM_ISHY(1)=0                                                  3208
         ISHY_VERSION=1                                                   3208
         CALL AGDGETP('ISTBGEO5','*',-999,'ISHY',NISHY_VERSION,           3208
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     3208
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                3208
C    Create ISKH :                                                        3209
C    Call To Local Procedure ISKH                                         3209
         ASSIGN 5320 TO BLOCK_ISKH                                        3209
         GO TO  5180                                                      3209
5320     CONTINUE                                                         3209
C    *                                                                    3209
C    Geant POSITION : ISKH ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3212
C    ENSORTHK+ISGA_THK+ISHY_THK/2.0 Z = 0.0 <===                          3212
         CALL AGSRESET                                                    3212
         AG_X = 0.0                                                       3212
         AG_Y = 1.0*ISAN_THK/                                             3212
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK/2.0                3212
         AG_Z = 0.0                                                       3212
         AG_TITLE = 'ISKH'                                                3212
         AG_EXNAME = 'POSITION'                                           3212
         AG_PARLIST = 'X_Y_Z'                                             3212
         CALL AXPOSITION                                                  3212
C    *                                                                    3212
C    Geant POSITION : ISKH ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3212
C    SENSORTHK-ISGA_THK-ISHY_THK/2.0 Z = 0.0 <===                         3212
         CALL AGSRESET                                                    3215
         AG_X = 0.0                                                       3215
         AG_Y = -1.0*ISAN_THK/                                            3215
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK/2.0                3215
         AG_Z = 0.0                                                       3215
         AG_TITLE = 'ISKH'                                                3215
         AG_EXNAME = 'POSITION'                                           3215
         AG_PARLIST = 'X_Y_Z'                                             3215
         CALL AXPOSITION                                                  3215
C    *                                                                    3215
* -- Copper on the hybrid, 10 um total for couple of 5um lines at 50% coverage + ground plane
C    use ISCU bank                                                        3218
         BPATH_ISCU='ISCU*'                                               3218
         IDNUM_ISCU(1)=0                                                  3218
         ISCU_VERSION=1                                                   3218
         CALL AGDGETP('ISTBGEO5','*',-999,'ISCU',NISCU_VERSION,           3218
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     3218
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                3218
C    Create ISCL :                                                        3219
C    Call To Local Procedure ISCL                                         3219
         ASSIGN 5330 TO BLOCK_ISCL                                        3219
         GO TO  5200                                                      3219
5330     CONTINUE                                                         3219
C    *                                                                    3219
C    Geant POSITION : ISCL ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3222
C    ENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0 Z = 0.0 <===                 3222
         CALL AGSRESET                                                    3222
         AG_X = 0.0                                                       3222
         AG_Y = 1.0*ISAN_THK/                                             3222
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0       3222
         AG_Z = 0.0                                                       3222
         AG_TITLE = 'ISCL'                                                3222
         AG_EXNAME = 'POSITION'                                           3222
         AG_PARLIST = 'X_Y_Z'                                             3222
         CALL AXPOSITION                                                  3222
C    *                                                                    3222
C    Geant POSITION : ISCL ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3222
C    SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0 Z = 0.0 <===                3222
         CALL AGSRESET                                                    3225
         AG_X = 0.0                                                       3225
         AG_Y = -1.0*ISAN_THK/                                            3225
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0       3225
         AG_Z = 0.0                                                       3225
         AG_TITLE = 'ISCL'                                                3225
         AG_EXNAME = 'POSITION'                                           3225
         AG_PARLIST = 'X_Y_Z'                                             3225
         CALL AXPOSITION                                                  3225
C    *                                                                    3225
* -- Glue layers between hybrid and chip
C    use ISGB bank                                                        3228
         BPATH_ISGB='ISGB*'                                               3228
         IDNUM_ISGB(1)=0                                                  3228
         ISGB_VERSION=1                                                   3228
         CALL AGDGETP('ISTBGEO5','*',-999,'ISGB',NISGB_VERSION,           3228
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     3228
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                3228
C    Create ISLB :                                                        3229
C    Call To Local Procedure ISLB                                         3229
         ASSIGN 5350 TO BLOCK_ISLB                                        3229
         GO TO  5340                                                      3229
5350     CONTINUE                                                         3229
C    *                                                                    3229
C    Geant POSITION : ISLB ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  3232
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  3232
C    _THK+ISGB_THK/2.0 Z = 0.0 <===                                       3232
         CALL AGSRESET                                                    3232
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   3232
         AG_Y = 1.0*ISAN_THK/                                             3232
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          3232
     *   ISGB_THK/2.0                                                     3232
         AG_Z = 0.0                                                       3232
         AG_TITLE = 'ISLB'                                                3232
         AG_EXNAME = 'POSITION'                                           3232
         AG_PARLIST = 'X_Y_Z'                                             3232
         CALL AXPOSITION                                                  3232
C    *                                                                    3232
C    Geant POSITION : ISLB ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  3232
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  3232
C    CU_THK-ISGB_THK/2.0 Z = 0.0 <===                                     3232
         CALL AGSRESET                                                    3235
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  3235
         AG_Y = -1.0*ISAN_THK/                                            3235
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          3235
     *   ISGB_THK/2.0                                                     3235
         AG_Z = 0.0                                                       3235
         AG_TITLE = 'ISLB'                                                3235
         AG_EXNAME = 'POSITION'                                           3235
         AG_PARLIST = 'X_Y_Z'                                             3235
         CALL AXPOSITION                                                  3235
C    *                                                                    3235
* -- Readout chips, put at 2mm from the edge of the sensor
C    use ISCG bank                                                        3238
         BPATH_ISCG='ISCG*'                                               3238
         IDNUM_ISCG(1)=0                                                  3238
         ISCG_VERSION=1                                                   3238
         CALL AGDGETP('ISTBGEO5','*',-999,'ISCG',NISCG_VERSION,           3238
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     3238
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                3238
C    Create ISSC :                                                        3239
C    Call To Local Procedure ISSC                                         3239
         ASSIGN 5370 TO BLOCK_ISSC                                        3239
         GO TO  5360                                                      3239
5370     CONTINUE                                                         3239
C    *                                                                    3239
C    Geant POSITION : ISSC ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  3242
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  3242
C    _THK+ISGB_THK+ISCG_THK/2.0 Z = 0.0 <===                              3242
         CALL AGSRESET                                                    3242
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   3242
         AG_Y = 1.0*ISAN_THK/                                             3242
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          3242
     *   ISGB_THK+ISCG_THK/2.0                                            3242
         AG_Z = 0.0                                                       3242
         AG_TITLE = 'ISSC'                                                3242
         AG_EXNAME = 'POSITION'                                           3242
         AG_PARLIST = 'X_Y_Z'                                             3242
         CALL AXPOSITION                                                  3242
C    *                                                                    3242
C    Geant POSITION : ISSC ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  3242
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  3242
C    CU_THK-ISGB_THK-ISCG_THK/2.0 Z = 0.0 <===                            3242
         CALL AGSRESET                                                    3245
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  3245
         AG_Y = -1.0*ISAN_THK/                                            3245
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          3245
     *   ISGB_THK-ISCG_THK/2.0                                            3245
         AG_Z = 0.0                                                       3245
         AG_TITLE = 'ISSC'                                                3245
         AG_EXNAME = 'POSITION'                                           3245
         AG_PARLIST = 'X_Y_Z'                                             3245
         CALL AXPOSITION                                                  3245
C    *                                                                    3245
5221  CALL AGSPOPB                                                        3245
      GO TO BLOCK_IBLM, (5220 ,5230)                                      3246
C End of Local Procedure                                                  3246
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              3249
C IBSS IS THE SILICON SENSOR                                              3249
5290  CONTINUE                                                            3249
         AG_TITLE='IBSS'                                                  3249
         AG_MODULE=MODULE                                                 3249
         AG_MARK='V00'                                                    3249
         CALL AGSPUSH                                                     3249
         AG_MODULE=MODULE                                                 3249
C    *                                                                    3249
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          3250
         CALL AGSRESET                                                    3250
         AG_TITLE = 'SILICON'                                             3250
         AG_EXNAME = 'MATERIAL'                                           3250
         AG_PARLIST = 'NONE'                                              3250
         CALL AXMATERIAL                                                  3250
C    *                                                                    3250
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         3250
         CALL AGSRESET                                                    3251
         AG_ISVOL = 1                                                     3251
         AG_TITLE = 'SENSITIVE'                                           3251
         AG_EXNAME = 'MATERIAL'                                           3251
         AG_PARLIST = 'ISVOL'                                             3251
         CALL AXMATERIAL                                                  3251
C    *                                                                    3251
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=38 <===                      3253
         CALL AGSRESET                                                    3253
         AG_SEEN = 1                                                      3253
         AG_COLO = 38                                                     3253
         AG_TITLE = 'IBSS'                                                3253
         AG_EXNAME = 'ATTRIBUTE'                                          3253
         AG_PARLIST = 'SEEN_COLO'                                         3253
         CALL AXATTRIBUTE                                                 3253
C    *                                                                    3253
C    Geant SHAPE : BOX ===> DX=ISBG_SENSORWIDTH/2.0 DY=ISBG_SENSORTHK/2.  3257
C    0 DZ = ISBG_SENSORLNGTH/2.0 <===                                     3257
         CALL AGSRESET                                                    3257
         AG_DX = ISBG_SENSORWIDTH/2.0                                     3257
         AG_DY = ISBG_SENSORTHK/2.0                                       3257
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     3257
         AG_TITLE = 'BOX'                                                 3257
         AG_EXNAME = 'SHAPE'                                              3257
         AG_PARLIST = 'DX_DY_DZ'                                          3257
         CALL AXSHAPE                                                     3257
C    *                                                                    3257
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  3261
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  3261
C    ,0.001)                                                              3261
         AG_TITLE = 'IBSS'                                                3261
         AG_EXNAME = 'HITS'                                               3261
         AG_TYPE=AG_MAGIC                                                 3261
         CALL AGSDETV('IBSS')                                             3261
C    *                                                                    3261
         AG_PARLIST='Z'                                                   3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = AG_MAGIC                                              3261
         AG_BIN=.001                                                      3261
         AG_OPTION='S'                                                    3261
         AG_FHMIN = AG_MAGIC                                              3261
         AG_FHMAX = AG_MAGIC                                              3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='Y'                                                   3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = AG_MAGIC                                              3261
         AG_BIN=.001                                                      3261
         AG_FHMIN=AG_MAGIC                                                3261
         AG_FHMAX=AG_MAGIC                                                3261
         AG_OPTION='*'                                                    3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='X'                                                   3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = AG_MAGIC                                              3261
         AG_BIN=.001                                                      3261
         AG_FHMIN=AG_MAGIC                                                3261
         AG_FHMAX=AG_MAGIC                                                3261
         AG_OPTION='*'                                                    3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='PTOT'                                                3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = 16                                                    3261
         AG_BIN=AG_MAGIC                                                  3261
         AG_OPTION='*'                                                    3261
         AG_FHMIN = 0                                                     3261
         AG_FHMAX = 100                                                   3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='CX'                                                  3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = 10                                                    3261
         AG_BIN=AG_MAGIC                                                  3261
         AG_FHMIN=AG_MAGIC                                                3261
         AG_FHMAX=AG_MAGIC                                                3261
         AG_OPTION='*'                                                    3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='CY'                                                  3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = 10                                                    3261
         AG_BIN=AG_MAGIC                                                  3261
         AG_FHMIN=AG_MAGIC                                                3261
         AG_FHMAX=AG_MAGIC                                                3261
         AG_OPTION='*'                                                    3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='CZ'                                                  3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = 10                                                    3261
         AG_BIN=AG_MAGIC                                                  3261
         AG_FHMIN=AG_MAGIC                                                3261
         AG_FHMAX=AG_MAGIC                                                3261
         AG_OPTION='*'                                                    3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='SLENG'                                               3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = 16                                                    3261
         AG_BIN=AG_MAGIC                                                  3261
         AG_OPTION='*'                                                    3261
         AG_FHMIN = 0                                                     3261
         AG_FHMAX = 500                                                   3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='TOF'                                                 3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = 16                                                    3261
         AG_BIN=AG_MAGIC                                                  3261
         AG_OPTION='*'                                                    3261
         AG_FHMIN = 0                                                     3261
         AG_FHMAX = 1.E-6                                                 3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='STEP'                                                3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = AG_MAGIC                                              3261
         AG_BIN=.01                                                       3261
         AG_FHMIN=AG_MAGIC                                                3261
         AG_FHMAX=AG_MAGIC                                                3261
         AG_OPTION='*'                                                    3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         AG_PARLIST='ELOSS'                                               3261
         AG_TITLE = 'DETH'                                                3261
         AG_NBITS = 16                                                    3261
         AG_BIN=AG_MAGIC                                                  3261
         AG_OPTION='*'                                                    3261
         AG_FHMIN = 0                                                     3261
         AG_FHMAX = 0.001                                                 3261
         CALL AGSDETH (0)                                                 3261
C    *                                                                    3261
         CALL AGSDETU('IBSS')                                             3261
C    *                                                                    3261
5291  CALL AGSPOPB                                                        3263
      GO TO BLOCK_IBSS, (5290 ,5300)                                      3263
C End of Local Procedure                                                  3263
* -----------------------------------------------------------------------------
C Begin Local Procedure ISKH                                              3266
C ISKH IS THE KAPTON HYBRID                                               3266
5180  CONTINUE                                                            3266
         AG_TITLE='ISKH'                                                  3266
         AG_MODULE=MODULE                                                 3266
         AG_MARK='V00'                                                    3266
         CALL AGSPUSH                                                     3266
         AG_MODULE=MODULE                                                 3266
C    *                                                                    3266
C    Geant ATTRIBUTE : ISKH ===> SEEN=1 COLO=42 <===                      3267
         CALL AGSRESET                                                    3267
         AG_SEEN = 1                                                      3267
         AG_COLO = 42                                                     3267
         AG_TITLE = 'ISKH'                                                3267
         AG_EXNAME = 'ATTRIBUTE'                                          3267
         AG_PARLIST = 'SEEN_COLO'                                         3267
         CALL AXATTRIBUTE                                                 3267
C    *                                                                    3267
C    KAPTON C22-H10-N2-O4                                                 3269
C    Geant COMPONENT : C ===> A=12 Z=6 W=22.0*12.0/366.0 <===             3270
         CALL AGSRESET                                                    3270
         AG_A = 12                                                        3270
         AG_Z = 6                                                         3270
         AG_W = 22.0*12.0/366.0                                           3270
         AG_TITLE = 'C'                                                   3270
         AG_EXNAME = 'COMPONENT'                                          3270
         AG_PARLIST = 'A_Z_W'                                             3270
         CALL AXCOMPONENT                                                 3270
C    *                                                                    3270
C    Geant COMPONENT : H ===> A=1 Z=1 W=10.0*1.0/366.0 <===               3270
         CALL AGSRESET                                                    3271
         AG_A = 1                                                         3271
         AG_Z = 1                                                         3271
         AG_W = 10.0*1.0/366.0                                            3271
         AG_TITLE = 'H'                                                   3271
         AG_EXNAME = 'COMPONENT'                                          3271
         AG_PARLIST = 'A_Z_W'                                             3271
         CALL AXCOMPONENT                                                 3271
C    *                                                                    3271
C    Geant COMPONENT : N ===> A=14 Z=7 W=2.0*14.0/366.0 <===              3271
         CALL AGSRESET                                                    3272
         AG_A = 14                                                        3272
         AG_Z = 7                                                         3272
         AG_W = 2.0*14.0/366.0                                            3272
         AG_TITLE = 'N'                                                   3272
         AG_EXNAME = 'COMPONENT'                                          3272
         AG_PARLIST = 'A_Z_W'                                             3272
         CALL AXCOMPONENT                                                 3272
C    *                                                                    3272
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/366.0 <===              3272
         CALL AGSRESET                                                    3273
         AG_A = 16                                                        3273
         AG_Z = 8                                                         3273
         AG_W = 4.0*16.0/366.0                                            3273
         AG_TITLE = 'O'                                                   3273
         AG_EXNAME = 'COMPONENT'                                          3273
         AG_PARLIST = 'A_Z_W'                                             3273
         CALL AXCOMPONENT                                                 3273
C    *                                                                    3273
C    Geant MIXTURE : KAPTON ===> DENS=1.42 <===                           3273
         CALL AGSRESET                                                    3274
         AG_DENS = 1.42                                                   3274
         AG_TITLE = 'KAPTON'                                              3274
         AG_EXNAME = 'MIXTURE'                                            3274
         AG_PARLIST = 'DENS'                                              3274
         CALL AXMIXTURE                                                   3274
C    *                                                                    3274
C    Geant SHAPE : BOX ===> DX=ISHY_H/2.0 DY=ISHY_THK/2.0 DZ = ISHY_W/2.  3278
C    0 <===                                                               3278
         CALL AGSRESET                                                    3278
         AG_DX = ISHY_H/2.0                                               3278
         AG_DY = ISHY_THK/2.0                                             3278
         AG_DZ = ISHY_W/2.0                                               3278
         AG_TITLE = 'BOX'                                                 3278
         AG_EXNAME = 'SHAPE'                                              3278
         AG_PARLIST = 'DX_DY_DZ'                                          3278
         CALL AXSHAPE                                                     3278
C    *                                                                    3278
5181  CALL AGSPOPB                                                        3280
      GO TO BLOCK_ISKH, (5180 ,5190,5320)                                 3280
C End of Local Procedure                                                  3280
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCL                                              3283
C ISCL IS THE COPPER LAYER ON THE KAPTON HYBRID                           3283
5200  CONTINUE                                                            3283
         AG_TITLE='ISCL'                                                  3283
         AG_MODULE=MODULE                                                 3283
         AG_MARK='V00'                                                    3283
         CALL AGSPUSH                                                     3283
         AG_MODULE=MODULE                                                 3283
C    *                                                                    3283
C    Geant ATTRIBUTE : ISCL ===> SEEN=1 COLO=46 <===                      3284
         CALL AGSRESET                                                    3284
         AG_SEEN = 1                                                      3284
         AG_COLO = 46                                                     3284
         AG_TITLE = 'ISCL'                                                3284
         AG_EXNAME = 'ATTRIBUTE'                                          3284
         AG_PARLIST = 'SEEN_COLO'                                         3284
         CALL AXATTRIBUTE                                                 3284
C    *                                                                    3284
C    Geant MATERIAL : COPPER ===> inherited arguments used <===           3286
         CALL AGSRESET                                                    3286
         AG_TITLE = 'COPPER'                                              3286
         AG_EXNAME = 'MATERIAL'                                           3286
         AG_PARLIST = 'NONE'                                              3286
         CALL AXMATERIAL                                                  3286
C    *                                                                    3286
C    Geant SHAPE : BOX ===> DX=ISCU_H/2.0 DY=ISCU_THK/2.0 DZ = ISCU_W/2.  3290
C    0 <===                                                               3290
         CALL AGSRESET                                                    3290
         AG_DX = ISCU_H/2.0                                               3290
         AG_DY = ISCU_THK/2.0                                             3290
         AG_DZ = ISCU_W/2.0                                               3290
         AG_TITLE = 'BOX'                                                 3290
         AG_EXNAME = 'SHAPE'                                              3290
         AG_PARLIST = 'DX_DY_DZ'                                          3290
         CALL AXSHAPE                                                     3290
C    *                                                                    3290
5201  CALL AGSPOPB                                                        3292
      GO TO BLOCK_ISCL, (5200 ,5210,5330)                                 3292
C End of Local Procedure                                                  3292
* -----------------------------------------------------------------------------
C Begin Local Procedure ISTP                                              3295
C ISTP IS THE CARBON FOAM                                                 3295
5250  CONTINUE                                                            3295
         AG_TITLE='ISTP'                                                  3295
         AG_MODULE=MODULE                                                 3295
         AG_MARK='V00'                                                    3295
         CALL AGSPUSH                                                     3295
         AG_MODULE=MODULE                                                 3295
C    *                                                                    3295
C    Geant ATTRIBUTE : ISTP ===> SEEN=1 COLO=13 <===                      3296
         CALL AGSRESET                                                    3296
         AG_SEEN = 1                                                      3296
         AG_COLO = 13                                                     3296
         AG_TITLE = 'ISTP'                                                3296
         AG_EXNAME = 'ATTRIBUTE'                                          3296
         AG_PARLIST = 'SEEN_COLO'                                         3296
         CALL AXATTRIBUTE                                                 3296
C    *                                                                    3296
C    CARBON FOAM DENSITY 0.24                                             3298
C    0.1 COMES FROM 4-5% OF CARBON DENSITY FOR CARBON FOAM                3299
C    0.24 IS WHEN WE ARTICIALLY INCREASE THE DENSITY TO SQUEEZE INTO 1.6  3300
C    86 MM                                                                3300
C    BETWEEN THE SENSORS                                                  3301
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        3302
         CALL AGSRESET                                                    3302
         AG_A = 12                                                        3302
         AG_Z = 6                                                         3302
         AG_W = 0.05                                                      3302
         AG_TITLE = 'C'                                                   3302
         AG_EXNAME = 'COMPONENT'                                          3302
         AG_PARLIST = 'A_Z_W'                                             3302
         CALL AXCOMPONENT                                                 3302
C    *                                                                    3302
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        3302
         CALL AGSRESET                                                    3303
         AG_A = 14                                                        3303
         AG_Z = 7                                                         3303
         AG_W = 0.95                                                      3303
         AG_TITLE = 'N'                                                   3303
         AG_EXNAME = 'COMPONENT'                                          3303
         AG_PARLIST = 'A_Z_W'                                             3303
         CALL AXCOMPONENT                                                 3303
C    *                                                                    3303
C    Geant MIXTURE : CFOAM ===> DENS=0.24 <===                            3303
         CALL AGSRESET                                                    3304
         AG_DENS = 0.24                                                   3304
         AG_TITLE = 'CFOAM'                                               3304
         AG_EXNAME = 'MIXTURE'                                            3304
         AG_PARLIST = 'DENS'                                              3304
         CALL AXMIXTURE                                                   3304
C    *                                                                    3304
C    Geant SHAPE : BOX ===> DX=ISAN_H/2.0 DY=ISAN_THK/2.0 DZ = ISAN_W/2.  3308
C    0 <===                                                               3308
         CALL AGSRESET                                                    3308
         AG_DX = ISAN_H/2.0                                               3308
         AG_DY = ISAN_THK/2.0                                             3308
         AG_DZ = ISAN_W/2.0                                               3308
         AG_TITLE = 'BOX'                                                 3308
         AG_EXNAME = 'SHAPE'                                              3308
         AG_PARLIST = 'DX_DY_DZ'                                          3308
         CALL AXSHAPE                                                     3308
C    *                                                                    3308
5251  CALL AGSPOPB                                                        3310
      GO TO BLOCK_ISTP, (5250 ,5260)                                      3310
C End of Local Procedure                                                  3310
* -----------------------------------------------------------------------------
C Begin Local Procedure ISSC                                              3313
C ISSC IS THE READOUT CHIP                                                3313
5360  CONTINUE                                                            3313
         AG_TITLE='ISSC'                                                  3313
         AG_MODULE=MODULE                                                 3313
         AG_MARK='V00'                                                    3313
         CALL AGSPUSH                                                     3313
         AG_MODULE=MODULE                                                 3313
C    *                                                                    3313
C    Geant ATTRIBUTE : ISSC ===> SEEN=1 COLO=37 <===                      3314
         CALL AGSRESET                                                    3314
         AG_SEEN = 1                                                      3314
         AG_COLO = 37                                                     3314
         AG_TITLE = 'ISSC'                                                3314
         AG_EXNAME = 'ATTRIBUTE'                                          3314
         AG_PARLIST = 'SEEN_COLO'                                         3314
         CALL AXATTRIBUTE                                                 3314
C    *                                                                    3314
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          3316
         CALL AGSRESET                                                    3316
         AG_TITLE = 'SILICON'                                             3316
         AG_EXNAME = 'MATERIAL'                                           3316
         AG_PARLIST = 'NONE'                                              3316
         CALL AXMATERIAL                                                  3316
C    *                                                                    3316
C    Geant SHAPE : BOX ===> DX=ISCG_W/2.0 DY=ISCG_THK/2.0 DZ = ISCG_H/2.  3320
C    0 <===                                                               3320
         CALL AGSRESET                                                    3320
         AG_DX = ISCG_W/2.0                                               3320
         AG_DY = ISCG_THK/2.0                                             3320
         AG_DZ = ISCG_H/2.0                                               3320
         AG_TITLE = 'BOX'                                                 3320
         AG_EXNAME = 'SHAPE'                                              3320
         AG_PARLIST = 'DX_DY_DZ'                                          3320
         CALL AXSHAPE                                                     3320
C    *                                                                    3320
5361  CALL AGSPOPB                                                        3322
      GO TO BLOCK_ISSC, (5360 ,5370)                                      3322
C End of Local Procedure                                                  3322
* -----------------------------------------------------------------------------
C Begin Local Procedure ISXA                                              3325
C ISXA IS THE LARGE GLUE LAYER BETWEEN CARBON FOAM AND SENSOR (AND SENSO  3325
C R AND HYBRID)                                                           3325
5270  CONTINUE                                                            3325
         AG_TITLE='ISXA'                                                  3325
         AG_MODULE=MODULE                                                 3325
         AG_MARK='V00'                                                    3325
         CALL AGSPUSH                                                     3325
         AG_MODULE=MODULE                                                 3325
C    *                                                                    3325
C    Geant ATTRIBUTE : ISXA ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      3326
         CALL AGSRESET                                                    3326
         AG_SEEN = 1                                                      3326
         AG_COLO = 11                                                     3326
         AG_SERIAL = ISTLAYER                                             3326
         AG_TITLE = 'ISXA'                                                3326
         AG_EXNAME = 'ATTRIBUTE'                                          3326
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3326
         CALL AXATTRIBUTE                                                 3326
C    *                                                                    3326
C    EPOXY C8-H14-O4                                                      3328
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              3329
         CALL AGSRESET                                                    3329
         AG_A = 12                                                        3329
         AG_Z = 6                                                         3329
         AG_W = 8.0*12.0/174.0                                            3329
         AG_TITLE = 'C'                                                   3329
         AG_EXNAME = 'COMPONENT'                                          3329
         AG_PARLIST = 'A_Z_W'                                             3329
         CALL AXCOMPONENT                                                 3329
C    *                                                                    3329
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               3329
         CALL AGSRESET                                                    3330
         AG_A = 1                                                         3330
         AG_Z = 1                                                         3330
         AG_W = 14.0*1.0/174.0                                            3330
         AG_TITLE = 'H'                                                   3330
         AG_EXNAME = 'COMPONENT'                                          3330
         AG_PARLIST = 'A_Z_W'                                             3330
         CALL AXCOMPONENT                                                 3330
C    *                                                                    3330
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              3330
         CALL AGSRESET                                                    3331
         AG_A = 16                                                        3331
         AG_Z = 8                                                         3331
         AG_W = 4.0*16.0/174.0                                            3331
         AG_TITLE = 'O'                                                   3331
         AG_EXNAME = 'COMPONENT'                                          3331
         AG_PARLIST = 'A_Z_W'                                             3331
         CALL AXCOMPONENT                                                 3331
C    *                                                                    3331
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             3331
         CALL AGSRESET                                                    3332
         AG_DENS = 1.3                                                    3332
         AG_TITLE = 'EPOXY'                                               3332
         AG_EXNAME = 'MIXTURE'                                            3332
         AG_PARLIST = 'DENS'                                              3332
         CALL AXMIXTURE                                                   3332
C    *                                                                    3332
C    Geant SHAPE : BOX ===> DX=ISGA_W/2.0 DY=ISGA_THK/2.0 DZ = ISGA_H/2.  3336
C    0 <===                                                               3336
         CALL AGSRESET                                                    3336
         AG_DX = ISGA_W/2.0                                               3336
         AG_DY = ISGA_THK/2.0                                             3336
         AG_DZ = ISGA_H/2.0                                               3336
         AG_TITLE = 'BOX'                                                 3336
         AG_EXNAME = 'SHAPE'                                              3336
         AG_PARLIST = 'DX_DY_DZ'                                          3336
         CALL AXSHAPE                                                     3336
C    *                                                                    3336
5271  CALL AGSPOPB                                                        3338
      GO TO BLOCK_ISXA, (5270 ,5280,5310)                                 3338
C End of Local Procedure                                                  3338
* -----------------------------------------------------------------------------
C Begin Local Procedure ISLB                                              3341
C ISLB IS THE SMALL GLUE LAYER BETWEEN HYBRID AND CHIP                    3341
5340  CONTINUE                                                            3341
         AG_TITLE='ISLB'                                                  3341
         AG_MODULE=MODULE                                                 3341
         AG_MARK='V00'                                                    3341
         CALL AGSPUSH                                                     3341
         AG_MODULE=MODULE                                                 3341
C    *                                                                    3341
C    Geant ATTRIBUTE : ISLB ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      3342
         CALL AGSRESET                                                    3342
         AG_SEEN = 1                                                      3342
         AG_COLO = 11                                                     3342
         AG_SERIAL = ISTLAYER                                             3342
         AG_TITLE = 'ISLB'                                                3342
         AG_EXNAME = 'ATTRIBUTE'                                          3342
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3342
         CALL AXATTRIBUTE                                                 3342
C    *                                                                    3342
C    EPOXY C8-H14-O4                                                      3344
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              3345
         CALL AGSRESET                                                    3345
         AG_A = 12                                                        3345
         AG_Z = 6                                                         3345
         AG_W = 8.0*12.0/174.0                                            3345
         AG_TITLE = 'C'                                                   3345
         AG_EXNAME = 'COMPONENT'                                          3345
         AG_PARLIST = 'A_Z_W'                                             3345
         CALL AXCOMPONENT                                                 3345
C    *                                                                    3345
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               3345
         CALL AGSRESET                                                    3346
         AG_A = 1                                                         3346
         AG_Z = 1                                                         3346
         AG_W = 14.0*1.0/174.0                                            3346
         AG_TITLE = 'H'                                                   3346
         AG_EXNAME = 'COMPONENT'                                          3346
         AG_PARLIST = 'A_Z_W'                                             3346
         CALL AXCOMPONENT                                                 3346
C    *                                                                    3346
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              3346
         CALL AGSRESET                                                    3347
         AG_A = 16                                                        3347
         AG_Z = 8                                                         3347
         AG_W = 4.0*16.0/174.0                                            3347
         AG_TITLE = 'O'                                                   3347
         AG_EXNAME = 'COMPONENT'                                          3347
         AG_PARLIST = 'A_Z_W'                                             3347
         CALL AXCOMPONENT                                                 3347
C    *                                                                    3347
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             3347
         CALL AGSRESET                                                    3348
         AG_DENS = 1.3                                                    3348
         AG_TITLE = 'EPOXY'                                               3348
         AG_EXNAME = 'MIXTURE'                                            3348
         AG_PARLIST = 'DENS'                                              3348
         CALL AXMIXTURE                                                   3348
C    *                                                                    3348
C    Geant SHAPE : BOX ===> DX=ISGB_W/2.0 DY=ISGB_THK/2.0 DZ = ISGB_H/2.  3352
C    0 <===                                                               3352
         CALL AGSRESET                                                    3352
         AG_DX = ISGB_W/2.0                                               3352
         AG_DY = ISGB_THK/2.0                                             3352
         AG_DZ = ISGB_H/2.0                                               3352
         AG_TITLE = 'BOX'                                                 3352
         AG_EXNAME = 'SHAPE'                                              3352
         AG_PARLIST = 'DX_DY_DZ'                                          3352
         CALL AXSHAPE                                                     3352
C    *                                                                    3352
5341  CALL AGSPOPB                                                        3354
      GO TO BLOCK_ISLB, (5340 ,5350)                                      3354
C End of Local Procedure                                                  3354
* -----------------------------------------------------------------------------
C Begin Local Procedure ISRI                                              3357
C ISRI IS THE SUPPORT RING FOR THE LAYERS                                 3357
5130  CONTINUE                                                            3357
         AG_TITLE='ISRI'                                                  3357
         AG_MODULE=MODULE                                                 3357
         AG_MARK='V00'                                                    3357
         CALL AGSPUSH                                                     3357
         AG_MODULE=MODULE                                                 3357
C    *                                                                    3357
C    Geant ATTRIBUTE : ISRA ===> SEEN=1 COLO=3 <===                       3358
         CALL AGSRESET                                                    3358
         AG_SEEN = 1                                                      3358
         AG_COLO = 3                                                      3358
         AG_TITLE = 'ISRA'                                                3358
         AG_EXNAME = 'ATTRIBUTE'                                          3358
         AG_PARLIST = 'SEEN_COLO'                                         3358
         CALL AXATTRIBUTE                                                 3358
C    *                                                                    3358
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        3360
         CALL AGSRESET                                                    3360
         AG_A = 12                                                        3360
         AG_Z = 6                                                         3360
         AG_W = 0.05                                                      3360
         AG_TITLE = 'C'                                                   3360
         AG_EXNAME = 'COMPONENT'                                          3360
         AG_PARLIST = 'A_Z_W'                                             3360
         CALL AXCOMPONENT                                                 3360
C    *                                                                    3360
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        3360
         CALL AGSRESET                                                    3361
         AG_A = 14                                                        3361
         AG_Z = 7                                                         3361
         AG_W = 0.95                                                      3361
         AG_TITLE = 'N'                                                   3361
         AG_EXNAME = 'COMPONENT'                                          3361
         AG_PARLIST = 'A_Z_W'                                             3361
         CALL AXCOMPONENT                                                 3361
C    *                                                                    3361
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            3361
         CALL AGSRESET                                                    3362
         AG_DENS = 0.10                                                   3362
         AG_TITLE = 'CFOAM'                                               3362
         AG_EXNAME = 'MIXTURE'                                            3362
         AG_PARLIST = 'DENS'                                              3362
         CALL AXMIXTURE                                                   3362
C    *                                                                    3362
C    Geant SHAPE : TUBE ===> RMIN=ISRR_RIN RMAX=ISRR_ROUT DZ = ISRR_LENG  3366
C    TH/2.0 <===                                                          3366
         CALL AGSRESET                                                    3366
         AG_RMIN = ISRR_RIN                                               3366
         AG_RMAX = ISRR_ROUT                                              3366
         AG_DZ = ISRR_LENGTH/2.0                                          3366
         AG_TITLE = 'TUBE'                                                3366
         AG_EXNAME = 'SHAPE'                                              3366
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      3366
         CALL AXSHAPE                                                     3366
C    *                                                                    3366
5131  CALL AGSPOPB                                                        3368
      GO TO BLOCK_ISRI, (5130 ,5140)                                      3368
C End of Local Procedure                                                  3368
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCO                                              3371
C ISCO IS THE INTERCONNECT BETWEEN THE SUPPORT RINGS                      3371
5150  CONTINUE                                                            3371
         AG_TITLE='ISCO'                                                  3371
         AG_MODULE=MODULE                                                 3371
         AG_MARK='V00'                                                    3371
         CALL AGSPUSH                                                     3371
         AG_MODULE=MODULE                                                 3371
C    *                                                                    3371
C    Geant ATTRIBUTE : ISCO ===> SEEN=1 COLO=3 <===                       3372
         CALL AGSRESET                                                    3372
         AG_SEEN = 1                                                      3372
         AG_COLO = 3                                                      3372
         AG_TITLE = 'ISCO'                                                3372
         AG_EXNAME = 'ATTRIBUTE'                                          3372
         AG_PARLIST = 'SEEN_COLO'                                         3372
         CALL AXATTRIBUTE                                                 3372
C    *                                                                    3372
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        3374
         CALL AGSRESET                                                    3374
         AG_A = 12                                                        3374
         AG_Z = 6                                                         3374
         AG_W = 0.05                                                      3374
         AG_TITLE = 'C'                                                   3374
         AG_EXNAME = 'COMPONENT'                                          3374
         AG_PARLIST = 'A_Z_W'                                             3374
         CALL AXCOMPONENT                                                 3374
C    *                                                                    3374
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        3374
         CALL AGSRESET                                                    3375
         AG_A = 14                                                        3375
         AG_Z = 7                                                         3375
         AG_W = 0.95                                                      3375
         AG_TITLE = 'N'                                                   3375
         AG_EXNAME = 'COMPONENT'                                          3375
         AG_PARLIST = 'A_Z_W'                                             3375
         CALL AXCOMPONENT                                                 3375
C    *                                                                    3375
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            3375
         CALL AGSRESET                                                    3376
         AG_DENS = 0.10                                                   3376
         AG_TITLE = 'CFOAM'                                               3376
         AG_EXNAME = 'MIXTURE'                                            3376
         AG_PARLIST = 'DENS'                                              3376
         CALL AXMIXTURE                                                   3376
C    *                                                                    3376
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  3382
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     3382
         CALL AGSRESET                                                    3382
         AG_RMN1 = ISCC_RIN1                                              3382
         AG_RMX1 = ISCC_ROUT1                                             3382
         AG_RMN2 = ISCC_RIN2                                              3382
         AG_RMX2 = ISCC_ROUT2                                             3382
         AG_DZ = ISCC_LENGTH/2.0                                          3382
         AG_TITLE = 'CONE'                                                3382
         AG_EXNAME = 'SHAPE'                                              3382
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            3382
         CALL AXSHAPE                                                     3382
C    *                                                                    3382
5151  CALL AGSPOPB                                                        3384
      GO TO BLOCK_ISCO, (5150 ,5160,5170)                                 3384
C End of Local Procedure                                                  3384
* -------------------------------------------------------
      END                                                                 3388
* $Id: istbgeo6.g,v 1.1 2007/03/09 21:39:17 potekhin Exp $
* $Log: istbgeo6.g,v $
* Revision 1.1  2007/03/09 21:39:17  potekhin
* Inner layer with sensors only on the inside
* (see comment below)
*
*
*
* ***************************************************************
* March 06, 2007: Gerrit van Nieuwenhuizen
* Geometry according to recommendations of March 02 HFT-IST
* workshop. This is the geometry which will be used for
* simulations for the CD0 proposal (due end of April 2007)
* The outer IST layer stays the same, i.e. 2 sensors
* back-to-back.
* The inner IST layer now has only sensors on the inside
* (facing the interaction point) of the ladder. The outside
* sensors are removed together with all their infrastructural
* material.
*
*
*
*
*****************************************************************
      SUBROUTINE ISTBGEO6                                                 3413
C ISTBGEO6 IS THE GEOMETRY OF THE INNER SILICON TRACKER                   3413
      IMPLICIT NONE                                                       3413
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       3413
      DATA MODULE/'ISTBGEO6'/, BANK_TITLE/'*'/                            3413
      DATA MCOMMENT/'IS THE GEOMETRY OF THE INNER SILICON TRACKER'/       3413
      LOGICAL FIRST                                                       3413
      DATA FIRST/.TRUE./                                                  3413
      SAVE FIRST                                                          3413
      INTEGER JUMPAD                                                      3413
      EXTERNAL JUMPAD                                                     3413
      INTEGER OK                                                          3413
      PARAMETER (OK=0)                                                    3413
      INTEGER AG_I,AG_J                                                   3413
      SAVE AG_I,AG_J                                                      3413
C CREATED 09 MAR 2007                                                     3413
      DATA AG_I/0/,AG_J/0/                                                3414
      CHARACTER*40 CREATED /'09 MAR 2007'/                                3414
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  3414
C AUTHOR GERRIT EDITED BY MAXIM                                           3414
      CHARACTER*40 AUTHOR /'GERRIT EDITED BY MAXIM'/                      3415
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  3415
*****************************************************************
C - Advanced Geant interface                                              3417
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      3417
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       3417
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         3417
     *AG_OPTION,AG_ORT,AG_MARK                                            3417
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         3417
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     3417
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     3417
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    3417
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          3417
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   3417
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     3417
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        3417
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   3417
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 3417
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     3417
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       3417
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        3417
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       3417
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       3417
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       3417
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         3417
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     3417
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       3417
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   3417
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       3417
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     3417
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          3417
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         3417
     *-696969,AG_LDETU=250)                                               3417
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    3417
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  3417
     *AG_IMFLD,AG_ISIMU                                                   3417
C Inherited variables a: saved during internal calls                      3417
C b: reset at the entry in a block and then saved                         3417
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        3417
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       3417
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         3417
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     3417
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       3417
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         3417
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           3417
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        3417
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        3417
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            3417
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           3417
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    3417
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      3417
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           3417
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          3417
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                3417
C local variables valid inside same block                                 3417
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       3417
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  3417
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         3417
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    3417
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          3417
     *AG_OPTION                                                           3417
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        3417
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             3417
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              3417
C temporarly                                                              3417
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           3417
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    3417
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       3417
     *AG_HY)                                                              3417
      REAL MIL_P,INCH_P                                                   3417
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               3417
C - GEANT description of logical units                                    3417
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            3417
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      3417
      COMMON/GCMAIL/ CHMAIL                                               3417
      CHARACTER*132 CHMAIL                                                3417
* ---
      REAL ANGLE, ANGLEPOS, ANGLECORR, TRUER, RADDEG, RLAD                3419
      INTEGER NL, LY, NU, CABLE, ISTLAYER                                 3420
      REAL MOD_THK                                                        3421
* ---
      INTEGER BLOCK_IBMO                                                  3425
      INTEGER BLOCK_IBLM                                                  3425
      INTEGER BLOCK_IBAM                                                  3425
      INTEGER BLOCK_IBSS                                                  3425
      INTEGER BLOCK_ISTP                                                  3425
      INTEGER BLOCK_ISKH                                                  3425
      INTEGER BLOCK_ISCL                                                  3425
      INTEGER BLOCK_ISSC                                                  3425
      INTEGER BLOCK_ISXA                                                  3425
      INTEGER BLOCK_ISLB                                                  3425
      INTEGER BLOCK_ISRI                                                  3425
      INTEGER BLOCK_ISCO                                                  3425
      INTEGER BLOCK_IBMY                                                  3425
      INTEGER BLOCK_IBMW                                                  3425
      INTEGER BLOCK_IBME                                                  3425
C -                                                                       3427
      REAL ISMG_LAYER                                                     3427
      EQUIVALENCE (BANK_ISMG(3),ISMG_LAYER,RE_ISMG_LAYER),                3427
     *(NAMES_ISMG(1),NISMG_LAYER)                                         3427
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_LAYER),(MAP_ISMG(1,1),            3427
     *MISMG_LAYER)                                                        3427
      CHARACTER CISMG_LAYER*40/' '/                                       3427
      CHARACTER NISMG_LAYER*12/'R.LAYER'/                                 3427
      INTEGER MISMG_LAYER(2)/1,1/                                         3427
      REAL RE_ISMG_LAYER                                                  3427
C -                                                                       3427
      REAL ISMG_RIN                                                       3427
      EQUIVALENCE (BANK_ISMG(4),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(2),     3427
     *NISMG_RIN)                                                          3427
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_RIN),(MAP_ISMG(1,2),MISMG_RIN)    3427
      CHARACTER CISMG_RIN*40/' '/                                         3427
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     3427
      INTEGER MISMG_RIN(2)/1,1/                                           3427
      REAL RE_ISMG_RIN                                                    3427
C -                                                                       3427
      REAL ISMG_ROUT                                                      3427
      EQUIVALENCE (BANK_ISMG(5),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(3),   3427
     *NISMG_ROUT)                                                         3427
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_ROUT),(MAP_ISMG(1,3),             3427
     *MISMG_ROUT)                                                         3427
      CHARACTER CISMG_ROUT*40/' '/                                        3427
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   3427
      INTEGER MISMG_ROUT(2)/1,1/                                          3427
      REAL RE_ISMG_ROUT                                                   3427
C -                                                                       3427
      REAL ISMG_TOTALLENGTH                                               3427
      EQUIVALENCE (BANK_ISMG(6),ISMG_TOTALLENGTH,RE_ISMG_TOTALLENGTH),    3427
     *(NAMES_ISMG(4),NISMG_TOTALLENGTH)                                   3427
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_TOTALLENGTH),(MAP_ISMG(1,4),      3427
     *MISMG_TOTALLENGTH)                                                  3427
      CHARACTER CISMG_TOTALLENGTH*40/' '/                                 3427
      CHARACTER NISMG_TOTALLENGTH*12/'R.TOTALLENGTH'/                     3427
      INTEGER MISMG_TOTALLENGTH(2)/1,1/                                   3427
      REAL RE_ISMG_TOTALLENGTH                                            3427
C -                                                                       3427
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                3427
      PARAMETER (LEN_ISMG=6)                                              3427
      PARAMETER (LLEN_ISMG=4)                                             3427
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           3427
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        3427
      DATA IDNUM_ISMG/10*0/                                               3427
      REAL BANK_ISMG(LEN_ISMG)                                            3427
      CHARACTER*60 BPATH_ISMG/' '/                                        3427
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          3427
     *BPATH_ISMG                                                          3427
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             3427
C *                                                                       3427
C -                                                                       3431
      REAL ISBG_LAYER                                                     3431
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                3431
     *(NAMES_ISBG(1),NISBG_LAYER)                                         3431
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            3431
     *MISBG_LAYER)                                                        3431
      CHARACTER CISBG_LAYER*40/' '/                                       3431
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 3431
      INTEGER MISBG_LAYER(2)/1,1/                                         3431
      REAL RE_ISBG_LAYER                                                  3431
C -                                                                       3431
      REAL ISBG_NLADDER                                                   3431
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            3431
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       3431
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          3431
     *MISBG_NLADDER)                                                      3431
      CHARACTER CISBG_NLADDER*40/' '/                                     3431
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             3431
      INTEGER MISBG_NLADDER(2)/1,1/                                       3431
      REAL RE_ISBG_NLADDER                                                3431
C -                                                                       3431
      REAL ISBG_NUNIT                                                     3431
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                3431
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         3431
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            3431
     *MISBG_NUNIT)                                                        3431
      CHARACTER CISBG_NUNIT*40/' '/                                       3431
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 3431
      INTEGER MISBG_NUNIT(2)/1,1/                                         3431
      REAL RE_ISBG_NUNIT                                                  3431
C -                                                                       3431
      REAL ISBG_LENGTH                                                    3431
      EQUIVALENCE (BANK_ISBG(6),ISBG_LENGTH,RE_ISBG_LENGTH),              3431
     *(NAMES_ISBG(4),NISBG_LENGTH)                                        3431
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_LENGTH),(MAP_ISBG(1,4),           3431
     *MISBG_LENGTH)                                                       3431
      CHARACTER CISBG_LENGTH*40/' '/                                      3431
      CHARACTER NISBG_LENGTH*12/'R.LENGTH'/                               3431
      INTEGER MISBG_LENGTH(2)/1,1/                                        3431
      REAL RE_ISBG_LENGTH                                                 3431
C -                                                                       3431
      REAL ISBG_LADDERWIDTH                                               3431
      EQUIVALENCE (BANK_ISBG(7),ISBG_LADDERWIDTH,RE_ISBG_LADDERWIDTH),    3431
     *(NAMES_ISBG(5),NISBG_LADDERWIDTH)                                   3431
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_LADDERWIDTH),(MAP_ISBG(1,5),      3431
     *MISBG_LADDERWIDTH)                                                  3431
      CHARACTER CISBG_LADDERWIDTH*40/' '/                                 3431
      CHARACTER NISBG_LADDERWIDTH*12/'R.LADDERWIDTH'/                     3431
      INTEGER MISBG_LADDERWIDTH(2)/1,1/                                   3431
      REAL RE_ISBG_LADDERWIDTH                                            3431
C -                                                                       3431
      REAL ISBG_LADDERTHK                                                 3431
      EQUIVALENCE (BANK_ISBG(8),ISBG_LADDERTHK,RE_ISBG_LADDERTHK),        3431
     *(NAMES_ISBG(6),NISBG_LADDERTHK)                                     3431
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_LADDERTHK),(MAP_ISBG(1,6),        3431
     *MISBG_LADDERTHK)                                                    3431
      CHARACTER CISBG_LADDERTHK*40/' '/                                   3431
      CHARACTER NISBG_LADDERTHK*12/'R.LADDERTHK'/                         3431
      INTEGER MISBG_LADDERTHK(2)/1,1/                                     3431
      REAL RE_ISBG_LADDERTHK                                              3431
C -                                                                       3431
      REAL ISBG_SENSATHK                                                  3431
      EQUIVALENCE (BANK_ISBG(9),ISBG_SENSATHK,RE_ISBG_SENSATHK),          3431
     *(NAMES_ISBG(7),NISBG_SENSATHK)                                      3431
      EQUIVALENCE (COMMEN_ISBG(7),CISBG_SENSATHK),(MAP_ISBG(1,7),         3431
     *MISBG_SENSATHK)                                                     3431
      CHARACTER CISBG_SENSATHK*40/' '/                                    3431
      CHARACTER NISBG_SENSATHK*12/'R.SENSATHK'/                           3431
      INTEGER MISBG_SENSATHK(2)/1,1/                                      3431
      REAL RE_ISBG_SENSATHK                                               3431
C -                                                                       3431
      REAL ISBG_SPACING                                                   3431
      EQUIVALENCE (BANK_ISBG(10),ISBG_SPACING,RE_ISBG_SPACING),           3431
     *(NAMES_ISBG(8),NISBG_SPACING)                                       3431
      EQUIVALENCE (COMMEN_ISBG(8),CISBG_SPACING),(MAP_ISBG(1,8),          3431
     *MISBG_SPACING)                                                      3431
      CHARACTER CISBG_SPACING*40/' '/                                     3431
      CHARACTER NISBG_SPACING*12/'R.SPACING'/                             3431
      INTEGER MISBG_SPACING(2)/1,1/                                       3431
      REAL RE_ISBG_SPACING                                                3431
C -                                                                       3431
      REAL ISBG_SENSORWIDTH                                               3431
      EQUIVALENCE (BANK_ISBG(11),ISBG_SENSORWIDTH,RE_ISBG_SENSORWIDTH),   3431
     *(NAMES_ISBG(9),NISBG_SENSORWIDTH)                                   3431
      EQUIVALENCE (COMMEN_ISBG(9),CISBG_SENSORWIDTH),(MAP_ISBG(1,9),      3431
     *MISBG_SENSORWIDTH)                                                  3431
      CHARACTER CISBG_SENSORWIDTH*40/' '/                                 3431
      CHARACTER NISBG_SENSORWIDTH*12/'R.SENSORWIDTH'/                     3431
      INTEGER MISBG_SENSORWIDTH(2)/1,1/                                   3431
      REAL RE_ISBG_SENSORWIDTH                                            3431
C -                                                                       3431
      REAL ISBG_SENSORTHK                                                 3431
      EQUIVALENCE (BANK_ISBG(12),ISBG_SENSORTHK,RE_ISBG_SENSORTHK),       3431
     *(NAMES_ISBG(10),NISBG_SENSORTHK)                                    3431
      EQUIVALENCE (COMMEN_ISBG(10),CISBG_SENSORTHK),(MAP_ISBG(1,10),      3431
     *MISBG_SENSORTHK)                                                    3431
      CHARACTER CISBG_SENSORTHK*40/' '/                                   3431
      CHARACTER NISBG_SENSORTHK*12/'R.SENSORTHK'/                         3431
      INTEGER MISBG_SENSORTHK(2)/1,1/                                     3431
      REAL RE_ISBG_SENSORTHK                                              3431
C -                                                                       3431
      REAL ISBG_SENSORLNGTH                                               3431
      EQUIVALENCE (BANK_ISBG(13),ISBG_SENSORLNGTH,RE_ISBG_SENSORLNGTH),   3431
     *(NAMES_ISBG(11),NISBG_SENSORLNGTH)                                  3431
      EQUIVALENCE (COMMEN_ISBG(11),CISBG_SENSORLNGTH),(MAP_ISBG(1,11),    3431
     *MISBG_SENSORLNGTH)                                                  3431
      CHARACTER CISBG_SENSORLNGTH*40/' '/                                 3431
      CHARACTER NISBG_SENSORLNGTH*12/'R.SENSORLNGTH'/                     3431
      INTEGER MISBG_SENSORLNGTH(2)/1,1/                                   3431
      REAL RE_ISBG_SENSORLNGTH                                            3431
C -                                                                       3431
      REAL ISBG_R                                                         3431
      EQUIVALENCE (BANK_ISBG(14),ISBG_R,RE_ISBG_R),(NAMES_ISBG(12),       3431
     *NISBG_R)                                                            3431
      EQUIVALENCE (COMMEN_ISBG(12),CISBG_R),(MAP_ISBG(1,12),MISBG_R)      3431
      CHARACTER CISBG_R*40/' '/                                           3431
      CHARACTER NISBG_R*12/'R.R'/                                         3431
      INTEGER MISBG_R(2)/1,1/                                             3431
      REAL RE_ISBG_R                                                      3431
C -                                                                       3431
      REAL ISBG_A                                                         3431
      EQUIVALENCE (BANK_ISBG(15),ISBG_A,RE_ISBG_A),(NAMES_ISBG(13),       3431
     *NISBG_A)                                                            3431
      EQUIVALENCE (COMMEN_ISBG(13),CISBG_A),(MAP_ISBG(1,13),MISBG_A)      3431
      CHARACTER CISBG_A*40/' '/                                           3431
      CHARACTER NISBG_A*12/'R.A'/                                         3431
      INTEGER MISBG_A(2)/1,1/                                             3431
      REAL RE_ISBG_A                                                      3431
C -                                                                       3431
      REAL ISBG_PPAROFFSET                                                3431
      EQUIVALENCE (BANK_ISBG(16),ISBG_PPAROFFSET,RE_ISBG_PPAROFFSET),     3431
     *(NAMES_ISBG(14),NISBG_PPAROFFSET)                                   3431
      EQUIVALENCE (COMMEN_ISBG(14),CISBG_PPAROFFSET),(MAP_ISBG(1,14),     3431
     *MISBG_PPAROFFSET)                                                   3431
      CHARACTER CISBG_PPAROFFSET*40/' '/                                  3431
      CHARACTER NISBG_PPAROFFSET*12/'R.PPAROFFSET'/                       3431
      INTEGER MISBG_PPAROFFSET(2)/1,1/                                    3431
      REAL RE_ISBG_PPAROFFSET                                             3431
C -                                                                       3431
      REAL ISBG_PPEROFFSET                                                3431
      EQUIVALENCE (BANK_ISBG(17),ISBG_PPEROFFSET,RE_ISBG_PPEROFFSET),     3431
     *(NAMES_ISBG(15),NISBG_PPEROFFSET)                                   3431
      EQUIVALENCE (COMMEN_ISBG(15),CISBG_PPEROFFSET),(MAP_ISBG(1,15),     3431
     *MISBG_PPEROFFSET)                                                   3431
      CHARACTER CISBG_PPEROFFSET*40/' '/                                  3431
      CHARACTER NISBG_PPEROFFSET*12/'R.PPEROFFSET'/                       3431
      INTEGER MISBG_PPEROFFSET(2)/1,1/                                    3431
      REAL RE_ISBG_PPEROFFSET                                             3431
C -                                                                       3431
      REAL ISBG_AOFFSET                                                   3431
      EQUIVALENCE (BANK_ISBG(18),ISBG_AOFFSET,RE_ISBG_AOFFSET),           3431
     *(NAMES_ISBG(16),NISBG_AOFFSET)                                      3431
      EQUIVALENCE (COMMEN_ISBG(16),CISBG_AOFFSET),(MAP_ISBG(1,16),        3431
     *MISBG_AOFFSET)                                                      3431
      CHARACTER CISBG_AOFFSET*40/' '/                                     3431
      CHARACTER NISBG_AOFFSET*12/'R.AOFFSET'/                             3431
      INTEGER MISBG_AOFFSET(2)/1,1/                                       3431
      REAL RE_ISBG_AOFFSET                                                3431
C -                                                                       3431
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                3431
      PARAMETER (LEN_ISBG=18)                                             3431
      PARAMETER (LLEN_ISBG=16)                                            3431
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           3431
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        3431
      DATA IDNUM_ISBG/10*0/                                               3431
      REAL BANK_ISBG(LEN_ISBG)                                            3431
      CHARACTER*60 BPATH_ISBG/' '/                                        3431
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          3431
     *BPATH_ISBG                                                          3431
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             3431
C *                                                                       3431
C -                                                                       3432
      REAL ISAN_VERSION                                                   3432
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            3432
     *(NAMES_ISAN(1),NISAN_VERSION)                                       3432
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          3432
     *MISAN_VERSION)                                                      3432
      CHARACTER CISAN_VERSION*40/' '/                                     3432
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             3432
      INTEGER MISAN_VERSION(2)/1,1/                                       3432
      REAL RE_ISAN_VERSION                                                3432
C -                                                                       3432
      REAL ISAN_W                                                         3432
      EQUIVALENCE (BANK_ISAN(4),ISAN_W,RE_ISAN_W),(NAMES_ISAN(2),         3432
     *NISAN_W)                                                            3432
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_W),(MAP_ISAN(1,2),MISAN_W)        3432
      CHARACTER CISAN_W*40/' '/                                           3432
      CHARACTER NISAN_W*12/'R.W'/                                         3432
      INTEGER MISAN_W(2)/1,1/                                             3432
      REAL RE_ISAN_W                                                      3432
C -                                                                       3432
      REAL ISAN_H                                                         3432
      EQUIVALENCE (BANK_ISAN(5),ISAN_H,RE_ISAN_H),(NAMES_ISAN(3),         3432
     *NISAN_H)                                                            3432
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_H),(MAP_ISAN(1,3),MISAN_H)        3432
      CHARACTER CISAN_H*40/' '/                                           3432
      CHARACTER NISAN_H*12/'R.H'/                                         3432
      INTEGER MISAN_H(2)/1,1/                                             3432
      REAL RE_ISAN_H                                                      3432
C -                                                                       3432
      REAL ISAN_THK                                                       3432
      EQUIVALENCE (BANK_ISAN(6),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(4),     3432
     *NISAN_THK)                                                          3432
      EQUIVALENCE (COMMEN_ISAN(4),CISAN_THK),(MAP_ISAN(1,4),MISAN_THK)    3432
      CHARACTER CISAN_THK*40/' '/                                         3432
      CHARACTER NISAN_THK*12/'R.THK'/                                     3432
      INTEGER MISAN_THK(2)/1,1/                                           3432
      REAL RE_ISAN_THK                                                    3432
C -                                                                       3432
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                3432
      PARAMETER (LEN_ISAN=6)                                              3432
      PARAMETER (LLEN_ISAN=4)                                             3432
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           3432
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        3432
      DATA IDNUM_ISAN/10*0/                                               3432
      REAL BANK_ISAN(LEN_ISAN)                                            3432
      CHARACTER*60 BPATH_ISAN/' '/                                        3432
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          3432
     *BPATH_ISAN                                                          3432
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             3432
C *                                                                       3432
C -                                                                       3433
      REAL ISHY_VERSION                                                   3433
      EQUIVALENCE (BANK_ISHY(3),ISHY_VERSION,RE_ISHY_VERSION),            3433
     *(NAMES_ISHY(1),NISHY_VERSION)                                       3433
      EQUIVALENCE (COMMEN_ISHY(1),CISHY_VERSION),(MAP_ISHY(1,1),          3433
     *MISHY_VERSION)                                                      3433
      CHARACTER CISHY_VERSION*40/' '/                                     3433
      CHARACTER NISHY_VERSION*12/'R.VERSION'/                             3433
      INTEGER MISHY_VERSION(2)/1,1/                                       3433
      REAL RE_ISHY_VERSION                                                3433
C -                                                                       3433
      REAL ISHY_W                                                         3433
      EQUIVALENCE (BANK_ISHY(4),ISHY_W,RE_ISHY_W),(NAMES_ISHY(2),         3433
     *NISHY_W)                                                            3433
      EQUIVALENCE (COMMEN_ISHY(2),CISHY_W),(MAP_ISHY(1,2),MISHY_W)        3433
      CHARACTER CISHY_W*40/' '/                                           3433
      CHARACTER NISHY_W*12/'R.W'/                                         3433
      INTEGER MISHY_W(2)/1,1/                                             3433
      REAL RE_ISHY_W                                                      3433
C -                                                                       3433
      REAL ISHY_H                                                         3433
      EQUIVALENCE (BANK_ISHY(5),ISHY_H,RE_ISHY_H),(NAMES_ISHY(3),         3433
     *NISHY_H)                                                            3433
      EQUIVALENCE (COMMEN_ISHY(3),CISHY_H),(MAP_ISHY(1,3),MISHY_H)        3433
      CHARACTER CISHY_H*40/' '/                                           3433
      CHARACTER NISHY_H*12/'R.H'/                                         3433
      INTEGER MISHY_H(2)/1,1/                                             3433
      REAL RE_ISHY_H                                                      3433
C -                                                                       3433
      REAL ISHY_THK                                                       3433
      EQUIVALENCE (BANK_ISHY(6),ISHY_THK,RE_ISHY_THK),(NAMES_ISHY(4),     3433
     *NISHY_THK)                                                          3433
      EQUIVALENCE (COMMEN_ISHY(4),CISHY_THK),(MAP_ISHY(1,4),MISHY_THK)    3433
      CHARACTER CISHY_THK*40/' '/                                         3433
      CHARACTER NISHY_THK*12/'R.THK'/                                     3433
      INTEGER MISHY_THK(2)/1,1/                                           3433
      REAL RE_ISHY_THK                                                    3433
C -                                                                       3433
      INTEGER LEN_ISHY,LLEN_ISHY,LINK_ISHY                                3433
      PARAMETER (LEN_ISHY=6)                                              3433
      PARAMETER (LLEN_ISHY=4)                                             3433
      INTEGER FLAG_ISHY/0/,MAP_ISHY(2,LLEN_ISHY),IDNUM_ISHY(10)           3433
      CHARACTER NAMES_ISHY(LLEN_ISHY)*12,COMMEN_ISHY(LLEN_ISHY)*40        3433
      DATA IDNUM_ISHY/10*0/                                               3433
      REAL BANK_ISHY(LEN_ISHY)                                            3433
      CHARACTER*60 BPATH_ISHY/' '/                                        3433
      SAVE FLAG_ISHY,MAP_ISHY,IDNUM_ISHY,NAMES_ISHY,COMMEN_ISHY,          3433
     *BPATH_ISHY                                                          3433
      DATA LINK_ISHY/0/,BANK_ISHY/LEN_ISHY*0/                             3433
C *                                                                       3433
C -                                                                       3434
      REAL ISCU_VERSION                                                   3434
      EQUIVALENCE (BANK_ISCU(3),ISCU_VERSION,RE_ISCU_VERSION),            3434
     *(NAMES_ISCU(1),NISCU_VERSION)                                       3434
      EQUIVALENCE (COMMEN_ISCU(1),CISCU_VERSION),(MAP_ISCU(1,1),          3434
     *MISCU_VERSION)                                                      3434
      CHARACTER CISCU_VERSION*40/' '/                                     3434
      CHARACTER NISCU_VERSION*12/'R.VERSION'/                             3434
      INTEGER MISCU_VERSION(2)/1,1/                                       3434
      REAL RE_ISCU_VERSION                                                3434
C -                                                                       3434
      REAL ISCU_W                                                         3434
      EQUIVALENCE (BANK_ISCU(4),ISCU_W,RE_ISCU_W),(NAMES_ISCU(2),         3434
     *NISCU_W)                                                            3434
      EQUIVALENCE (COMMEN_ISCU(2),CISCU_W),(MAP_ISCU(1,2),MISCU_W)        3434
      CHARACTER CISCU_W*40/' '/                                           3434
      CHARACTER NISCU_W*12/'R.W'/                                         3434
      INTEGER MISCU_W(2)/1,1/                                             3434
      REAL RE_ISCU_W                                                      3434
C -                                                                       3434
      REAL ISCU_H                                                         3434
      EQUIVALENCE (BANK_ISCU(5),ISCU_H,RE_ISCU_H),(NAMES_ISCU(3),         3434
     *NISCU_H)                                                            3434
      EQUIVALENCE (COMMEN_ISCU(3),CISCU_H),(MAP_ISCU(1,3),MISCU_H)        3434
      CHARACTER CISCU_H*40/' '/                                           3434
      CHARACTER NISCU_H*12/'R.H'/                                         3434
      INTEGER MISCU_H(2)/1,1/                                             3434
      REAL RE_ISCU_H                                                      3434
C -                                                                       3434
      REAL ISCU_THK                                                       3434
      EQUIVALENCE (BANK_ISCU(6),ISCU_THK,RE_ISCU_THK),(NAMES_ISCU(4),     3434
     *NISCU_THK)                                                          3434
      EQUIVALENCE (COMMEN_ISCU(4),CISCU_THK),(MAP_ISCU(1,4),MISCU_THK)    3434
      CHARACTER CISCU_THK*40/' '/                                         3434
      CHARACTER NISCU_THK*12/'R.THK'/                                     3434
      INTEGER MISCU_THK(2)/1,1/                                           3434
      REAL RE_ISCU_THK                                                    3434
C -                                                                       3434
      INTEGER LEN_ISCU,LLEN_ISCU,LINK_ISCU                                3434
      PARAMETER (LEN_ISCU=6)                                              3434
      PARAMETER (LLEN_ISCU=4)                                             3434
      INTEGER FLAG_ISCU/0/,MAP_ISCU(2,LLEN_ISCU),IDNUM_ISCU(10)           3434
      CHARACTER NAMES_ISCU(LLEN_ISCU)*12,COMMEN_ISCU(LLEN_ISCU)*40        3434
      DATA IDNUM_ISCU/10*0/                                               3434
      REAL BANK_ISCU(LEN_ISCU)                                            3434
      CHARACTER*60 BPATH_ISCU/' '/                                        3434
      SAVE FLAG_ISCU,MAP_ISCU,IDNUM_ISCU,NAMES_ISCU,COMMEN_ISCU,          3434
     *BPATH_ISCU                                                          3434
      DATA LINK_ISCU/0/,BANK_ISCU/LEN_ISCU*0/                             3434
C *                                                                       3434
C -                                                                       3435
      REAL ISCG_VERSION                                                   3435
      EQUIVALENCE (BANK_ISCG(3),ISCG_VERSION,RE_ISCG_VERSION),            3435
     *(NAMES_ISCG(1),NISCG_VERSION)                                       3435
      EQUIVALENCE (COMMEN_ISCG(1),CISCG_VERSION),(MAP_ISCG(1,1),          3435
     *MISCG_VERSION)                                                      3435
      CHARACTER CISCG_VERSION*40/' '/                                     3435
      CHARACTER NISCG_VERSION*12/'R.VERSION'/                             3435
      INTEGER MISCG_VERSION(2)/1,1/                                       3435
      REAL RE_ISCG_VERSION                                                3435
C -                                                                       3435
      REAL ISCG_W                                                         3435
      EQUIVALENCE (BANK_ISCG(4),ISCG_W,RE_ISCG_W),(NAMES_ISCG(2),         3435
     *NISCG_W)                                                            3435
      EQUIVALENCE (COMMEN_ISCG(2),CISCG_W),(MAP_ISCG(1,2),MISCG_W)        3435
      CHARACTER CISCG_W*40/' '/                                           3435
      CHARACTER NISCG_W*12/'R.W'/                                         3435
      INTEGER MISCG_W(2)/1,1/                                             3435
      REAL RE_ISCG_W                                                      3435
C -                                                                       3435
      REAL ISCG_H                                                         3435
      EQUIVALENCE (BANK_ISCG(5),ISCG_H,RE_ISCG_H),(NAMES_ISCG(3),         3435
     *NISCG_H)                                                            3435
      EQUIVALENCE (COMMEN_ISCG(3),CISCG_H),(MAP_ISCG(1,3),MISCG_H)        3435
      CHARACTER CISCG_H*40/' '/                                           3435
      CHARACTER NISCG_H*12/'R.H'/                                         3435
      INTEGER MISCG_H(2)/1,1/                                             3435
      REAL RE_ISCG_H                                                      3435
C -                                                                       3435
      REAL ISCG_THK                                                       3435
      EQUIVALENCE (BANK_ISCG(6),ISCG_THK,RE_ISCG_THK),(NAMES_ISCG(4),     3435
     *NISCG_THK)                                                          3435
      EQUIVALENCE (COMMEN_ISCG(4),CISCG_THK),(MAP_ISCG(1,4),MISCG_THK)    3435
      CHARACTER CISCG_THK*40/' '/                                         3435
      CHARACTER NISCG_THK*12/'R.THK'/                                     3435
      INTEGER MISCG_THK(2)/1,1/                                           3435
      REAL RE_ISCG_THK                                                    3435
C -                                                                       3435
      INTEGER LEN_ISCG,LLEN_ISCG,LINK_ISCG                                3435
      PARAMETER (LEN_ISCG=6)                                              3435
      PARAMETER (LLEN_ISCG=4)                                             3435
      INTEGER FLAG_ISCG/0/,MAP_ISCG(2,LLEN_ISCG),IDNUM_ISCG(10)           3435
      CHARACTER NAMES_ISCG(LLEN_ISCG)*12,COMMEN_ISCG(LLEN_ISCG)*40        3435
      DATA IDNUM_ISCG/10*0/                                               3435
      REAL BANK_ISCG(LEN_ISCG)                                            3435
      CHARACTER*60 BPATH_ISCG/' '/                                        3435
      SAVE FLAG_ISCG,MAP_ISCG,IDNUM_ISCG,NAMES_ISCG,COMMEN_ISCG,          3435
     *BPATH_ISCG                                                          3435
      DATA LINK_ISCG/0/,BANK_ISCG/LEN_ISCG*0/                             3435
C *                                                                       3435
C -                                                                       3436
      REAL ISGA_VERSION                                                   3436
      EQUIVALENCE (BANK_ISGA(3),ISGA_VERSION,RE_ISGA_VERSION),            3436
     *(NAMES_ISGA(1),NISGA_VERSION)                                       3436
      EQUIVALENCE (COMMEN_ISGA(1),CISGA_VERSION),(MAP_ISGA(1,1),          3436
     *MISGA_VERSION)                                                      3436
      CHARACTER CISGA_VERSION*40/' '/                                     3436
      CHARACTER NISGA_VERSION*12/'R.VERSION'/                             3436
      INTEGER MISGA_VERSION(2)/1,1/                                       3436
      REAL RE_ISGA_VERSION                                                3436
C -                                                                       3436
      REAL ISGA_W                                                         3436
      EQUIVALENCE (BANK_ISGA(4),ISGA_W,RE_ISGA_W),(NAMES_ISGA(2),         3436
     *NISGA_W)                                                            3436
      EQUIVALENCE (COMMEN_ISGA(2),CISGA_W),(MAP_ISGA(1,2),MISGA_W)        3436
      CHARACTER CISGA_W*40/' '/                                           3436
      CHARACTER NISGA_W*12/'R.W'/                                         3436
      INTEGER MISGA_W(2)/1,1/                                             3436
      REAL RE_ISGA_W                                                      3436
C -                                                                       3436
      REAL ISGA_H                                                         3436
      EQUIVALENCE (BANK_ISGA(5),ISGA_H,RE_ISGA_H),(NAMES_ISGA(3),         3436
     *NISGA_H)                                                            3436
      EQUIVALENCE (COMMEN_ISGA(3),CISGA_H),(MAP_ISGA(1,3),MISGA_H)        3436
      CHARACTER CISGA_H*40/' '/                                           3436
      CHARACTER NISGA_H*12/'R.H'/                                         3436
      INTEGER MISGA_H(2)/1,1/                                             3436
      REAL RE_ISGA_H                                                      3436
C -                                                                       3436
      REAL ISGA_THK                                                       3436
      EQUIVALENCE (BANK_ISGA(6),ISGA_THK,RE_ISGA_THK),(NAMES_ISGA(4),     3436
     *NISGA_THK)                                                          3436
      EQUIVALENCE (COMMEN_ISGA(4),CISGA_THK),(MAP_ISGA(1,4),MISGA_THK)    3436
      CHARACTER CISGA_THK*40/' '/                                         3436
      CHARACTER NISGA_THK*12/'R.THK'/                                     3436
      INTEGER MISGA_THK(2)/1,1/                                           3436
      REAL RE_ISGA_THK                                                    3436
C -                                                                       3436
      INTEGER LEN_ISGA,LLEN_ISGA,LINK_ISGA                                3436
      PARAMETER (LEN_ISGA=6)                                              3436
      PARAMETER (LLEN_ISGA=4)                                             3436
      INTEGER FLAG_ISGA/0/,MAP_ISGA(2,LLEN_ISGA),IDNUM_ISGA(10)           3436
      CHARACTER NAMES_ISGA(LLEN_ISGA)*12,COMMEN_ISGA(LLEN_ISGA)*40        3436
      DATA IDNUM_ISGA/10*0/                                               3436
      REAL BANK_ISGA(LEN_ISGA)                                            3436
      CHARACTER*60 BPATH_ISGA/' '/                                        3436
      SAVE FLAG_ISGA,MAP_ISGA,IDNUM_ISGA,NAMES_ISGA,COMMEN_ISGA,          3436
     *BPATH_ISGA                                                          3436
      DATA LINK_ISGA/0/,BANK_ISGA/LEN_ISGA*0/                             3436
C *                                                                       3436
C -                                                                       3437
      REAL ISGB_VERSION                                                   3437
      EQUIVALENCE (BANK_ISGB(3),ISGB_VERSION,RE_ISGB_VERSION),            3437
     *(NAMES_ISGB(1),NISGB_VERSION)                                       3437
      EQUIVALENCE (COMMEN_ISGB(1),CISGB_VERSION),(MAP_ISGB(1,1),          3437
     *MISGB_VERSION)                                                      3437
      CHARACTER CISGB_VERSION*40/' '/                                     3437
      CHARACTER NISGB_VERSION*12/'R.VERSION'/                             3437
      INTEGER MISGB_VERSION(2)/1,1/                                       3437
      REAL RE_ISGB_VERSION                                                3437
C -                                                                       3437
      REAL ISGB_W                                                         3437
      EQUIVALENCE (BANK_ISGB(4),ISGB_W,RE_ISGB_W),(NAMES_ISGB(2),         3437
     *NISGB_W)                                                            3437
      EQUIVALENCE (COMMEN_ISGB(2),CISGB_W),(MAP_ISGB(1,2),MISGB_W)        3437
      CHARACTER CISGB_W*40/' '/                                           3437
      CHARACTER NISGB_W*12/'R.W'/                                         3437
      INTEGER MISGB_W(2)/1,1/                                             3437
      REAL RE_ISGB_W                                                      3437
C -                                                                       3437
      REAL ISGB_H                                                         3437
      EQUIVALENCE (BANK_ISGB(5),ISGB_H,RE_ISGB_H),(NAMES_ISGB(3),         3437
     *NISGB_H)                                                            3437
      EQUIVALENCE (COMMEN_ISGB(3),CISGB_H),(MAP_ISGB(1,3),MISGB_H)        3437
      CHARACTER CISGB_H*40/' '/                                           3437
      CHARACTER NISGB_H*12/'R.H'/                                         3437
      INTEGER MISGB_H(2)/1,1/                                             3437
      REAL RE_ISGB_H                                                      3437
C -                                                                       3437
      REAL ISGB_THK                                                       3437
      EQUIVALENCE (BANK_ISGB(6),ISGB_THK,RE_ISGB_THK),(NAMES_ISGB(4),     3437
     *NISGB_THK)                                                          3437
      EQUIVALENCE (COMMEN_ISGB(4),CISGB_THK),(MAP_ISGB(1,4),MISGB_THK)    3437
      CHARACTER CISGB_THK*40/' '/                                         3437
      CHARACTER NISGB_THK*12/'R.THK'/                                     3437
      INTEGER MISGB_THK(2)/1,1/                                           3437
      REAL RE_ISGB_THK                                                    3437
C -                                                                       3437
      INTEGER LEN_ISGB,LLEN_ISGB,LINK_ISGB                                3437
      PARAMETER (LEN_ISGB=6)                                              3437
      PARAMETER (LLEN_ISGB=4)                                             3437
      INTEGER FLAG_ISGB/0/,MAP_ISGB(2,LLEN_ISGB),IDNUM_ISGB(10)           3437
      CHARACTER NAMES_ISGB(LLEN_ISGB)*12,COMMEN_ISGB(LLEN_ISGB)*40        3437
      DATA IDNUM_ISGB/10*0/                                               3437
      REAL BANK_ISGB(LEN_ISGB)                                            3437
      CHARACTER*60 BPATH_ISGB/' '/                                        3437
      SAVE FLAG_ISGB,MAP_ISGB,IDNUM_ISGB,NAMES_ISGB,COMMEN_ISGB,          3437
     *BPATH_ISGB                                                          3437
      DATA LINK_ISGB/0/,BANK_ISGB/LEN_ISGB*0/                             3437
C *                                                                       3437
C -                                                                       3438
      REAL ISRR_LAYER                                                     3438
      EQUIVALENCE (BANK_ISRR(3),ISRR_LAYER,RE_ISRR_LAYER),                3438
     *(NAMES_ISRR(1),NISRR_LAYER)                                         3438
      EQUIVALENCE (COMMEN_ISRR(1),CISRR_LAYER),(MAP_ISRR(1,1),            3438
     *MISRR_LAYER)                                                        3438
      CHARACTER CISRR_LAYER*40/' '/                                       3438
      CHARACTER NISRR_LAYER*12/'R.LAYER'/                                 3438
      INTEGER MISRR_LAYER(2)/1,1/                                         3438
      REAL RE_ISRR_LAYER                                                  3438
C -                                                                       3438
      REAL ISRR_RIN                                                       3438
      EQUIVALENCE (BANK_ISRR(4),ISRR_RIN,RE_ISRR_RIN),(NAMES_ISRR(2),     3438
     *NISRR_RIN)                                                          3438
      EQUIVALENCE (COMMEN_ISRR(2),CISRR_RIN),(MAP_ISRR(1,2),MISRR_RIN)    3438
      CHARACTER CISRR_RIN*40/' '/                                         3438
      CHARACTER NISRR_RIN*12/'R.RIN'/                                     3438
      INTEGER MISRR_RIN(2)/1,1/                                           3438
      REAL RE_ISRR_RIN                                                    3438
C -                                                                       3438
      REAL ISRR_ROUT                                                      3438
      EQUIVALENCE (BANK_ISRR(5),ISRR_ROUT,RE_ISRR_ROUT),(NAMES_ISRR(3),   3438
     *NISRR_ROUT)                                                         3438
      EQUIVALENCE (COMMEN_ISRR(3),CISRR_ROUT),(MAP_ISRR(1,3),             3438
     *MISRR_ROUT)                                                         3438
      CHARACTER CISRR_ROUT*40/' '/                                        3438
      CHARACTER NISRR_ROUT*12/'R.ROUT'/                                   3438
      INTEGER MISRR_ROUT(2)/1,1/                                          3438
      REAL RE_ISRR_ROUT                                                   3438
C -                                                                       3438
      REAL ISRR_LENGTH                                                    3438
      EQUIVALENCE (BANK_ISRR(6),ISRR_LENGTH,RE_ISRR_LENGTH),              3438
     *(NAMES_ISRR(4),NISRR_LENGTH)                                        3438
      EQUIVALENCE (COMMEN_ISRR(4),CISRR_LENGTH),(MAP_ISRR(1,4),           3438
     *MISRR_LENGTH)                                                       3438
      CHARACTER CISRR_LENGTH*40/' '/                                      3438
      CHARACTER NISRR_LENGTH*12/'R.LENGTH'/                               3438
      INTEGER MISRR_LENGTH(2)/1,1/                                        3438
      REAL RE_ISRR_LENGTH                                                 3438
C -                                                                       3438
      INTEGER LEN_ISRR,LLEN_ISRR,LINK_ISRR                                3438
      PARAMETER (LEN_ISRR=6)                                              3438
      PARAMETER (LLEN_ISRR=4)                                             3438
      INTEGER FLAG_ISRR/0/,MAP_ISRR(2,LLEN_ISRR),IDNUM_ISRR(10)           3438
      CHARACTER NAMES_ISRR(LLEN_ISRR)*12,COMMEN_ISRR(LLEN_ISRR)*40        3438
      DATA IDNUM_ISRR/10*0/                                               3438
      REAL BANK_ISRR(LEN_ISRR)                                            3438
      CHARACTER*60 BPATH_ISRR/' '/                                        3438
      SAVE FLAG_ISRR,MAP_ISRR,IDNUM_ISRR,NAMES_ISRR,COMMEN_ISRR,          3438
     *BPATH_ISRR                                                          3438
      DATA LINK_ISRR/0/,BANK_ISRR/LEN_ISRR*0/                             3438
C *                                                                       3438
C -                                                                       3439
      REAL ISCC_VERSION                                                   3439
      EQUIVALENCE (BANK_ISCC(3),ISCC_VERSION,RE_ISCC_VERSION),            3439
     *(NAMES_ISCC(1),NISCC_VERSION)                                       3439
      EQUIVALENCE (COMMEN_ISCC(1),CISCC_VERSION),(MAP_ISCC(1,1),          3439
     *MISCC_VERSION)                                                      3439
      CHARACTER CISCC_VERSION*40/' '/                                     3439
      CHARACTER NISCC_VERSION*12/'R.VERSION'/                             3439
      INTEGER MISCC_VERSION(2)/1,1/                                       3439
      REAL RE_ISCC_VERSION                                                3439
C -                                                                       3439
      REAL ISCC_RIN1                                                      3439
      EQUIVALENCE (BANK_ISCC(4),ISCC_RIN1,RE_ISCC_RIN1),(NAMES_ISCC(2),   3439
     *NISCC_RIN1)                                                         3439
      EQUIVALENCE (COMMEN_ISCC(2),CISCC_RIN1),(MAP_ISCC(1,2),             3439
     *MISCC_RIN1)                                                         3439
      CHARACTER CISCC_RIN1*40/' '/                                        3439
      CHARACTER NISCC_RIN1*12/'R.RIN1'/                                   3439
      INTEGER MISCC_RIN1(2)/1,1/                                          3439
      REAL RE_ISCC_RIN1                                                   3439
C -                                                                       3439
      REAL ISCC_ROUT1                                                     3439
      EQUIVALENCE (BANK_ISCC(5),ISCC_ROUT1,RE_ISCC_ROUT1),                3439
     *(NAMES_ISCC(3),NISCC_ROUT1)                                         3439
      EQUIVALENCE (COMMEN_ISCC(3),CISCC_ROUT1),(MAP_ISCC(1,3),            3439
     *MISCC_ROUT1)                                                        3439
      CHARACTER CISCC_ROUT1*40/' '/                                       3439
      CHARACTER NISCC_ROUT1*12/'R.ROUT1'/                                 3439
      INTEGER MISCC_ROUT1(2)/1,1/                                         3439
      REAL RE_ISCC_ROUT1                                                  3439
C -                                                                       3439
      REAL ISCC_RIN2                                                      3439
      EQUIVALENCE (BANK_ISCC(6),ISCC_RIN2,RE_ISCC_RIN2),(NAMES_ISCC(4),   3439
     *NISCC_RIN2)                                                         3439
      EQUIVALENCE (COMMEN_ISCC(4),CISCC_RIN2),(MAP_ISCC(1,4),             3439
     *MISCC_RIN2)                                                         3439
      CHARACTER CISCC_RIN2*40/' '/                                        3439
      CHARACTER NISCC_RIN2*12/'R.RIN2'/                                   3439
      INTEGER MISCC_RIN2(2)/1,1/                                          3439
      REAL RE_ISCC_RIN2                                                   3439
C -                                                                       3439
      REAL ISCC_ROUT2                                                     3439
      EQUIVALENCE (BANK_ISCC(7),ISCC_ROUT2,RE_ISCC_ROUT2),                3439
     *(NAMES_ISCC(5),NISCC_ROUT2)                                         3439
      EQUIVALENCE (COMMEN_ISCC(5),CISCC_ROUT2),(MAP_ISCC(1,5),            3439
     *MISCC_ROUT2)                                                        3439
      CHARACTER CISCC_ROUT2*40/' '/                                       3439
      CHARACTER NISCC_ROUT2*12/'R.ROUT2'/                                 3439
      INTEGER MISCC_ROUT2(2)/1,1/                                         3439
      REAL RE_ISCC_ROUT2                                                  3439
C -                                                                       3439
      REAL ISCC_LENGTH                                                    3439
      EQUIVALENCE (BANK_ISCC(8),ISCC_LENGTH,RE_ISCC_LENGTH),              3439
     *(NAMES_ISCC(6),NISCC_LENGTH)                                        3439
      EQUIVALENCE (COMMEN_ISCC(6),CISCC_LENGTH),(MAP_ISCC(1,6),           3439
     *MISCC_LENGTH)                                                       3439
      CHARACTER CISCC_LENGTH*40/' '/                                      3439
      CHARACTER NISCC_LENGTH*12/'R.LENGTH'/                               3439
      INTEGER MISCC_LENGTH(2)/1,1/                                        3439
      REAL RE_ISCC_LENGTH                                                 3439
C -                                                                       3439
      INTEGER LEN_ISCC,LLEN_ISCC,LINK_ISCC                                3439
      PARAMETER (LEN_ISCC=8)                                              3439
      PARAMETER (LLEN_ISCC=6)                                             3439
      INTEGER FLAG_ISCC/0/,MAP_ISCC(2,LLEN_ISCC),IDNUM_ISCC(10)           3439
      CHARACTER NAMES_ISCC(LLEN_ISCC)*12,COMMEN_ISCC(LLEN_ISCC)*40        3439
      DATA IDNUM_ISCC/10*0/                                               3439
      REAL BANK_ISCC(LEN_ISCC)                                            3439
      CHARACTER*60 BPATH_ISCC/' '/                                        3439
      SAVE FLAG_ISCC,MAP_ISCC,IDNUM_ISCC,NAMES_ISCC,COMMEN_ISCC,          3439
     *BPATH_ISCC                                                          3439
      DATA LINK_ISCC/0/,BANK_ISCC/LEN_ISCC*0/                             3439
C *                                                                       3439
C -                                                                       3441
      REAL ISVR_VERSION                                                   3441
      EQUIVALENCE (BANK_ISVR(3),ISVR_VERSION,RE_ISVR_VERSION),            3441
     *(NAMES_ISVR(1),NISVR_VERSION)                                       3441
      EQUIVALENCE (COMMEN_ISVR(1),CISVR_VERSION),(MAP_ISVR(1,1),          3441
     *MISVR_VERSION)                                                      3441
      CHARACTER CISVR_VERSION*40/' '/                                     3441
      CHARACTER NISVR_VERSION*12/'R.VERSION'/                             3441
      INTEGER MISVR_VERSION(2)/1,1/                                       3441
      REAL RE_ISVR_VERSION                                                3441
C -                                                                       3441
      REAL ISVR_CODE                                                      3441
      EQUIVALENCE (BANK_ISVR(4),ISVR_CODE,RE_ISVR_CODE),(NAMES_ISVR(2),   3441
     *NISVR_CODE)                                                         3441
      EQUIVALENCE (COMMEN_ISVR(2),CISVR_CODE),(MAP_ISVR(1,2),             3441
     *MISVR_CODE)                                                         3441
      CHARACTER CISVR_CODE*40/' '/                                        3441
      CHARACTER NISVR_CODE*12/'R.CODE'/                                   3441
      INTEGER MISVR_CODE(2)/1,1/                                          3441
      REAL RE_ISVR_CODE                                                   3441
C -                                                                       3441
      INTEGER LEN_ISVR,LLEN_ISVR,LINK_ISVR                                3441
      PARAMETER (LEN_ISVR=4)                                              3441
      PARAMETER (LLEN_ISVR=2)                                             3441
      INTEGER FLAG_ISVR/0/,MAP_ISVR(2,LLEN_ISVR),IDNUM_ISVR(10)           3441
      CHARACTER NAMES_ISVR(LLEN_ISVR)*12,COMMEN_ISVR(LLEN_ISVR)*40        3441
      DATA IDNUM_ISVR/10*0/                                               3441
      REAL BANK_ISVR(LEN_ISVR)                                            3441
      CHARACTER*60 BPATH_ISVR/' '/                                        3441
      SAVE FLAG_ISVR,MAP_ISVR,IDNUM_ISVR,NAMES_ISVR,COMMEN_ISVR,          3441
     *BPATH_ISVR                                                          3441
      DATA LINK_ISVR/0/,BANK_ISVR/LEN_ISVR*0/                             3441
C *                                                                       3441
* -------------------------------------------------------
C *                                                                       3443
      CALL AGSBEGM(MODULE,IPRIN)                                          3443
      IF (IPRIN.LT.0) RETURN                                              3443
C Filling bank ISMG - MOTHER VOLUME WHOLE DETECTOR                        3443
      BANK_TITLE='MOTHER VOLUME WHOLE DETECTOR'                           3443
      BPATH_ISMG='ISMG*'                                                  3443
      IDNUM_ISMG(1)=0                                                     3444
C VERSION                                                                 3444
      ISMG_LAYER=1                                                        3444
      CISMG_LAYER='VERSION'                                               3444
C INNER RADIUS                                                            3445
      ISMG_RIN=11.10                                                      3445
      CISMG_RIN='INNER RADIUS'                                            3445
C OUTER RADIUS                                                            3446
      ISMG_ROUT=18.00                                                     3446
      CISMG_ROUT='OUTER RADIUS'                                           3446
C OVERAL LENGTH OF THE DETECTOR                                           3447
      ISMG_TOTALLENGTH=54.50                                              3447
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE DETECTOR'                   3447
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    3448
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           3448
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   3448
C *                                                                       3448
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    3448
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           3448
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   3448
C *                                                                       3450
      CALL AGSBEGM(MODULE,IPRIN)                                          3450
      IF (IPRIN.LT.0) RETURN                                              3450
C Filling bank ISMG - MOTHER VOLUME INNER LAYER                           3450
      BANK_TITLE='MOTHER VOLUME INNER LAYER'                              3450
      BPATH_ISMG='ISMG*'                                                  3450
      IDNUM_ISMG(1)=0                                                     3451
C VERSION                                                                 3451
      ISMG_LAYER=2                                                        3451
      CISMG_LAYER='VERSION'                                               3451
C INNER RADIUS                                                            3452
      ISMG_RIN=11.10                                                      3452
      CISMG_RIN='INNER RADIUS'                                            3452
C OUTER RADIUS                                                            3453
      ISMG_ROUT=14.00                                                     3453
      CISMG_ROUT='OUTER RADIUS'                                           3453
C OVERAL LENGTH OF THE LAYER                                              3454
      ISMG_TOTALLENGTH=44.00                                              3454
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      3454
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    3455
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           3455
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   3455
C *                                                                       3455
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    3455
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           3455
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   3455
C *                                                                       3457
      CALL AGSBEGM(MODULE,IPRIN)                                          3457
      IF (IPRIN.LT.0) RETURN                                              3457
C Filling bank ISMG - MOTHER VOLUME OUTER LAYER                           3457
      BANK_TITLE='MOTHER VOLUME OUTER LAYER'                              3457
      BPATH_ISMG='ISMG*'                                                  3457
      IDNUM_ISMG(1)=0                                                     3458
C VERSION                                                                 3458
      ISMG_LAYER=3                                                        3458
      CISMG_LAYER='VERSION'                                               3458
C INNER RADIUS                                                            3459
      ISMG_RIN=15.00                                                      3459
      CISMG_RIN='INNER RADIUS'                                            3459
C OUTER RADIUS                                                            3460
      ISMG_ROUT=18.00                                                     3460
      CISMG_ROUT='OUTER RADIUS'                                           3460
C OVERAL LENGTH OF THE LAYER                                              3461
      ISMG_TOTALLENGTH=54.50                                              3461
      CISMG_TOTALLENGTH='OVERAL LENGTH OF THE LAYER'                      3461
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    3462
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           3462
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   3462
C *                                                                       3462
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    3462
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           3462
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   3462
*--------------------------------------------------------
C *                                                                       3465
      CALL AGSBEGM(MODULE,IPRIN)                                          3465
      IF (IPRIN.LT.0) RETURN                                              3465
C Filling bank ISBG - INNER SILICON TRACKER DATA                          3465
      BANK_TITLE='INNER SILICON TRACKER DATA'                             3465
      BPATH_ISBG='ISBG*'                                                  3465
      IDNUM_ISBG(1)=0                                                     3466
C LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE                             3466
      ISBG_LAYER=1                                                        3466
      CISBG_LAYER='LAYER INDEX, LAYER 1 DOES NOT EXIST ANYMORE'           3466
C LADDER COUNT                                                            3467
      ISBG_NLADDER=11                                                     3467
      CISBG_NLADDER='LADDER COUNT'                                        3467
C SENSOR UNITS PER LADDER                                                 3468
      ISBG_NUNIT=7                                                        3468
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               3468
C OVERAL LENGTH OF THE DETECTOR                                           3469
      ISBG_LENGTH=28.0                                                    3469
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        3469
C 1ST LADDER NOMINAL RADIUS                                               3470
      ISBG_R=7.0                                                          3470
      CISBG_R='1ST LADDER NOMINAL RADIUS'                                 3470
C 1ST LADDER NOMINAL POSITION ANGLE                                       3471
      ISBG_A=0.0                                                          3471
      CISBG_A='1ST LADDER NOMINAL POSITION ANGLE'                         3471
C ANGULAR OFFSET                                                          3472
      ISBG_AOFFSET=81.0                                                   3472
      CISBG_AOFFSET='ANGULAR OFFSET'                                      3472
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    3473
      ISBG_PPAROFFSET=0.0                                                 3473
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  3473
     *DULE'                                                               3473
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               3474
      ISBG_PPEROFFSET=0.0                                                 3474
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  3474
     *HE MODULE'                                                          3474
C LADDER WIDTH                                                            3475
      ISBG_LADDERWIDTH=4.0                                                3475
      CISBG_LADDERWIDTH='LADDER WIDTH'                                    3475
C LADDER THICKNESS                                                        3476
      ISBG_LADDERTHK=0.4626                                               3476
      CISBG_LADDERTHK='LADDER THICKNESS'                                  3476
C MODULE THICKNESS                                                        3477
      ISBG_SENSATHK=0.4282                                                3477
      CISBG_SENSATHK='MODULE THICKNESS'                                   3477
C SENSOR WIDTH                                                            3478
      ISBG_SENSORWIDTH=4.0                                                3478
      CISBG_SENSORWIDTH='SENSOR WIDTH'                                    3478
C SENSOR LENGTH                                                           3479
      ISBG_SENSORLNGTH=4.0                                                3479
      CISBG_SENSORLNGTH='SENSOR LENGTH'                                   3479
C SENSOR THICKNESS                                                        3480
      ISBG_SENSORTHK=0.0300                                               3480
      CISBG_SENSORTHK='SENSOR THICKNESS'                                  3480
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    3481
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           3481
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   3481
C *                                                                       3481
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    3481
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           3481
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   3481
C *                                                                       3483
      CALL AGSBEGM(MODULE,IPRIN)                                          3483
      IF (IPRIN.LT.0) RETURN                                              3483
C Filling bank ISBG - INNER SILICON TRACKER DATA                          3483
      BANK_TITLE='INNER SILICON TRACKER DATA'                             3483
      BPATH_ISBG='ISBG*'                                                  3483
      IDNUM_ISBG(1)=0                                                     3484
C LAYER INDEX                                                             3484
      ISBG_LAYER=2                                                        3484
      CISBG_LAYER='LAYER INDEX'                                           3484
C LADDER COUNT                                                            3485
      ISBG_NLADDER=19                                                     3485
      CISBG_NLADDER='LADDER COUNT'                                        3485
C SENSOR UNITS PER LADDER                                                 3486
      ISBG_NUNIT=10                                                       3486
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               3486
C OVERAL LENGTH OF THE DETECTOR                                           3487
      ISBG_LENGTH=40.0                                                    3487
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        3487
C 2ND LADDER NOMINAL RADIUS                                               3488
      ISBG_R=12.0                                                         3488
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 3488
C 2ND LADDER NOMINAL POSITION ANGLE                                       3489
      ISBG_A=0.0                                                          3489
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         3489
C ANGULAR OFFSET                                                          3490
      ISBG_AOFFSET=81.0                                                   3490
      CISBG_AOFFSET='ANGULAR OFFSET'                                      3490
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    3491
      ISBG_PPAROFFSET=0.0                                                 3491
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  3491
     *DULE'                                                               3491
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               3492
      ISBG_PPEROFFSET=0.0                                                 3492
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  3492
     *HE MODULE'                                                          3492
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    3493
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           3493
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   3493
C *                                                                       3493
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    3493
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           3493
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   3493
C *                                                                       3495
      CALL AGSBEGM(MODULE,IPRIN)                                          3495
      IF (IPRIN.LT.0) RETURN                                              3495
C Filling bank ISBG - INNER SILICON TRACKER DATA                          3495
      BANK_TITLE='INNER SILICON TRACKER DATA'                             3495
      BPATH_ISBG='ISBG*'                                                  3495
      IDNUM_ISBG(1)=0                                                     3496
C LAYER INDEX                                                             3496
      ISBG_LAYER=3                                                        3496
      CISBG_LAYER='LAYER INDEX'                                           3496
C LADDER COUNT                                                            3497
      ISBG_NLADDER=27                                                     3497
      CISBG_NLADDER='LADDER COUNT'                                        3497
C SENSOR UNITS PER LADDER                                                 3498
      ISBG_NUNIT=13                                                       3498
      CISBG_NUNIT='SENSOR UNITS PER LADDER'                               3498
C OVERAL LENGTH OF THE DETECTOR                                           3499
      ISBG_LENGTH=52.0                                                    3499
      CISBG_LENGTH='OVERAL LENGTH OF THE DETECTOR'                        3499
C 2ND LADDER NOMINAL RADIUS                                               3500
      ISBG_R=17.0                                                         3500
      CISBG_R='2ND LADDER NOMINAL RADIUS'                                 3500
C 2ND LADDER NOMINAL POSITION ANGLE                                       3501
      ISBG_A=0.0                                                          3501
      CISBG_A='2ND LADDER NOMINAL POSITION ANGLE'                         3501
C ANGULAR OFFSET                                                          3502
      ISBG_AOFFSET=81.0                                                   3502
      CISBG_AOFFSET='ANGULAR OFFSET'                                      3502
C POSITION OFFSET PARALLEL TO THE LENGTH OF THE MODULE                    3503
      ISBG_PPAROFFSET=0.0                                                 3503
      CISBG_PPAROFFSET='POSITION OFFSET PARALLEL TO THE LENGTH OF THE MO  3503
     *DULE'                                                               3503
C POSITION OFFSET PERPENDICULAR TO THE LENGTH OF THE MODULE               3504
      ISBG_PPEROFFSET=0.0                                                 3504
      CISBG_PPEROFFSET='POSITION OFFSET PERPENDICULAR TO THE LENGTH OF T  3504
     *HE MODULE'                                                          3504
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    3505
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           3505
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   3505
C *                                                                       3505
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    3505
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           3505
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   3505
*--------------------------------------------------------
C *                                                                       3508
      CALL AGSBEGM(MODULE,IPRIN)                                          3508
      IF (IPRIN.LT.0) RETURN                                              3508
C Filling bank ISAN - THERMAL CONDUCTIVE CARBON FOAM PLATE                3508
      BANK_TITLE='THERMAL CONDUCTIVE CARBON FOAM PLATE'                   3508
      BPATH_ISAN='ISAN*'                                                  3508
      IDNUM_ISAN(1)=0                                                     3509
C MAY HAVE A FEW                                                          3509
      ISAN_VERSION=1                                                      3509
      CISAN_VERSION='MAY HAVE A FEW'                                      3509
C WIDTH                                                                   3510
      ISAN_W=4.0                                                          3510
      CISAN_W='WIDTH'                                                     3510
C LENGTH                                                                  3511
      ISAN_H=4.0                                                          3511
      CISAN_H='LENGTH'                                                    3511
C THICKNESS                                                               3512
      ISAN_THK=0.1686                                                     3512
      CISAN_THK='THICKNESS'                                               3512
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    3513
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           3513
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   3513
C *                                                                       3513
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    3513
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           3513
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   3513
*--------------------------------------------------------
C *                                                                       3516
      CALL AGSBEGM(MODULE,IPRIN)                                          3516
      IF (IPRIN.LT.0) RETURN                                              3516
C Filling bank ISHY - KAPTON HYBRID                                       3516
      BANK_TITLE='KAPTON HYBRID'                                          3516
      BPATH_ISHY='ISHY*'                                                  3516
      IDNUM_ISHY(1)=0                                                     3517
C MAY HAVE A FEW                                                          3517
      ISHY_VERSION=1                                                      3517
      CISHY_VERSION='MAY HAVE A FEW'                                      3517
C WIDTH                                                                   3518
      ISHY_W=4.0                                                          3518
      CISHY_W='WIDTH'                                                     3518
C LENGTH                                                                  3519
      ISHY_H=4.0                                                          3519
      CISHY_H='LENGTH'                                                    3519
C THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2MIL KAPTON        3520
      ISHY_THK=0.0050                                                     3520
      CISHY_THK='THICKNESS, 1MIL KAPTON, 1/2MIL GLUE, 1/2MIL KAPTON = 2M  3520
     *IL KAPTON'                                                          3520
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    3521
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           3521
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   3521
C *                                                                       3521
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISHY',    3521
     *BPATH_ISHY,IDNUM_ISHY,1, MAP_ISHY,NAMES_ISHY,COMMEN_ISHY,           3521
     *BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                   3521
*--------------------------------------------------------
C *                                                                       3524
      CALL AGSBEGM(MODULE,IPRIN)                                          3524
      IF (IPRIN.LT.0) RETURN                                              3524
C Filling bank ISCU - COPPER TRACES ON HYBRID                             3524
      BANK_TITLE='COPPER TRACES ON HYBRID'                                3524
      BPATH_ISCU='ISCU*'                                                  3524
      IDNUM_ISCU(1)=0                                                     3525
C MAY HAVE A FEW                                                          3525
      ISCU_VERSION=1                                                      3525
      CISCU_VERSION='MAY HAVE A FEW'                                      3525
C WIDTH                                                                   3526
      ISCU_W=4.0                                                          3526
      CISCU_W='WIDTH'                                                     3526
C LENGTH                                                                  3527
      ISCU_H=4.0                                                          3527
      CISCU_H='LENGTH'                                                    3527
C THICKNESS, 0.7MIL CU                                                    3528
      ISCU_THK=0.0018                                                     3528
      CISCU_THK='THICKNESS, 0.7MIL CU'                                    3528
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    3529
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           3529
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   3529
C *                                                                       3529
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCU',    3529
     *BPATH_ISCU,IDNUM_ISCU,1, MAP_ISCU,NAMES_ISCU,COMMEN_ISCU,           3529
     *BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                   3529
*--------------------------------------------------------
C *                                                                       3532
      CALL AGSBEGM(MODULE,IPRIN)                                          3532
      IF (IPRIN.LT.0) RETURN                                              3532
C Filling bank ISCG - READOUT CHIP GEOMETRY, FIRST APPROX.                3532
      BANK_TITLE='READOUT CHIP GEOMETRY, FIRST APPROX.'                   3532
      BPATH_ISCG='ISCG*'                                                  3532
      IDNUM_ISCG(1)=0                                                     3533
C WE MAY HAVE A FEW DIFFERENT CHIPS                                       3533
      ISCG_VERSION=1                                                      3533
      CISCG_VERSION='WE MAY HAVE A FEW DIFFERENT CHIPS'                   3533
C WIDTH                                                                   3534
      ISCG_W=0.8055                                                       3534
      CISCG_W='WIDTH'                                                     3534
C HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)                          3535
      ISCG_H=4.0                                                          3535
      CISCG_H='HEIGHT (HEIGHT CHIP = 7100UM, JUST MAKE STRIP)'            3535
C THICKNESS                                                               3536
      ISCG_THK=0.0762                                                     3536
      CISCG_THK='THICKNESS'                                               3536
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    3537
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           3537
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   3537
C *                                                                       3537
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCG',    3537
     *BPATH_ISCG,IDNUM_ISCG,1, MAP_ISCG,NAMES_ISCG,COMMEN_ISCG,           3537
     *BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                   3537
*--------------------------------------------------------
C *                                                                       3540
      CALL AGSBEGM(MODULE,IPRIN)                                          3540
      IF (IPRIN.LT.0) RETURN                                              3540
C Filling bank ISGA - GLUE LAYER, SAME SIZE AS SENSOR                     3540
      BANK_TITLE='GLUE LAYER, SAME SIZE AS SENSOR'                        3540
      BPATH_ISGA='ISGA*'                                                  3540
      IDNUM_ISGA(1)=0                                                     3541
C MAY HAVE A FEW                                                          3541
      ISGA_VERSION=1                                                      3541
      CISGA_VERSION='MAY HAVE A FEW'                                      3541
C WIDTH                                                                   3542
      ISGA_W=4.0                                                          3542
      CISGA_W='WIDTH'                                                     3542
C LENGTH                                                                  3543
      ISGA_H=4.0                                                          3543
      CISGA_H='LENGTH'                                                    3543
C THICKNESS, USE 50UM                                                     3544
      ISGA_THK=0.0050                                                     3544
      CISGA_THK='THICKNESS, USE 50UM'                                     3544
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    3545
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           3545
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   3545
C *                                                                       3545
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGA',    3545
     *BPATH_ISGA,IDNUM_ISGA,1, MAP_ISGA,NAMES_ISGA,COMMEN_ISGA,           3545
     *BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                   3545
*--------------------------------------------------------
C *                                                                       3548
      CALL AGSBEGM(MODULE,IPRIN)                                          3548
      IF (IPRIN.LT.0) RETURN                                              3548
C Filling bank ISGB - GLUE LAYER, SAME SIZE AS CHIP                       3548
      BANK_TITLE='GLUE LAYER, SAME SIZE AS CHIP'                          3548
      BPATH_ISGB='ISGB*'                                                  3548
      IDNUM_ISGB(1)=0                                                     3549
C MAY HAVE A FEW                                                          3549
      ISGB_VERSION=1                                                      3549
      CISGB_VERSION='MAY HAVE A FEW'                                      3549
C WIDTH                                                                   3550
      ISGB_W=0.8055                                                       3550
      CISGB_W='WIDTH'                                                     3550
C LENGTH                                                                  3551
      ISGB_H=4.0                                                          3551
      CISGB_H='LENGTH'                                                    3551
C THICKNESS, USE 50UM                                                     3552
      ISGB_THK=0.0050                                                     3552
      CISGB_THK='THICKNESS, USE 50UM'                                     3552
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    3553
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           3553
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   3553
C *                                                                       3553
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISGB',    3553
     *BPATH_ISGB,IDNUM_ISGB,1, MAP_ISGB,NAMES_ISGB,COMMEN_ISGB,           3553
     *BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                   3553
* -------------------------------------------------------
C *                                                                       3555
      CALL AGSBEGM(MODULE,IPRIN)                                          3555
      IF (IPRIN.LT.0) RETURN                                              3555
C Filling bank ISRR - SUPPORT RING FOR LAYER 1                            3555
      BANK_TITLE='SUPPORT RING FOR LAYER 1'                               3555
      BPATH_ISRR='ISRR*'                                                  3555
      IDNUM_ISRR(1)=0                                                     3556
C LAYER                                                                   3556
      ISRR_LAYER=1                                                        3556
      CISRR_LAYER='LAYER'                                                 3556
C INNER RADIUS                                                            3557
      ISRR_RIN=6.00                                                       3557
      CISRR_RIN='INNER RADIUS'                                            3557
C OUTER RADIUS                                                            3558
      ISRR_ROUT=9.00                                                      3558
      CISRR_ROUT='OUTER RADIUS'                                           3558
C THICKNESS OF THE RING                                                   3559
      ISRR_LENGTH=2.00                                                    3559
      CISRR_LENGTH='THICKNESS OF THE RING'                                3559
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    3560
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           3560
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   3560
C *                                                                       3560
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    3560
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           3560
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   3560
C *                                                                       3562
      CALL AGSBEGM(MODULE,IPRIN)                                          3562
      IF (IPRIN.LT.0) RETURN                                              3562
C Filling bank ISRR - SUPPORT RING FOR LAYER 2                            3562
      BANK_TITLE='SUPPORT RING FOR LAYER 2'                               3562
      BPATH_ISRR='ISRR*'                                                  3562
      IDNUM_ISRR(1)=0                                                     3563
C LAYER                                                                   3563
      ISRR_LAYER=2                                                        3563
      CISRR_LAYER='LAYER'                                                 3563
C INNER RADIUS                                                            3564
      ISRR_RIN=11.10                                                      3564
      CISRR_RIN='INNER RADIUS'                                            3564
C OUTER RADIUS                                                            3565
      ISRR_ROUT=14.00                                                     3565
      CISRR_ROUT='OUTER RADIUS'                                           3565
C THICKNESS OF THE RING                                                   3566
      ISRR_LENGTH=2.00                                                    3566
      CISRR_LENGTH='THICKNESS OF THE RING'                                3566
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    3567
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           3567
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   3567
C *                                                                       3567
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    3567
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           3567
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   3567
C *                                                                       3569
      CALL AGSBEGM(MODULE,IPRIN)                                          3569
      IF (IPRIN.LT.0) RETURN                                              3569
C Filling bank ISRR - SUPPORT RING FOR LAYER 3                            3569
      BANK_TITLE='SUPPORT RING FOR LAYER 3'                               3569
      BPATH_ISRR='ISRR*'                                                  3569
      IDNUM_ISRR(1)=0                                                     3570
C LAYER                                                                   3570
      ISRR_LAYER=3                                                        3570
      CISRR_LAYER='LAYER'                                                 3570
C INNER RADIUS                                                            3571
      ISRR_RIN=15.00                                                      3571
      CISRR_RIN='INNER RADIUS'                                            3571
C OUTER RADIUS                                                            3572
      ISRR_ROUT=18.00                                                     3572
      CISRR_ROUT='OUTER RADIUS'                                           3572
C THICKNESS OF THE RING                                                   3573
      ISRR_LENGTH=1.25                                                    3573
      CISRR_LENGTH='THICKNESS OF THE RING'                                3573
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    3574
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           3574
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   3574
C *                                                                       3574
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISRR',    3574
     *BPATH_ISRR,IDNUM_ISRR,1, MAP_ISRR,NAMES_ISRR,COMMEN_ISRR,           3574
     *BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                   3574
* -------------------------------------------------------
C *                                                                       3576
      CALL AGSBEGM(MODULE,IPRIN)                                          3576
      IF (IPRIN.LT.0) RETURN                                              3576
C Filling bank ISCC - INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3          3576
      BANK_TITLE='INTERCONNECT BETWEEN SUPPORT RINGS 2 AND 3'             3576
      BPATH_ISCC='ISCC*'                                                  3576
      IDNUM_ISCC(1)=0                                                     3577
C VERSION                                                                 3577
      ISCC_VERSION=1                                                      3577
      CISCC_VERSION='VERSION'                                             3577
C INNER RADIUS SMALL                                                      3578
      ISCC_RIN1=13.00                                                     3578
      CISCC_RIN1='INNER RADIUS SMALL'                                     3578
C OUTER RADIUS SMALL                                                      3579
      ISCC_ROUT1=14.00                                                    3579
      CISCC_ROUT1='OUTER RADIUS SMALL'                                    3579
C INNER RADIUS LARGE                                                      3580
      ISCC_RIN2=15.00                                                     3580
      CISCC_RIN2='INNER RADIUS LARGE'                                     3580
C OUTER RADIUS LARGE                                                      3581
      ISCC_ROUT2=16.00                                                    3581
      CISCC_ROUT2='OUTER RADIUS LARGE'                                    3581
C THICKNESS OF THE RING                                                   3582
      ISCC_LENGTH=4.00                                                    3582
      CISCC_LENGTH='THICKNESS OF THE RING'                                3582
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    3583
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           3583
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   3583
C *                                                                       3583
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISCC',    3583
     *BPATH_ISCC,IDNUM_ISCC,1, MAP_ISCC,NAMES_ISCC,COMMEN_ISCC,           3583
     *BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                   3583
* -------------------------------------------------------
C *                                                                       3585
      CALL AGSBEGM(MODULE,IPRIN)                                          3585
      IF (IPRIN.LT.0) RETURN                                              3585
C Filling bank ISVR - CODE VERSION FOR G2T_VOLUME_ID                      3585
      BANK_TITLE='CODE VERSION FOR G2T_VOLUME_ID'                         3585
      BPATH_ISVR='ISVR*'                                                  3585
      IDNUM_ISVR(1)=0                                                     3586
C VERSION                                                                 3586
      ISVR_VERSION=2                                                      3586
      CISVR_VERSION='VERSION'                                             3586
C VERSION                                                                 3587
      ISVR_CODE=2                                                         3587
      CISVR_CODE='VERSION'                                                3587
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    3588
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           3588
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   3588
C *                                                                       3588
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISVR',    3588
     *BPATH_ISVR,IDNUM_ISVR,1, MAP_ISVR,NAMES_ISVR,COMMEN_ISVR,           3588
     *BANK_ISVR,LEN_ISVR,LLEN_ISVR,LINK_ISVR,FLAG_ISVR)                   3588
* -------------------------------------------------------
* -------------------------------------------------------
      RADDEG = 3.14159265/180.0                                           3592
* -------------------------------------------------------
C use ISMG bank                                                           3594
      BPATH_ISMG='ISMG*'                                                  3594
      IDNUM_ISMG(1)=0                                                     3594
      ISMG_LAYER=1                                                        3594
      CALL AGDGETP('ISTBGEO6','*',-999,'ISMG',NISMG_LAYER,RE_ISMG_LAYER,  3594
     *BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,BANK_ISMG,LEN_ISMG,     3594
     *LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                                      3594
C use default ISVR bank                                                   3595
      BPATH_ISVR='ISVR*'                                                  3595
      IDNUM_ISVR(1)=0                                                     3595
      CALL AGDGETP('ISTBGEO6','*',-999,'ISVR',' ',BANK_ISVR, BPATH_ISVR,  3595
     *IDNUM_ISVR,1,MAP_ISVR,NAMES_ISVR,BANK_ISVR,LEN_ISVR,LLEN_ISVR,      3595
     *LINK_ISVR,FLAG_ISVR)                                                3595
      CALL AGSBEGM(MODULE,IPRIN)                                          3597
C Check IPRIN<0                                                           3597
      IF (IPRIN.LT.0) RETURN                                              3597
C Create IBMO :                                                           3597
C Call To Local Procedure IBMO                                            3597
      ASSIGN 5020 TO BLOCK_IBMO                                           3597
      GO TO  5010                                                         3597
5020  CONTINUE                                                            3597
C *                                                                       3597
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           3598
      CALL AGSRESET                                                       3598
      AG_MOTHER = 'CAVE'                                                  3598
      AG_TITLE = 'IBMO'                                                   3598
      AG_EXNAME = 'POSITION'                                              3598
      AG_PARLIST = 'MOTHER'                                               3598
      CALL AXPOSITION                                                     3598
C *                                                                       3598
      WRITE (*,*) 'ISTB mother - IBMO - created'                          3600
* -------------------------------------------------------
      CALL AGSENDM                                                        3602
      RETURN                                                              3602
C Begin Local Procedure IBMO                                              3602
C IBMO IS THE MOTHER OF THE ISTB DETECTOR                                 3602
5010  CONTINUE                                                            3602
         AG_TITLE='IBMO'                                                  3602
         AG_MODULE=MODULE                                                 3602
         AG_MARK='V00'                                                    3602
         CALL AGSPUSH                                                     3602
         AG_MODULE=MODULE                                                 3602
C    *                                                                    3602
C    Geant MATERIAL : AIR ===> inherited arguments used <===              3603
         CALL AGSRESET                                                    3603
         AG_TITLE = 'AIR'                                                 3603
         AG_EXNAME = 'MATERIAL'                                           3603
         AG_PARLIST = 'NONE'                                              3603
         CALL AXMATERIAL                                                  3603
C    *                                                                    3603
C    Geant ATTRIBUTE : IBMO ===> SEEN=1 COLO=1 <===                       3603
         CALL AGSRESET                                                    3604
         AG_SEEN = 1                                                      3604
         AG_COLO = 1                                                      3604
         AG_TITLE = 'IBMO'                                                3604
         AG_EXNAME = 'ATTRIBUTE'                                          3604
         AG_PARLIST = 'SEEN_COLO'                                         3604
         CALL AXATTRIBUTE                                                 3604
C    *                                                                    3604
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  3608
C    LLENGTH/2.0 <===                                                     3608
         CALL AGSRESET                                                    3608
         AG_RMIN = ISMG_RIN                                               3608
         AG_RMAX = ISMG_ROUT                                              3608
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     3608
         AG_TITLE = 'TUBE'                                                3608
         AG_EXNAME = 'SHAPE'                                              3608
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      3608
         CALL AXSHAPE                                                     3608
C    *                                                                    3608
* -- Some administration to calculate the thickness of a module
* -- Kept for (private) future use
C    use ISAN bank                                                        3612
         BPATH_ISAN='ISAN*'                                               3612
         IDNUM_ISAN(1)=0                                                  3612
         ISAN_VERSION=1                                                   3612
         CALL AGDGETP('ISTBGEO6','*',-999,'ISAN',NISAN_VERSION,           3612
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     3612
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                3612
C    use ISGA bank                                                        3613
         BPATH_ISGA='ISGA*'                                               3613
         IDNUM_ISGA(1)=0                                                  3613
         ISGA_VERSION=1                                                   3613
         CALL AGDGETP('ISTBGEO6','*',-999,'ISGA',NISGA_VERSION,           3613
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     3613
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                3613
C    use ISBG bank                                                        3614
         BPATH_ISBG='ISBG*'                                               3614
         IDNUM_ISBG(1)=0                                                  3614
         ISBG_LAYER=1                                                     3614
         CALL AGDGETP('ISTBGEO6','*',-999,'ISBG',NISBG_LAYER,             3614
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       3614
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                3614
C    use ISGA bank                                                        3615
         BPATH_ISGA='ISGA*'                                               3615
         IDNUM_ISGA(1)=0                                                  3615
         ISGA_VERSION=1                                                   3615
         CALL AGDGETP('ISTBGEO6','*',-999,'ISGA',NISGA_VERSION,           3615
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     3615
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                3615
C    use ISHY bank                                                        3616
         BPATH_ISHY='ISHY*'                                               3616
         IDNUM_ISHY(1)=0                                                  3616
         ISHY_VERSION=1                                                   3616
         CALL AGDGETP('ISTBGEO6','*',-999,'ISHY',NISHY_VERSION,           3616
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     3616
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                3616
C    use ISCU bank                                                        3617
         BPATH_ISCU='ISCU*'                                               3617
         IDNUM_ISCU(1)=0                                                  3617
         ISCU_VERSION=1                                                   3617
         CALL AGDGETP('ISTBGEO6','*',-999,'ISCU',NISCU_VERSION,           3617
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     3617
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                3617
C    use ISGB bank                                                        3618
         BPATH_ISGB='ISGB*'                                               3618
         IDNUM_ISGB(1)=0                                                  3618
         ISGB_VERSION=1                                                   3618
         CALL AGDGETP('ISTBGEO6','*',-999,'ISGB',NISGB_VERSION,           3618
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     3618
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                3618
C    use ISCG bank                                                        3619
         BPATH_ISCG='ISCG*'                                               3619
         IDNUM_ISCG(1)=0                                                  3619
         ISCG_VERSION=1                                                   3619
         CALL AGDGETP('ISTBGEO6','*',-999,'ISCG',NISCG_VERSION,           3619
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     3619
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                3619
         MOD_THK = 2.0*(ISAN_THK/                                         3621
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+                   3621
     *   ISCU_THK+ISGB_THK+ISCG_THK)                                      3621
C    *                                                                    3623
         ISTLAYER=2                                                       3623
            GO TO 5033                                                    3623
5031        ISTLAYER=ISTLAYER+1                                           3623
5033        IF(ISTLAYER-(3).GT.0) GO TO 5032                              3623
C       use ISMG bank                                                     3624
            BPATH_ISMG='ISMG*'                                            3624
            IDNUM_ISMG(1)=0                                               3624
            ISMG_LAYER=ISTLAYER                                           3624
            CALL AGDGETP('ISTBGEO6','*',-999,'ISMG',NISMG_LAYER,          3624
     *      RE_ISMG_LAYER,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,    3624
     *      BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)             3624
C       use ISBG bank                                                     3625
            BPATH_ISBG='ISBG*'                                            3625
            IDNUM_ISBG(1)=0                                               3625
            ISBG_LAYER=ISTLAYER                                           3625
            CALL AGDGETP('ISTBGEO6','*',-999,'ISBG',NISBG_LAYER,          3625
     *      RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,    3625
     *      BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)             3625
C       use ISRR bank                                                     3626
            BPATH_ISRR='ISRR*'                                            3626
            IDNUM_ISRR(1)=0                                               3626
            ISRR_LAYER=ISTLAYER                                           3626
            CALL AGDGETP('ISTBGEO6','*',-999,'ISRR',NISRR_LAYER,          3626
     *      RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,    3626
     *      BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)             3626
C       Create IBMY :                                                     3627
C       Call To Local Procedure IBMY                                      3627
            ASSIGN 5050 TO BLOCK_IBMY                                     3627
            GO TO  5040                                                   3627
5050        CONTINUE                                                      3627
C       *                                                                 3627
C       Geant POSITION : IBMY ===> inherited arguments used <===          3628
            CALL AGSRESET                                                 3628
            AG_TITLE = 'IBMY'                                             3628
            AG_EXNAME = 'POSITION'                                        3628
            AG_PARLIST = 'NONE'                                           3628
            CALL AXPOSITION                                               3628
C       *                                                                 3628
         GO TO 5031                                                       3629
5032     CONTINUE                                                         3629
*     place the interconnects, east and west side
C    use ISBG bank                                                        3632
         BPATH_ISBG='ISBG*'                                               3632
         IDNUM_ISBG(1)=0                                                  3632
         ISBG_LAYER=2                                                     3632
         CALL AGDGETP('ISTBGEO6','*',-999,'ISBG',NISBG_LAYER,             3632
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       3632
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                3632
C    use ISRR bank                                                        3633
         BPATH_ISRR='ISRR*'                                               3633
         IDNUM_ISRR(1)=0                                                  3633
         ISRR_LAYER=2                                                     3633
         CALL AGDGETP('ISTBGEO6','*',-999,'ISRR',NISRR_LAYER,             3633
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       3633
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                3633
C    use ISCC bank                                                        3634
         BPATH_ISCC='ISCC*'                                               3634
         IDNUM_ISCC(1)=0                                                  3634
         ISCC_VERSION=1                                                   3634
         CALL AGDGETP('ISTBGEO6','*',-999,'ISCC',NISCC_VERSION,           3634
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     3634
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                3634
C    Create IBME :                                                        3635
C    Call To Local Procedure IBME                                         3635
         ASSIGN 5070 TO BLOCK_IBME                                        3635
         GO TO  5060                                                      3635
5070     CONTINUE                                                         3635
C    *                                                                    3635
C    Geant POSITION : IBME ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  3638
C    R_LENGTH+ISCC_LENGTH/2.0) <===                                       3638
         CALL AGSRESET                                                    3638
         AG_X = 0.0                                                       3638
         AG_Y = 0.0                                                       3638
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)         3638
         AG_TITLE = 'IBME'                                                3638
         AG_EXNAME = 'POSITION'                                           3638
         AG_PARLIST = 'X_Y_Z'                                             3638
         CALL AXPOSITION                                                  3638
C    *                                                                    3638
C    Create IBMW :                                                        3639
C    Call To Local Procedure IBMW                                         3639
         ASSIGN 5090 TO BLOCK_IBMW                                        3639
         GO TO  5080                                                      3639
5090     CONTINUE                                                         3639
C    *                                                                    3639
C    Geant POSITION : IBMW ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  3642
C    RR_LENGTH+ISCC_LENGTH/2.0) <===                                      3642
         CALL AGSRESET                                                    3642
         AG_X = 0.0                                                       3642
         AG_Y = 0.0                                                       3642
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH+ISCC_LENGTH/2.0)        3642
         AG_TITLE = 'IBMW'                                                3642
         AG_EXNAME = 'POSITION'                                           3642
         AG_PARLIST = 'X_Y_Z'                                             3642
         CALL AXPOSITION                                                  3642
C    *                                                                    3642
5011  CALL AGSPOPB                                                        3644
      GO TO BLOCK_IBMO, (5010 ,5020)                                      3644
C End of Local Procedure                                                  3644
* -------------------------------------------------------
C Begin Local Procedure IBMY                                              3647
C IBMY IS THE MOTHER OF THE INNER IST LAYER                               3647
5040  CONTINUE                                                            3647
         AG_TITLE='IBMY'                                                  3647
         AG_MODULE=MODULE                                                 3647
         AG_MARK='V00'                                                    3647
         CALL AGSPUSH                                                     3647
         AG_MODULE=MODULE                                                 3647
C    *                                                                    3647
C    Geant MATERIAL : AIR ===> inherited arguments used <===              3648
         CALL AGSRESET                                                    3648
         AG_TITLE = 'AIR'                                                 3648
         AG_EXNAME = 'MATERIAL'                                           3648
         AG_PARLIST = 'NONE'                                              3648
         CALL AXMATERIAL                                                  3648
C    *                                                                    3648
C    Geant ATTRIBUTE : IBMY ===> SEEN=0 COLO=6 SERIAL=ISTLAYER <===       3648
         CALL AGSRESET                                                    3649
         AG_SEEN = 0                                                      3649
         AG_COLO = 6                                                      3649
         AG_SERIAL = ISTLAYER                                             3649
         AG_TITLE = 'IBMY'                                                3649
         AG_EXNAME = 'ATTRIBUTE'                                          3649
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3649
         CALL AXATTRIBUTE                                                 3649
C    *                                                                    3649
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = ISMG_TOTA  3653
C    LLENGTH/2.0 <===                                                     3653
         CALL AGSRESET                                                    3653
         AG_RMIN = ISMG_RIN                                               3653
         AG_RMAX = ISMG_ROUT                                              3653
         AG_DZ = ISMG_TOTALLENGTH/2.0                                     3653
         AG_TITLE = 'TUBE'                                                3653
         AG_EXNAME = 'SHAPE'                                              3653
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      3653
         CALL AXSHAPE                                                     3653
C    *                                                                    3653
         WRITE(*,*) '===>GEOINFO/istbgeo: Creating IST layer',            3656
     *   ISBG_LAYER,' Rin=',ISMG_RIN,' Rout=',ISMG_ROUT                   3656
C    *                                                                    3657
         NL=1                                                             3657
            GO TO 5103                                                    3657
5101        NL=NL+1                                                       3657
5103        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5102                         3657
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                3657
C       BASE TILT, TO BE FURTHER CORRECTED                                3659
            ANGLE = (360.0/ISBG_NLADDER)*NL                               3659
*       GvN Offset perpendicular to the length of the module/ladder
*       this to move the midpoint of the sensors back on the required
*       radius after the tilting
            RLAD = ISBG_R+ISBG_PPEROFFSET                                 3664
*       Individual ladders can be individually tilted by using
*       the aOffset parameter (angular offset), and the pOffset
*       (position offset), which is the individual lateral
*       displacement.
            ANGLECORR = ATAN(ISBG_PPAROFFSET/RLAD)                        3671
*       The anglePos defines the POSITION of the center of the ladder
*       in space, along the lines of x=r*cos(...), y=r*sin(...)
*       have to correct and convert to radians:
C       SEE ABOVE COMMENT                                                 3677
            ANGLEPOS = ANGLE*RADDEG - ANGLECORR                           3677
            TRUER = SQRT(RLAD**2+ISBG_PPAROFFSET**2)                      3678
C       Create IBAM :                                                     3680
C       Call To Local Procedure IBAM                                      3680
            ASSIGN 5120 TO BLOCK_IBAM                                     3680
            GO TO  5110                                                   3680
5120        CONTINUE                                                      3680
C       *                                                                 3680
C       Geant POSITION : IBAM ===> X=TRUER*COS(ANGLEPOS) Y=TRUER*SIN(ANG  3684
C       LEPOS) Z = 0.0 ALPHAZ = ANGLE-ISBG_AOFFSET <===                   3684
            CALL AGSRESET                                                 3684
            AG_X = TRUER*COS(ANGLEPOS)                                    3684
            AG_Y = TRUER*SIN(ANGLEPOS)                                    3684
            AG_Z = 0.0                                                    3684
            AG_ALPHAN=AG_ALPHAN+1                                         3684
            AG_ALPHAK(AG_ALPHAN)=3                                        3684
            AG_ALPHAL(AG_ALPHAN)=ANGLE-ISBG_AOFFSET                       3684
            AG_TITLE = 'IBAM'                                             3684
            AG_EXNAME = 'POSITION'                                        3684
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   3684
            CALL AXPOSITION                                               3684
C       *                                                                 3684
         GO TO 5101                                                       3686
5102     CONTINUE                                                         3686
*     place 2 support rings at both ends of the ladders
C    Create ISRI :                                                        3689
C    Call To Local Procedure ISRI                                         3689
         ASSIGN 5140 TO BLOCK_ISRI                                        3689
         GO TO  5130                                                      3689
5140     CONTINUE                                                         3689
C    *                                                                    3689
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = 1.0*(ISBG_LENGTH/2.0+ISR  3692
C    R_LENGTH/2.0) <===                                                   3692
         CALL AGSRESET                                                    3692
         AG_X = 0.0                                                       3692
         AG_Y = 0.0                                                       3692
         AG_Z = 1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                     3692
         AG_TITLE = 'ISRI'                                                3692
         AG_EXNAME = 'POSITION'                                           3692
         AG_PARLIST = 'X_Y_Z'                                             3692
         CALL AXPOSITION                                                  3692
C    *                                                                    3692
C    Geant POSITION : ISRI ===> X=0.0 Y=0.0 Z = -1.0*(ISBG_LENGTH/2.0+IS  3692
C    RR_LENGTH/2.0) <===                                                  3692
         CALL AGSRESET                                                    3695
         AG_X = 0.0                                                       3695
         AG_Y = 0.0                                                       3695
         AG_Z = -1.0*(ISBG_LENGTH/2.0+ISRR_LENGTH/2.0)                    3695
         AG_TITLE = 'ISRI'                                                3695
         AG_EXNAME = 'POSITION'                                           3695
         AG_PARLIST = 'X_Y_Z'                                             3695
         CALL AXPOSITION                                                  3695
C    *                                                                    3695
5041  CALL AGSPOPB                                                        3697
      GO TO BLOCK_IBMY, (5040 ,5050)                                      3697
C End of Local Procedure                                                  3697
* -----------------------------------------------------------------------------
C Begin Local Procedure IBME                                              3699
C IBME IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE WEST SIDE      3699
5060  CONTINUE                                                            3699
         AG_TITLE='IBME'                                                  3699
         AG_MODULE=MODULE                                                 3699
         AG_MARK='V00'                                                    3699
         CALL AGSPUSH                                                     3699
         AG_MODULE=MODULE                                                 3699
C    *                                                                    3699
C    Geant MATERIAL : AIR ===> inherited arguments used <===              3700
         CALL AGSRESET                                                    3700
         AG_TITLE = 'AIR'                                                 3700
         AG_EXNAME = 'MATERIAL'                                           3700
         AG_PARLIST = 'NONE'                                              3700
         CALL AXMATERIAL                                                  3700
C    *                                                                    3700
C    Geant ATTRIBUTE : IBME ===> SEEN=0 COLO=2 <===                       3700
         CALL AGSRESET                                                    3701
         AG_SEEN = 0                                                      3701
         AG_COLO = 2                                                      3701
         AG_TITLE = 'IBME'                                                3701
         AG_EXNAME = 'ATTRIBUTE'                                          3701
         AG_PARLIST = 'SEEN_COLO'                                         3701
         CALL AXATTRIBUTE                                                 3701
C    *                                                                    3701
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  3707
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     3707
         CALL AGSRESET                                                    3707
         AG_RMN1 = ISCC_RIN1                                              3707
         AG_RMX1 = ISCC_ROUT1                                             3707
         AG_RMN2 = ISCC_RIN2                                              3707
         AG_RMX2 = ISCC_ROUT2                                             3707
         AG_DZ = ISCC_LENGTH/2.0                                          3707
         AG_TITLE = 'CONE'                                                3707
         AG_EXNAME = 'SHAPE'                                              3707
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            3707
         CALL AXSHAPE                                                     3707
C    *                                                                    3707
C    use ISBG bank                                                        3709
         BPATH_ISBG='ISBG*'                                               3709
         IDNUM_ISBG(1)=0                                                  3709
         ISBG_LAYER=2                                                     3709
         CALL AGDGETP('ISTBGEO6','*',-999,'ISBG',NISBG_LAYER,             3709
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       3709
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                3709
C    use ISRR bank                                                        3710
         BPATH_ISRR='ISRR*'                                               3710
         IDNUM_ISRR(1)=0                                                  3710
         ISRR_LAYER=2                                                     3710
         CALL AGDGETP('ISTBGEO6','*',-999,'ISRR',NISRR_LAYER,             3710
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       3710
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                3710
C    use ISCC bank                                                        3711
         BPATH_ISCC='ISCC*'                                               3711
         IDNUM_ISCC(1)=0                                                  3711
         ISCC_VERSION=1                                                   3711
         CALL AGDGETP('ISTBGEO6','*',-999,'ISCC',NISCC_VERSION,           3711
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     3711
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                3711
C    Create ISCO :                                                        3712
C    Call To Local Procedure ISCO                                         3712
         ASSIGN 5160 TO BLOCK_ISCO                                        3712
         GO TO  5150                                                      3712
5160     CONTINUE                                                         3712
C    *                                                                    3712
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 <===                  3715
         CALL AGSRESET                                                    3715
         AG_X = 0.0                                                       3715
         AG_Y = 0.0                                                       3715
         AG_Z = 0.0                                                       3715
         AG_TITLE = 'ISCO'                                                3715
         AG_EXNAME = 'POSITION'                                           3715
         AG_PARLIST = 'X_Y_Z'                                             3715
         CALL AXPOSITION                                                  3715
C    *                                                                    3715
5061  CALL AGSPOPB                                                        3717
      GO TO BLOCK_IBME, (5060 ,5070)                                      3717
C End of Local Procedure                                                  3717
* -----------------------------------------------------------------------------
C Begin Local Procedure IBMW                                              3720
C IBMW IS THE MOTHER OF THE INTERCONNECT OF THE IST ON THE EAST SIDE      3720
5080  CONTINUE                                                            3720
         AG_TITLE='IBMW'                                                  3720
         AG_MODULE=MODULE                                                 3720
         AG_MARK='V00'                                                    3720
         CALL AGSPUSH                                                     3720
         AG_MODULE=MODULE                                                 3720
C    *                                                                    3720
C    Geant MATERIAL : AIR ===> inherited arguments used <===              3721
         CALL AGSRESET                                                    3721
         AG_TITLE = 'AIR'                                                 3721
         AG_EXNAME = 'MATERIAL'                                           3721
         AG_PARLIST = 'NONE'                                              3721
         CALL AXMATERIAL                                                  3721
C    *                                                                    3721
C    Geant ATTRIBUTE : IBMW ===> SEEN=0 COLO=2 <===                       3721
         CALL AGSRESET                                                    3722
         AG_SEEN = 0                                                      3722
         AG_COLO = 2                                                      3722
         AG_TITLE = 'IBMW'                                                3722
         AG_EXNAME = 'ATTRIBUTE'                                          3722
         AG_PARLIST = 'SEEN_COLO'                                         3722
         CALL AXATTRIBUTE                                                 3722
C    *                                                                    3722
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN2 RMX1=ISCC_ROUT2 RMN2 = ISCC_  3722
C    RIN1 RMX2 = ISCC_ROUT1 DZ = ISCC_LENGTH/2.0 <===                     3722
         CALL AGSRESET                                                    3727
         AG_RMN1 = ISCC_RIN2                                              3727
         AG_RMX1 = ISCC_ROUT2                                             3727
         AG_RMN2 = ISCC_RIN1                                              3727
         AG_RMX2 = ISCC_ROUT1                                             3727
         AG_DZ = ISCC_LENGTH/2.0                                          3727
         AG_TITLE = 'CONE'                                                3727
         AG_EXNAME = 'SHAPE'                                              3727
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            3727
         CALL AXSHAPE                                                     3727
C    *                                                                    3727
C    use ISBG bank                                                        3729
         BPATH_ISBG='ISBG*'                                               3729
         IDNUM_ISBG(1)=0                                                  3729
         ISBG_LAYER=2                                                     3729
         CALL AGDGETP('ISTBGEO6','*',-999,'ISBG',NISBG_LAYER,             3729
     *   RE_ISBG_LAYER,BPATH_ISBG,IDNUM_ISBG,1,MAP_ISBG,NAMES_ISBG,       3729
     *   BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                3729
C    use ISRR bank                                                        3730
         BPATH_ISRR='ISRR*'                                               3730
         IDNUM_ISRR(1)=0                                                  3730
         ISRR_LAYER=2                                                     3730
         CALL AGDGETP('ISTBGEO6','*',-999,'ISRR',NISRR_LAYER,             3730
     *   RE_ISRR_LAYER,BPATH_ISRR,IDNUM_ISRR,1,MAP_ISRR,NAMES_ISRR,       3730
     *   BANK_ISRR,LEN_ISRR,LLEN_ISRR,LINK_ISRR,FLAG_ISRR)                3730
C    use ISCC bank                                                        3731
         BPATH_ISCC='ISCC*'                                               3731
         IDNUM_ISCC(1)=0                                                  3731
         ISCC_VERSION=1                                                   3731
         CALL AGDGETP('ISTBGEO6','*',-999,'ISCC',NISCC_VERSION,           3731
     *   RE_ISCC_VERSION,BPATH_ISCC,IDNUM_ISCC,1,MAP_ISCC,NAMES_ISCC,     3731
     *   BANK_ISCC,LEN_ISCC,LLEN_ISCC,LINK_ISCC,FLAG_ISCC)                3731
C    Create ISCO :                                                        3732
C    Call To Local Procedure ISCO                                         3732
         ASSIGN 5170 TO BLOCK_ISCO                                        3732
         GO TO  5150                                                      3732
5170     CONTINUE                                                         3732
C    *                                                                    3732
C    Geant POSITION : ISCO ===> X=0.0 Y=0.0 Z = 0.0 ALPHAX = 180 <===     3736
         CALL AGSRESET                                                    3736
         AG_X = 0.0                                                       3736
         AG_Y = 0.0                                                       3736
         AG_Z = 0.0                                                       3736
         AG_ALPHAN=AG_ALPHAN+1                                            3736
         AG_ALPHAK(AG_ALPHAN)=1                                           3736
         AG_ALPHAL(AG_ALPHAN)=180                                         3736
         AG_TITLE = 'ISCO'                                                3736
         AG_EXNAME = 'POSITION'                                           3736
         AG_PARLIST = 'X_Y_Z_ALPHAX'                                      3736
         CALL AXPOSITION                                                  3736
C    *                                                                    3736
5081  CALL AGSPOPB                                                        3738
      GO TO BLOCK_IBMW, (5080 ,5090)                                      3738
C End of Local Procedure                                                  3738
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              3741
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             3741
5110  CONTINUE                                                            3741
         AG_TITLE='IBAM'                                                  3741
         AG_MODULE=MODULE                                                 3741
         AG_MARK='V00'                                                    3741
         CALL AGSPUSH                                                     3741
         AG_MODULE=MODULE                                                 3741
C    *                                                                    3741
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=2 <===                       3742
         CALL AGSRESET                                                    3742
         AG_SEEN = 0                                                      3742
         AG_COLO = 2                                                      3742
         AG_TITLE = 'IBAM'                                                3742
         AG_EXNAME = 'ATTRIBUTE'                                          3742
         AG_PARLIST = 'SEEN_COLO'                                         3742
         CALL AXATTRIBUTE                                                 3742
C    *                                                                    3742
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_LADDERTHK/2.  3746
C    0 DZ = ISBG_LENGTH/2.0 <===                                          3746
         CALL AGSRESET                                                    3746
         AG_DX = ISBG_LADDERWIDTH/2.0                                     3746
         AG_DY = ISBG_LADDERTHK/2.0                                       3746
         AG_DZ = ISBG_LENGTH/2.0                                          3746
         AG_TITLE = 'BOX'                                                 3746
         AG_EXNAME = 'SHAPE'                                              3746
         AG_PARLIST = 'DX_DY_DZ'                                          3746
         CALL AXSHAPE                                                     3746
C    *                                                                    3746
C    use ISHY bank                                                        3748
         BPATH_ISHY='ISHY*'                                               3748
         IDNUM_ISHY(1)=0                                                  3748
         ISHY_VERSION=1                                                   3748
         CALL AGDGETP('ISTBGEO6','*',-999,'ISHY',NISHY_VERSION,           3748
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     3748
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                3748
C    Create ISKH :                                                        3749
C    Call To Local Procedure ISKH                                         3749
         ASSIGN 5190 TO BLOCK_ISKH                                        3749
         GO TO  5180                                                      3749
5190     CONTINUE                                                         3749
C    *                                                                    3749
C    Create ISCL :                                                        3750
C    Call To Local Procedure ISCL                                         3750
         ASSIGN 5210 TO BLOCK_ISCL                                        3750
         GO TO  5200                                                      3750
5210     CONTINUE                                                         3750
C    *                                                                    3750
C    Create IBLM :                                                        3751
C    Call To Local Procedure IBLM                                         3751
         ASSIGN 5230 TO BLOCK_IBLM                                        3751
         GO TO  5220                                                      3751
5230     CONTINUE                                                         3751
C    *                                                                    3751
C    *                                                                    3752
         NU=1                                                             3752
            GO TO 5243                                                    3752
5241        NU=NU+1                                                       3752
5243        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5242                           3752
* --    IST modules
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -ISBG_LENGTH/2.0+ISBG  3756
C       _SENSORWIDTH*(NU-0.5) <===                                        3756
            CALL AGSRESET                                                 3756
            AG_X = 0.0                                                    3756
            AG_Y = 0.0                                                    3756
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3756
            AG_TITLE = 'IBLM'                                             3756
            AG_EXNAME = 'POSITION'                                        3756
            AG_PARLIST = 'X_Y_Z'                                          3756
            CALL AXPOSITION                                               3756
C       *                                                                 3756
* --    Dummy readout cables (Kapton+Copper) stacked on top of modules
* --    Note that the first part of the cable (the hybrid) is already part of the module
* --    daisy chain cables as: 5 sensors + 5 sensors             (for layer 2)
* --                           5 sensors + 5 sensors + 3 sensors (for layer 3)
C       Check NU>5                                                        3761
            IF (NU.GT.5) THEN                                             3761
C       Check ISBG_LAYER = 3                                              3762
            IF (ISBG_LAYER .EQ. 3) THEN                                   3762
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK/2.0  3765
C       ) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===             3765
            CALL AGSRESET                                                 3765
            AG_X = 0.0                                                    3765
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK/2.0)                         3765
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3765
            AG_TITLE = 'ISKH'                                             3765
            AG_EXNAME = 'POSITION'                                        3765
            AG_PARLIST = 'X_Y_Z'                                          3765
            CALL AXPOSITION                                               3765
C       *                                                                 3765
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  3765
C       U_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===    3765
            CALL AGSRESET                                                 3768
            AG_X = 0.0                                                    3768
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)                3768
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3768
            AG_TITLE = 'ISCL'                                             3768
            AG_EXNAME = 'POSITION'                                        3768
            AG_PARLIST = 'X_Y_Z'                                          3768
            CALL AXPOSITION                                               3768
C       *                                                                 3768
            ENDIF                                                         3768
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK/2.  3772
C       0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===            3772
            CALL AGSRESET                                                 3772
            AG_X = 0.0                                                    3772
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK/2.0)                        3772
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3772
            AG_TITLE = 'ISKH'                                             3772
            AG_EXNAME = 'POSITION'                                        3772
            AG_PARLIST = 'X_Y_Z'                                          3772
            CALL AXPOSITION                                               3772
C       *                                                                 3772
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  3772
C       CU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5) <===   3772
            CALL AGSRESET                                                 3775
            AG_X = 0.0                                                    3775
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK/2.0)               3775
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3775
            AG_TITLE = 'ISCL'                                             3775
            AG_EXNAME = 'POSITION'                                        3775
            AG_PARLIST = 'X_Y_Z'                                          3775
            CALL AXPOSITION                                               3775
C       *                                                                 3775
            ENDIF                                                         3775
C       Check NU>10                                                       3777
            IF (NU.GT.10) THEN                                            3777
C       Check ISBG_LAYER = 3                                              3778
            IF (ISBG_LAYER .EQ. 3) THEN                                   3778
C       Geant POSITION : ISKH ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  3781
C       U_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.  3781
C       5) <===                                                           3781
            CALL AGSRESET                                                 3781
            AG_X = 0.0                                                    3781
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)       3781
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3781
            AG_TITLE = 'ISKH'                                             3781
            AG_EXNAME = 'POSITION'                                        3781
            AG_PARLIST = 'X_Y_Z'                                          3781
            CALL AXPOSITION                                               3781
C       *                                                                 3781
C       Geant POSITION : ISCL ===> X=0.0 Y=1.0*(MOD_THK/2.0+ISHY_THK+ISC  3781
C       U_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWID  3781
C       TH*(NU-0.5) <===                                                  3781
            CALL AGSRESET                                                 3784
            AG_X = 0.0                                                    3784
            AG_Y = 1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/  3784
     *      2.0)                                                          3784
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3784
            AG_TITLE = 'ISCL'                                             3784
            AG_EXNAME = 'POSITION'                                        3784
            AG_PARLIST = 'X_Y_Z'                                          3784
            CALL AXPOSITION                                               3784
C       *                                                                 3784
            ENDIF                                                         3784
C       Geant POSITION : ISKH ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  3788
C       CU_THK+ISHY_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0  3788
C       .5) <===                                                          3788
            CALL AGSRESET                                                 3788
            AG_X = 0.0                                                    3788
            AG_Y = -1.0*(MOD_THK/2.0+ISHY_THK+ISCU_THK+ISHY_THK/2.0)      3788
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3788
            AG_TITLE = 'ISKH'                                             3788
            AG_EXNAME = 'POSITION'                                        3788
            AG_PARLIST = 'X_Y_Z'                                          3788
            CALL AXPOSITION                                               3788
C       *                                                                 3788
C       Geant POSITION : ISCL ===> X=0.0 Y=-1.0*(MOD_THK/2.0+ISHY_THK+IS  3788
C       CU_THK+ISHY_THK+ISCU_THK/2.0) Z = -ISBG_LENGTH/2.0+ISBG_SENSORWI  3788
C       DTH*(NU-0.5) <===                                                 3788
            CALL AGSRESET                                                 3791
            AG_X = 0.0                                                    3791
            AG_Y = -1.0*(MOD_THK/                                         3791
     *      2.0+ISHY_THK+ISCU_THK+ISHY_THK+ISCU_THK/2.0)                  3791
            AG_Z = -ISBG_LENGTH/2.0+ISBG_SENSORWIDTH*(NU-0.5)             3791
            AG_TITLE = 'ISCL'                                             3791
            AG_EXNAME = 'POSITION'                                        3791
            AG_PARLIST = 'X_Y_Z'                                          3791
            CALL AXPOSITION                                               3791
C       *                                                                 3791
            ENDIF                                                         3791
         GO TO 5241                                                       3794
5242     CONTINUE                                                         3794
5111  CALL AGSPOPB                                                        3796
      GO TO BLOCK_IBAM, (5110 ,5120)                                      3796
C End of Local Procedure                                                  3796
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              3799
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               3799
5220  CONTINUE                                                            3799
         AG_TITLE='IBLM'                                                  3799
         AG_MODULE=MODULE                                                 3799
         AG_MARK='V00'                                                    3799
         CALL AGSPUSH                                                     3799
         AG_MODULE=MODULE                                                 3799
C    *                                                                    3799
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=2 SERIAL=ISTLAYER <===       3800
         CALL AGSRESET                                                    3800
         AG_SEEN = 0                                                      3800
         AG_COLO = 2                                                      3800
         AG_SERIAL = ISTLAYER                                             3800
         AG_TITLE = 'IBLM'                                                3800
         AG_EXNAME = 'ATTRIBUTE'                                          3800
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3800
         CALL AXATTRIBUTE                                                 3800
C    *                                                                    3800
C    Geant SHAPE : BOX ===> DX=ISBG_LADDERWIDTH/2.0 DY=ISBG_SENSATHK/2.0  3804
C     DZ = ISBG_SENSORLNGTH/2.0 <===                                      3804
         CALL AGSRESET                                                    3804
         AG_DX = ISBG_LADDERWIDTH/2.0                                     3804
         AG_DY = ISBG_SENSATHK/2.0                                        3804
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     3804
         AG_TITLE = 'BOX'                                                 3804
         AG_EXNAME = 'SHAPE'                                              3804
         AG_PARLIST = 'DX_DY_DZ'                                          3804
         CALL AXSHAPE                                                     3804
C    *                                                                    3804
* -- Start stacking all the parts of the module
* -- Note that the module are mirror symmetric wrt the x-z plane
* -- with exception of the readout chips (minimize average material!)
* -- Carbon foam
C    use ISAN bank                                                        3811
         BPATH_ISAN='ISAN*'                                               3811
         IDNUM_ISAN(1)=0                                                  3811
         ISAN_VERSION=1                                                   3811
         CALL AGDGETP('ISTBGEO6','*',-999,'ISAN',NISAN_VERSION,           3811
     *   RE_ISAN_VERSION,BPATH_ISAN,IDNUM_ISAN,1,MAP_ISAN,NAMES_ISAN,     3811
     *   BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                3811
C    Create ISTP :                                                        3812
C    Call To Local Procedure ISTP                                         3812
         ASSIGN 5260 TO BLOCK_ISTP                                        3812
         GO TO  5250                                                      3812
5260     CONTINUE                                                         3812
C    *                                                                    3812
C    Geant POSITION : ISTP ===> X=0.0 Y=0.0 Z = 0.0 <===                  3815
         CALL AGSRESET                                                    3815
         AG_X = 0.0                                                       3815
         AG_Y = 0.0                                                       3815
         AG_Z = 0.0                                                       3815
         AG_TITLE = 'ISTP'                                                3815
         AG_EXNAME = 'POSITION'                                           3815
         AG_PARLIST = 'X_Y_Z'                                             3815
         CALL AXPOSITION                                                  3815
C    *                                                                    3815
* -- Glue layers between foam and silicon
C    use ISGA bank                                                        3818
         BPATH_ISGA='ISGA*'                                               3818
         IDNUM_ISGA(1)=0                                                  3818
         ISGA_VERSION=1                                                   3818
         CALL AGDGETP('ISTBGEO6','*',-999,'ISGA',NISGA_VERSION,           3818
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     3818
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                3818
C    Create ISXA :                                                        3819
C    Call To Local Procedure ISXA                                         3819
         ASSIGN 5280 TO BLOCK_ISXA                                        3819
         GO TO  5270                                                      3819
5280     CONTINUE                                                         3819
C    *                                                                    3819
C    Check ISBG_LAYER = 3                                                 3820
         IF (ISBG_LAYER .EQ. 3) THEN                                      3820
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK/2.0 Z   3823
C    = 0.0 <===                                                           3823
         CALL AGSRESET                                                    3823
         AG_X = 0.0                                                       3823
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK/2.0                             3823
         AG_Z = 0.0                                                       3823
         AG_TITLE = 'ISXA'                                                3823
         AG_EXNAME = 'POSITION'                                           3823
         AG_PARLIST = 'X_Y_Z'                                             3823
         CALL AXPOSITION                                                  3823
C    *                                                                    3823
         ENDIF                                                            3823
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK/2.0 Z  3827
C     = 0.0 <===                                                          3827
         CALL AGSRESET                                                    3827
         AG_X = 0.0                                                       3827
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK/2.0                            3827
         AG_Z = 0.0                                                       3827
         AG_TITLE = 'ISXA'                                                3827
         AG_EXNAME = 'POSITION'                                           3827
         AG_PARLIST = 'X_Y_Z'                                             3827
         CALL AXPOSITION                                                  3827
C    *                                                                    3827
* -- Silicon Sensors
C    Create IBSS :                                                        3830
C    Call To Local Procedure IBSS                                         3830
         ASSIGN 5300 TO BLOCK_IBSS                                        3830
         GO TO  5290                                                      3830
5300     CONTINUE                                                         3830
C    *                                                                    3830
C    Check ISBG_LAYER = 3                                                 3831
         IF (ISBG_LAYER .EQ. 3) THEN                                      3831
C    Geant POSITION : IBSS ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3834
C    ENSORTHK/2.0 Z = 0.0 <===                                            3834
         CALL AGSRESET                                                    3834
         AG_X = 0.0                                                       3834
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK/2.0              3834
         AG_Z = 0.0                                                       3834
         AG_TITLE = 'IBSS'                                                3834
         AG_EXNAME = 'POSITION'                                           3834
         AG_PARLIST = 'X_Y_Z'                                             3834
         CALL AXPOSITION                                                  3834
C    *                                                                    3834
         ENDIF                                                            3834
C    Geant POSITION : IBSS ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3839
C    SENSORTHK/2.0 Z = 0.0 ALPHAZ = 180 <===                              3839
         CALL AGSRESET                                                    3839
         AG_X = 0.0                                                       3839
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK/2.0             3839
         AG_Z = 0.0                                                       3839
         AG_ALPHAN=AG_ALPHAN+1                                            3839
         AG_ALPHAK(AG_ALPHAN)=3                                           3839
         AG_ALPHAL(AG_ALPHAN)=180                                         3839
         AG_TITLE = 'IBSS'                                                3839
         AG_EXNAME = 'POSITION'                                           3839
         AG_PARLIST = 'X_Y_Z_ALPHAZ'                                      3839
         CALL AXPOSITION                                                  3839
C    *                                                                    3839
* -- Glue layers between silicon and hybrid
C    use ISGA bank                                                        3842
         BPATH_ISGA='ISGA*'                                               3842
         IDNUM_ISGA(1)=0                                                  3842
         ISGA_VERSION=1                                                   3842
         CALL AGDGETP('ISTBGEO6','*',-999,'ISGA',NISGA_VERSION,           3842
     *   RE_ISGA_VERSION,BPATH_ISGA,IDNUM_ISGA,1,MAP_ISGA,NAMES_ISGA,     3842
     *   BANK_ISGA,LEN_ISGA,LLEN_ISGA,LINK_ISGA,FLAG_ISGA)                3842
C    Create ISXA :                                                        3843
C    Call To Local Procedure ISXA                                         3843
         ASSIGN 5310 TO BLOCK_ISXA                                        3843
         GO TO  5270                                                      3843
5310     CONTINUE                                                         3843
C    *                                                                    3843
C    Check ISBG_LAYER = 3                                                 3844
         IF (ISBG_LAYER .EQ. 3) THEN                                      3844
C    Geant POSITION : ISXA ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3847
C    ENSORTHK+ISGA_THK/2.0 Z = 0.0 <===                                   3847
         CALL AGSRESET                                                    3847
         AG_X = 0.0                                                       3847
         AG_Y = 1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK/2.0     3847
         AG_Z = 0.0                                                       3847
         AG_TITLE = 'ISXA'                                                3847
         AG_EXNAME = 'POSITION'                                           3847
         AG_PARLIST = 'X_Y_Z'                                             3847
         CALL AXPOSITION                                                  3847
C    *                                                                    3847
         ENDIF                                                            3847
C    Geant POSITION : ISXA ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3851
C    SENSORTHK-ISGA_THK/2.0 Z = 0.0 <===                                  3851
         CALL AGSRESET                                                    3851
         AG_X = 0.0                                                       3851
         AG_Y = -1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK/2.0    3851
         AG_Z = 0.0                                                       3851
         AG_TITLE = 'ISXA'                                                3851
         AG_EXNAME = 'POSITION'                                           3851
         AG_PARLIST = 'X_Y_Z'                                             3851
         CALL AXPOSITION                                                  3851
C    *                                                                    3851
* -- Kapton hybrids
C    use ISHY bank                                                        3854
         BPATH_ISHY='ISHY*'                                               3854
         IDNUM_ISHY(1)=0                                                  3854
         ISHY_VERSION=1                                                   3854
         CALL AGDGETP('ISTBGEO6','*',-999,'ISHY',NISHY_VERSION,           3854
     *   RE_ISHY_VERSION,BPATH_ISHY,IDNUM_ISHY,1,MAP_ISHY,NAMES_ISHY,     3854
     *   BANK_ISHY,LEN_ISHY,LLEN_ISHY,LINK_ISHY,FLAG_ISHY)                3854
C    Create ISKH :                                                        3855
C    Call To Local Procedure ISKH                                         3855
         ASSIGN 5320 TO BLOCK_ISKH                                        3855
         GO TO  5180                                                      3855
5320     CONTINUE                                                         3855
C    *                                                                    3855
C    Check ISBG_LAYER = 3                                                 3856
         IF (ISBG_LAYER .EQ. 3) THEN                                      3856
C    Geant POSITION : ISKH ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3859
C    ENSORTHK+ISGA_THK+ISHY_THK/2.0 Z = 0.0 <===                          3859
         CALL AGSRESET                                                    3859
         AG_X = 0.0                                                       3859
         AG_Y = 1.0*ISAN_THK/                                             3859
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK/2.0                3859
         AG_Z = 0.0                                                       3859
         AG_TITLE = 'ISKH'                                                3859
         AG_EXNAME = 'POSITION'                                           3859
         AG_PARLIST = 'X_Y_Z'                                             3859
         CALL AXPOSITION                                                  3859
C    *                                                                    3859
         ENDIF                                                            3859
C    Geant POSITION : ISKH ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3863
C    SENSORTHK-ISGA_THK-ISHY_THK/2.0 Z = 0.0 <===                         3863
         CALL AGSRESET                                                    3863
         AG_X = 0.0                                                       3863
         AG_Y = -1.0*ISAN_THK/                                            3863
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK/2.0                3863
         AG_Z = 0.0                                                       3863
         AG_TITLE = 'ISKH'                                                3863
         AG_EXNAME = 'POSITION'                                           3863
         AG_PARLIST = 'X_Y_Z'                                             3863
         CALL AXPOSITION                                                  3863
C    *                                                                    3863
* -- Copper on the hybrid, 10 um total for couple of 5um lines at 50% coverage + ground plane
C    use ISCU bank                                                        3866
         BPATH_ISCU='ISCU*'                                               3866
         IDNUM_ISCU(1)=0                                                  3866
         ISCU_VERSION=1                                                   3866
         CALL AGDGETP('ISTBGEO6','*',-999,'ISCU',NISCU_VERSION,           3866
     *   RE_ISCU_VERSION,BPATH_ISCU,IDNUM_ISCU,1,MAP_ISCU,NAMES_ISCU,     3866
     *   BANK_ISCU,LEN_ISCU,LLEN_ISCU,LINK_ISCU,FLAG_ISCU)                3866
C    Create ISCL :                                                        3867
C    Call To Local Procedure ISCL                                         3867
         ASSIGN 5330 TO BLOCK_ISCL                                        3867
         GO TO  5200                                                      3867
5330     CONTINUE                                                         3867
C    *                                                                    3867
C    Check ISBG_LAYER = 3                                                 3868
         IF (ISBG_LAYER .EQ. 3) THEN                                      3868
C    Geant POSITION : ISCL ===> X=0.0 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_S  3871
C    ENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0 Z = 0.0 <===                 3871
         CALL AGSRESET                                                    3871
         AG_X = 0.0                                                       3871
         AG_Y = 1.0*ISAN_THK/                                             3871
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK/2.0       3871
         AG_Z = 0.0                                                       3871
         AG_TITLE = 'ISCL'                                                3871
         AG_EXNAME = 'POSITION'                                           3871
         AG_PARLIST = 'X_Y_Z'                                             3871
         CALL AXPOSITION                                                  3871
C    *                                                                    3871
         ENDIF                                                            3871
C    Geant POSITION : ISCL ===> X=0.0 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_  3875
C    SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0 Z = 0.0 <===                3875
         CALL AGSRESET                                                    3875
         AG_X = 0.0                                                       3875
         AG_Y = -1.0*ISAN_THK/                                            3875
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK/2.0       3875
         AG_Z = 0.0                                                       3875
         AG_TITLE = 'ISCL'                                                3875
         AG_EXNAME = 'POSITION'                                           3875
         AG_PARLIST = 'X_Y_Z'                                             3875
         CALL AXPOSITION                                                  3875
C    *                                                                    3875
* -- Glue layers between hybrid and chip
C    use ISGB bank                                                        3878
         BPATH_ISGB='ISGB*'                                               3878
         IDNUM_ISGB(1)=0                                                  3878
         ISGB_VERSION=1                                                   3878
         CALL AGDGETP('ISTBGEO6','*',-999,'ISGB',NISGB_VERSION,           3878
     *   RE_ISGB_VERSION,BPATH_ISGB,IDNUM_ISGB,1,MAP_ISGB,NAMES_ISGB,     3878
     *   BANK_ISGB,LEN_ISGB,LLEN_ISGB,LINK_ISGB,FLAG_ISGB)                3878
C    Create ISLB :                                                        3879
C    Call To Local Procedure ISLB                                         3879
         ASSIGN 5350 TO BLOCK_ISLB                                        3879
         GO TO  5340                                                      3879
5350     CONTINUE                                                         3879
C    *                                                                    3879
C    Check ISBG_LAYER = 3                                                 3880
         IF (ISBG_LAYER .EQ. 3) THEN                                      3880
C    Geant POSITION : ISLB ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  3883
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  3883
C    _THK+ISGB_THK/2.0 Z = 0.0 <===                                       3883
         CALL AGSRESET                                                    3883
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   3883
         AG_Y = 1.0*ISAN_THK/                                             3883
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          3883
     *   ISGB_THK/2.0                                                     3883
         AG_Z = 0.0                                                       3883
         AG_TITLE = 'ISLB'                                                3883
         AG_EXNAME = 'POSITION'                                           3883
         AG_PARLIST = 'X_Y_Z'                                             3883
         CALL AXPOSITION                                                  3883
C    *                                                                    3883
         ENDIF                                                            3883
C    Geant POSITION : ISLB ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  3887
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  3887
C    CU_THK-ISGB_THK/2.0 Z = 0.0 <===                                     3887
         CALL AGSRESET                                                    3887
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  3887
         AG_Y = -1.0*ISAN_THK/                                            3887
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          3887
     *   ISGB_THK/2.0                                                     3887
         AG_Z = 0.0                                                       3887
         AG_TITLE = 'ISLB'                                                3887
         AG_EXNAME = 'POSITION'                                           3887
         AG_PARLIST = 'X_Y_Z'                                             3887
         CALL AXPOSITION                                                  3887
C    *                                                                    3887
* -- Readout chips, put at 2mm from the edge of the sensor
C    use ISCG bank                                                        3890
         BPATH_ISCG='ISCG*'                                               3890
         IDNUM_ISCG(1)=0                                                  3890
         ISCG_VERSION=1                                                   3890
         CALL AGDGETP('ISTBGEO6','*',-999,'ISCG',NISCG_VERSION,           3890
     *   RE_ISCG_VERSION,BPATH_ISCG,IDNUM_ISCG,1,MAP_ISCG,NAMES_ISCG,     3890
     *   BANK_ISCG,LEN_ISCG,LLEN_ISCG,LINK_ISCG,FLAG_ISCG)                3890
C    Create ISSC :                                                        3891
C    Call To Local Procedure ISSC                                         3891
         ASSIGN 5370 TO BLOCK_ISSC                                        3891
         GO TO  5360                                                      3891
5370     CONTINUE                                                         3891
C    *                                                                    3891
C    Check ISBG_LAYER = 3                                                 3892
         IF (ISBG_LAYER .EQ. 3) THEN                                      3892
C    Geant POSITION : ISSC ===> X=1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.  3895
C    2 Y=1.0*ISAN_THK/2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU  3895
C    _THK+ISGB_THK+ISCG_THK/2.0 Z = 0.0 <===                              3895
         CALL AGSRESET                                                    3895
         AG_X = 1.0*ISBG_SENSORWIDTH/2.0-ISCG_W/2.0-0.2                   3895
         AG_Y = 1.0*ISAN_THK/                                             3895
     *   2.0+ISGA_THK+ISBG_SENSORTHK+ISGA_THK+ISHY_THK+ISCU_THK+          3895
     *   ISGB_THK+ISCG_THK/2.0                                            3895
         AG_Z = 0.0                                                       3895
         AG_TITLE = 'ISSC'                                                3895
         AG_EXNAME = 'POSITION'                                           3895
         AG_PARLIST = 'X_Y_Z'                                             3895
         CALL AXPOSITION                                                  3895
C    *                                                                    3895
         ENDIF                                                            3895
C    Geant POSITION : ISSC ===> X=-1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0  3899
C    .2 Y=-1.0*ISAN_THK/2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-IS  3899
C    CU_THK-ISGB_THK-ISCG_THK/2.0 Z = 0.0 <===                            3899
         CALL AGSRESET                                                    3899
         AG_X = -1.0*ISBG_SENSORWIDTH/2.0+ISCG_W/2.0+0.2                  3899
         AG_Y = -1.0*ISAN_THK/                                            3899
     *   2.0-ISGA_THK-ISBG_SENSORTHK-ISGA_THK-ISHY_THK-ISCU_THK-          3899
     *   ISGB_THK-ISCG_THK/2.0                                            3899
         AG_Z = 0.0                                                       3899
         AG_TITLE = 'ISSC'                                                3899
         AG_EXNAME = 'POSITION'                                           3899
         AG_PARLIST = 'X_Y_Z'                                             3899
         CALL AXPOSITION                                                  3899
C    *                                                                    3899
5221  CALL AGSPOPB                                                        3899
      GO TO BLOCK_IBLM, (5220 ,5230)                                      3900
C End of Local Procedure                                                  3900
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              3903
C IBSS IS THE SILICON SENSOR                                              3903
5290  CONTINUE                                                            3903
         AG_TITLE='IBSS'                                                  3903
         AG_MODULE=MODULE                                                 3903
         AG_MARK='V00'                                                    3903
         CALL AGSPUSH                                                     3903
         AG_MODULE=MODULE                                                 3903
C    *                                                                    3903
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          3904
         CALL AGSRESET                                                    3904
         AG_TITLE = 'SILICON'                                             3904
         AG_EXNAME = 'MATERIAL'                                           3904
         AG_PARLIST = 'NONE'                                              3904
         CALL AXMATERIAL                                                  3904
C    *                                                                    3904
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         3904
         CALL AGSRESET                                                    3905
         AG_ISVOL = 1                                                     3905
         AG_TITLE = 'SENSITIVE'                                           3905
         AG_EXNAME = 'MATERIAL'                                           3905
         AG_PARLIST = 'ISVOL'                                             3905
         CALL AXMATERIAL                                                  3905
C    *                                                                    3905
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=38 <===                      3907
         CALL AGSRESET                                                    3907
         AG_SEEN = 1                                                      3907
         AG_COLO = 38                                                     3907
         AG_TITLE = 'IBSS'                                                3907
         AG_EXNAME = 'ATTRIBUTE'                                          3907
         AG_PARLIST = 'SEEN_COLO'                                         3907
         CALL AXATTRIBUTE                                                 3907
C    *                                                                    3907
C    Geant SHAPE : BOX ===> DX=ISBG_SENSORWIDTH/2.0 DY=ISBG_SENSORTHK/2.  3911
C    0 DZ = ISBG_SENSORLNGTH/2.0 <===                                     3911
         CALL AGSRESET                                                    3911
         AG_DX = ISBG_SENSORWIDTH/2.0                                     3911
         AG_DY = ISBG_SENSORTHK/2.0                                       3911
         AG_DZ = ISBG_SENSORLNGTH/2.0                                     3911
         AG_TITLE = 'BOX'                                                 3911
         AG_EXNAME = 'SHAPE'                                              3911
         AG_PARLIST = 'DX_DY_DZ'                                          3911
         CALL AXSHAPE                                                     3911
C    *                                                                    3911
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  3915
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  3915
C    ,0.001)                                                              3915
         AG_TITLE = 'IBSS'                                                3915
         AG_EXNAME = 'HITS'                                               3915
         AG_TYPE=AG_MAGIC                                                 3915
         CALL AGSDETV('IBSS')                                             3915
C    *                                                                    3915
         AG_PARLIST='Z'                                                   3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = AG_MAGIC                                              3915
         AG_BIN=.001                                                      3915
         AG_OPTION='S'                                                    3915
         AG_FHMIN = AG_MAGIC                                              3915
         AG_FHMAX = AG_MAGIC                                              3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='Y'                                                   3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = AG_MAGIC                                              3915
         AG_BIN=.001                                                      3915
         AG_FHMIN=AG_MAGIC                                                3915
         AG_FHMAX=AG_MAGIC                                                3915
         AG_OPTION='*'                                                    3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='X'                                                   3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = AG_MAGIC                                              3915
         AG_BIN=.001                                                      3915
         AG_FHMIN=AG_MAGIC                                                3915
         AG_FHMAX=AG_MAGIC                                                3915
         AG_OPTION='*'                                                    3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='PTOT'                                                3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = 16                                                    3915
         AG_BIN=AG_MAGIC                                                  3915
         AG_OPTION='*'                                                    3915
         AG_FHMIN = 0                                                     3915
         AG_FHMAX = 100                                                   3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='CX'                                                  3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = 10                                                    3915
         AG_BIN=AG_MAGIC                                                  3915
         AG_FHMIN=AG_MAGIC                                                3915
         AG_FHMAX=AG_MAGIC                                                3915
         AG_OPTION='*'                                                    3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='CY'                                                  3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = 10                                                    3915
         AG_BIN=AG_MAGIC                                                  3915
         AG_FHMIN=AG_MAGIC                                                3915
         AG_FHMAX=AG_MAGIC                                                3915
         AG_OPTION='*'                                                    3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='CZ'                                                  3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = 10                                                    3915
         AG_BIN=AG_MAGIC                                                  3915
         AG_FHMIN=AG_MAGIC                                                3915
         AG_FHMAX=AG_MAGIC                                                3915
         AG_OPTION='*'                                                    3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='SLENG'                                               3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = 16                                                    3915
         AG_BIN=AG_MAGIC                                                  3915
         AG_OPTION='*'                                                    3915
         AG_FHMIN = 0                                                     3915
         AG_FHMAX = 500                                                   3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='TOF'                                                 3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = 16                                                    3915
         AG_BIN=AG_MAGIC                                                  3915
         AG_OPTION='*'                                                    3915
         AG_FHMIN = 0                                                     3915
         AG_FHMAX = 1.E-6                                                 3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='STEP'                                                3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = AG_MAGIC                                              3915
         AG_BIN=.01                                                       3915
         AG_FHMIN=AG_MAGIC                                                3915
         AG_FHMAX=AG_MAGIC                                                3915
         AG_OPTION='*'                                                    3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         AG_PARLIST='ELOSS'                                               3915
         AG_TITLE = 'DETH'                                                3915
         AG_NBITS = 16                                                    3915
         AG_BIN=AG_MAGIC                                                  3915
         AG_OPTION='*'                                                    3915
         AG_FHMIN = 0                                                     3915
         AG_FHMAX = 0.001                                                 3915
         CALL AGSDETH (0)                                                 3915
C    *                                                                    3915
         CALL AGSDETU('IBSS')                                             3915
C    *                                                                    3915
5291  CALL AGSPOPB                                                        3917
      GO TO BLOCK_IBSS, (5290 ,5300)                                      3917
C End of Local Procedure                                                  3917
* -----------------------------------------------------------------------------
C Begin Local Procedure ISKH                                              3920
C ISKH IS THE KAPTON HYBRID                                               3920
5180  CONTINUE                                                            3920
         AG_TITLE='ISKH'                                                  3920
         AG_MODULE=MODULE                                                 3920
         AG_MARK='V00'                                                    3920
         CALL AGSPUSH                                                     3920
         AG_MODULE=MODULE                                                 3920
C    *                                                                    3920
C    Geant ATTRIBUTE : ISKH ===> SEEN=1 COLO=42 <===                      3921
         CALL AGSRESET                                                    3921
         AG_SEEN = 1                                                      3921
         AG_COLO = 42                                                     3921
         AG_TITLE = 'ISKH'                                                3921
         AG_EXNAME = 'ATTRIBUTE'                                          3921
         AG_PARLIST = 'SEEN_COLO'                                         3921
         CALL AXATTRIBUTE                                                 3921
C    *                                                                    3921
C    KAPTON C22-H10-N2-O4                                                 3923
C    Geant COMPONENT : C ===> A=12 Z=6 W=22.0*12.0/366.0 <===             3924
         CALL AGSRESET                                                    3924
         AG_A = 12                                                        3924
         AG_Z = 6                                                         3924
         AG_W = 22.0*12.0/366.0                                           3924
         AG_TITLE = 'C'                                                   3924
         AG_EXNAME = 'COMPONENT'                                          3924
         AG_PARLIST = 'A_Z_W'                                             3924
         CALL AXCOMPONENT                                                 3924
C    *                                                                    3924
C    Geant COMPONENT : H ===> A=1 Z=1 W=10.0*1.0/366.0 <===               3924
         CALL AGSRESET                                                    3925
         AG_A = 1                                                         3925
         AG_Z = 1                                                         3925
         AG_W = 10.0*1.0/366.0                                            3925
         AG_TITLE = 'H'                                                   3925
         AG_EXNAME = 'COMPONENT'                                          3925
         AG_PARLIST = 'A_Z_W'                                             3925
         CALL AXCOMPONENT                                                 3925
C    *                                                                    3925
C    Geant COMPONENT : N ===> A=14 Z=7 W=2.0*14.0/366.0 <===              3925
         CALL AGSRESET                                                    3926
         AG_A = 14                                                        3926
         AG_Z = 7                                                         3926
         AG_W = 2.0*14.0/366.0                                            3926
         AG_TITLE = 'N'                                                   3926
         AG_EXNAME = 'COMPONENT'                                          3926
         AG_PARLIST = 'A_Z_W'                                             3926
         CALL AXCOMPONENT                                                 3926
C    *                                                                    3926
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/366.0 <===              3926
         CALL AGSRESET                                                    3927
         AG_A = 16                                                        3927
         AG_Z = 8                                                         3927
         AG_W = 4.0*16.0/366.0                                            3927
         AG_TITLE = 'O'                                                   3927
         AG_EXNAME = 'COMPONENT'                                          3927
         AG_PARLIST = 'A_Z_W'                                             3927
         CALL AXCOMPONENT                                                 3927
C    *                                                                    3927
C    Geant MIXTURE : KAPTON ===> DENS=1.42 <===                           3927
         CALL AGSRESET                                                    3928
         AG_DENS = 1.42                                                   3928
         AG_TITLE = 'KAPTON'                                              3928
         AG_EXNAME = 'MIXTURE'                                            3928
         AG_PARLIST = 'DENS'                                              3928
         CALL AXMIXTURE                                                   3928
C    *                                                                    3928
C    Geant SHAPE : BOX ===> DX=ISHY_H/2.0 DY=ISHY_THK/2.0 DZ = ISHY_W/2.  3932
C    0 <===                                                               3932
         CALL AGSRESET                                                    3932
         AG_DX = ISHY_H/2.0                                               3932
         AG_DY = ISHY_THK/2.0                                             3932
         AG_DZ = ISHY_W/2.0                                               3932
         AG_TITLE = 'BOX'                                                 3932
         AG_EXNAME = 'SHAPE'                                              3932
         AG_PARLIST = 'DX_DY_DZ'                                          3932
         CALL AXSHAPE                                                     3932
C    *                                                                    3932
5181  CALL AGSPOPB                                                        3934
      GO TO BLOCK_ISKH, (5180 ,5190,5320)                                 3934
C End of Local Procedure                                                  3934
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCL                                              3937
C ISCL IS THE COPPER LAYER ON THE KAPTON HYBRID                           3937
5200  CONTINUE                                                            3937
         AG_TITLE='ISCL'                                                  3937
         AG_MODULE=MODULE                                                 3937
         AG_MARK='V00'                                                    3937
         CALL AGSPUSH                                                     3937
         AG_MODULE=MODULE                                                 3937
C    *                                                                    3937
C    Geant ATTRIBUTE : ISCL ===> SEEN=1 COLO=46 <===                      3938
         CALL AGSRESET                                                    3938
         AG_SEEN = 1                                                      3938
         AG_COLO = 46                                                     3938
         AG_TITLE = 'ISCL'                                                3938
         AG_EXNAME = 'ATTRIBUTE'                                          3938
         AG_PARLIST = 'SEEN_COLO'                                         3938
         CALL AXATTRIBUTE                                                 3938
C    *                                                                    3938
C    Geant MATERIAL : COPPER ===> inherited arguments used <===           3940
         CALL AGSRESET                                                    3940
         AG_TITLE = 'COPPER'                                              3940
         AG_EXNAME = 'MATERIAL'                                           3940
         AG_PARLIST = 'NONE'                                              3940
         CALL AXMATERIAL                                                  3940
C    *                                                                    3940
C    Geant SHAPE : BOX ===> DX=ISCU_H/2.0 DY=ISCU_THK/2.0 DZ = ISCU_W/2.  3944
C    0 <===                                                               3944
         CALL AGSRESET                                                    3944
         AG_DX = ISCU_H/2.0                                               3944
         AG_DY = ISCU_THK/2.0                                             3944
         AG_DZ = ISCU_W/2.0                                               3944
         AG_TITLE = 'BOX'                                                 3944
         AG_EXNAME = 'SHAPE'                                              3944
         AG_PARLIST = 'DX_DY_DZ'                                          3944
         CALL AXSHAPE                                                     3944
C    *                                                                    3944
5201  CALL AGSPOPB                                                        3946
      GO TO BLOCK_ISCL, (5200 ,5210,5330)                                 3946
C End of Local Procedure                                                  3946
* -----------------------------------------------------------------------------
C Begin Local Procedure ISTP                                              3949
C ISTP IS THE CARBON FOAM                                                 3949
5250  CONTINUE                                                            3949
         AG_TITLE='ISTP'                                                  3949
         AG_MODULE=MODULE                                                 3949
         AG_MARK='V00'                                                    3949
         CALL AGSPUSH                                                     3949
         AG_MODULE=MODULE                                                 3949
C    *                                                                    3949
C    Geant ATTRIBUTE : ISTP ===> SEEN=1 COLO=1 <===                       3950
         CALL AGSRESET                                                    3950
         AG_SEEN = 1                                                      3950
         AG_COLO = 1                                                      3950
         AG_TITLE = 'ISTP'                                                3950
         AG_EXNAME = 'ATTRIBUTE'                                          3950
         AG_PARLIST = 'SEEN_COLO'                                         3950
         CALL AXATTRIBUTE                                                 3950
C    *                                                                    3950
C    CARBON FOAM DENSITY 0.24                                             3952
C    0.1 COMES FROM 4-5% OF CARBON DENSITY FOR CARBON FOAM                3953
C    WHICH IS FOR A 4MM THICK SUPPORT CORE                                3954
C    0.24 IS WHEN WE ARTICIALLY INCREASE THE DENSITY TO SQUEEZE INTO 1.6  3955
C    86 MM                                                                3955
C    BETWEEN THE SENSORSTHIS IS JUST TO KEEP THE SAME GEOMETRY AS         3956
C    AS BEFORE                                                            3957
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        3958
         CALL AGSRESET                                                    3958
         AG_A = 12                                                        3958
         AG_Z = 6                                                         3958
         AG_W = 0.05                                                      3958
         AG_TITLE = 'C'                                                   3958
         AG_EXNAME = 'COMPONENT'                                          3958
         AG_PARLIST = 'A_Z_W'                                             3958
         CALL AXCOMPONENT                                                 3958
C    *                                                                    3958
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        3958
         CALL AGSRESET                                                    3959
         AG_A = 14                                                        3959
         AG_Z = 7                                                         3959
         AG_W = 0.95                                                      3959
         AG_TITLE = 'N'                                                   3959
         AG_EXNAME = 'COMPONENT'                                          3959
         AG_PARLIST = 'A_Z_W'                                             3959
         CALL AXCOMPONENT                                                 3959
C    *                                                                    3959
C    Geant MIXTURE : CFOAM ===> DENS=0.24 <===                            3959
         CALL AGSRESET                                                    3960
         AG_DENS = 0.24                                                   3960
         AG_TITLE = 'CFOAM'                                               3960
         AG_EXNAME = 'MIXTURE'                                            3960
         AG_PARLIST = 'DENS'                                              3960
         CALL AXMIXTURE                                                   3960
C    *                                                                    3960
C    Geant SHAPE : BOX ===> DX=ISAN_H/2.0 DY=ISAN_THK/2.0 DZ = ISAN_W/2.  3964
C    0 <===                                                               3964
         CALL AGSRESET                                                    3964
         AG_DX = ISAN_H/2.0                                               3964
         AG_DY = ISAN_THK/2.0                                             3964
         AG_DZ = ISAN_W/2.0                                               3964
         AG_TITLE = 'BOX'                                                 3964
         AG_EXNAME = 'SHAPE'                                              3964
         AG_PARLIST = 'DX_DY_DZ'                                          3964
         CALL AXSHAPE                                                     3964
C    *                                                                    3964
5251  CALL AGSPOPB                                                        3966
      GO TO BLOCK_ISTP, (5250 ,5260)                                      3966
C End of Local Procedure                                                  3966
* -----------------------------------------------------------------------------
C Begin Local Procedure ISSC                                              3969
C ISSC IS THE READOUT CHIP                                                3969
5360  CONTINUE                                                            3969
         AG_TITLE='ISSC'                                                  3969
         AG_MODULE=MODULE                                                 3969
         AG_MARK='V00'                                                    3969
         CALL AGSPUSH                                                     3969
         AG_MODULE=MODULE                                                 3969
C    *                                                                    3969
C    Geant ATTRIBUTE : ISSC ===> SEEN=1 COLO=37 <===                      3970
         CALL AGSRESET                                                    3970
         AG_SEEN = 1                                                      3970
         AG_COLO = 37                                                     3970
         AG_TITLE = 'ISSC'                                                3970
         AG_EXNAME = 'ATTRIBUTE'                                          3970
         AG_PARLIST = 'SEEN_COLO'                                         3970
         CALL AXATTRIBUTE                                                 3970
C    *                                                                    3970
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          3972
         CALL AGSRESET                                                    3972
         AG_TITLE = 'SILICON'                                             3972
         AG_EXNAME = 'MATERIAL'                                           3972
         AG_PARLIST = 'NONE'                                              3972
         CALL AXMATERIAL                                                  3972
C    *                                                                    3972
C    Geant SHAPE : BOX ===> DX=ISCG_W/2.0 DY=ISCG_THK/2.0 DZ = ISCG_H/2.  3976
C    0 <===                                                               3976
         CALL AGSRESET                                                    3976
         AG_DX = ISCG_W/2.0                                               3976
         AG_DY = ISCG_THK/2.0                                             3976
         AG_DZ = ISCG_H/2.0                                               3976
         AG_TITLE = 'BOX'                                                 3976
         AG_EXNAME = 'SHAPE'                                              3976
         AG_PARLIST = 'DX_DY_DZ'                                          3976
         CALL AXSHAPE                                                     3976
C    *                                                                    3976
5361  CALL AGSPOPB                                                        3978
      GO TO BLOCK_ISSC, (5360 ,5370)                                      3978
C End of Local Procedure                                                  3978
* -----------------------------------------------------------------------------
C Begin Local Procedure ISXA                                              3981
C ISXA IS THE LARGE GLUE LAYER BETWEEN CARBON FOAM AND SENSOR (AND SENSO  3981
C R AND HYBRID)                                                           3981
5270  CONTINUE                                                            3981
         AG_TITLE='ISXA'                                                  3981
         AG_MODULE=MODULE                                                 3981
         AG_MARK='V00'                                                    3981
         CALL AGSPUSH                                                     3981
         AG_MODULE=MODULE                                                 3981
C    *                                                                    3981
C    Geant ATTRIBUTE : ISXA ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      3982
         CALL AGSRESET                                                    3982
         AG_SEEN = 1                                                      3982
         AG_COLO = 11                                                     3982
         AG_SERIAL = ISTLAYER                                             3982
         AG_TITLE = 'ISXA'                                                3982
         AG_EXNAME = 'ATTRIBUTE'                                          3982
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3982
         CALL AXATTRIBUTE                                                 3982
C    *                                                                    3982
C    EPOXY C8-H14-O4                                                      3984
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              3985
         CALL AGSRESET                                                    3985
         AG_A = 12                                                        3985
         AG_Z = 6                                                         3985
         AG_W = 8.0*12.0/174.0                                            3985
         AG_TITLE = 'C'                                                   3985
         AG_EXNAME = 'COMPONENT'                                          3985
         AG_PARLIST = 'A_Z_W'                                             3985
         CALL AXCOMPONENT                                                 3985
C    *                                                                    3985
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               3985
         CALL AGSRESET                                                    3986
         AG_A = 1                                                         3986
         AG_Z = 1                                                         3986
         AG_W = 14.0*1.0/174.0                                            3986
         AG_TITLE = 'H'                                                   3986
         AG_EXNAME = 'COMPONENT'                                          3986
         AG_PARLIST = 'A_Z_W'                                             3986
         CALL AXCOMPONENT                                                 3986
C    *                                                                    3986
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              3986
         CALL AGSRESET                                                    3987
         AG_A = 16                                                        3987
         AG_Z = 8                                                         3987
         AG_W = 4.0*16.0/174.0                                            3987
         AG_TITLE = 'O'                                                   3987
         AG_EXNAME = 'COMPONENT'                                          3987
         AG_PARLIST = 'A_Z_W'                                             3987
         CALL AXCOMPONENT                                                 3987
C    *                                                                    3987
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             3987
         CALL AGSRESET                                                    3988
         AG_DENS = 1.3                                                    3988
         AG_TITLE = 'EPOXY'                                               3988
         AG_EXNAME = 'MIXTURE'                                            3988
         AG_PARLIST = 'DENS'                                              3988
         CALL AXMIXTURE                                                   3988
C    *                                                                    3988
C    Geant SHAPE : BOX ===> DX=ISGA_W/2.0 DY=ISGA_THK/2.0 DZ = ISGA_H/2.  3992
C    0 <===                                                               3992
         CALL AGSRESET                                                    3992
         AG_DX = ISGA_W/2.0                                               3992
         AG_DY = ISGA_THK/2.0                                             3992
         AG_DZ = ISGA_H/2.0                                               3992
         AG_TITLE = 'BOX'                                                 3992
         AG_EXNAME = 'SHAPE'                                              3992
         AG_PARLIST = 'DX_DY_DZ'                                          3992
         CALL AXSHAPE                                                     3992
C    *                                                                    3992
5271  CALL AGSPOPB                                                        3994
      GO TO BLOCK_ISXA, (5270 ,5280,5310)                                 3994
C End of Local Procedure                                                  3994
* -----------------------------------------------------------------------------
C Begin Local Procedure ISLB                                              3997
C ISLB IS THE SMALL GLUE LAYER BETWEEN HYBRID AND CHIP                    3997
5340  CONTINUE                                                            3997
         AG_TITLE='ISLB'                                                  3997
         AG_MODULE=MODULE                                                 3997
         AG_MARK='V00'                                                    3997
         CALL AGSPUSH                                                     3997
         AG_MODULE=MODULE                                                 3997
C    *                                                                    3997
C    Geant ATTRIBUTE : ISLB ===> SEEN=1 COLO=11 SERIAL=ISTLAYER <===      3998
         CALL AGSRESET                                                    3998
         AG_SEEN = 1                                                      3998
         AG_COLO = 11                                                     3998
         AG_SERIAL = ISTLAYER                                             3998
         AG_TITLE = 'ISLB'                                                3998
         AG_EXNAME = 'ATTRIBUTE'                                          3998
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  3998
         CALL AXATTRIBUTE                                                 3998
C    *                                                                    3998
C    EPOXY C8-H14-O4                                                      4000
C    Geant COMPONENT : C ===> A=12 Z=6 W=8.0*12.0/174.0 <===              4001
         CALL AGSRESET                                                    4001
         AG_A = 12                                                        4001
         AG_Z = 6                                                         4001
         AG_W = 8.0*12.0/174.0                                            4001
         AG_TITLE = 'C'                                                   4001
         AG_EXNAME = 'COMPONENT'                                          4001
         AG_PARLIST = 'A_Z_W'                                             4001
         CALL AXCOMPONENT                                                 4001
C    *                                                                    4001
C    Geant COMPONENT : H ===> A=1 Z=1 W=14.0*1.0/174.0 <===               4001
         CALL AGSRESET                                                    4002
         AG_A = 1                                                         4002
         AG_Z = 1                                                         4002
         AG_W = 14.0*1.0/174.0                                            4002
         AG_TITLE = 'H'                                                   4002
         AG_EXNAME = 'COMPONENT'                                          4002
         AG_PARLIST = 'A_Z_W'                                             4002
         CALL AXCOMPONENT                                                 4002
C    *                                                                    4002
C    Geant COMPONENT : O ===> A=16 Z=8 W=4.0*16.0/174.0 <===              4002
         CALL AGSRESET                                                    4003
         AG_A = 16                                                        4003
         AG_Z = 8                                                         4003
         AG_W = 4.0*16.0/174.0                                            4003
         AG_TITLE = 'O'                                                   4003
         AG_EXNAME = 'COMPONENT'                                          4003
         AG_PARLIST = 'A_Z_W'                                             4003
         CALL AXCOMPONENT                                                 4003
C    *                                                                    4003
C    Geant MIXTURE : EPOXY ===> DENS=1.3 <===                             4003
         CALL AGSRESET                                                    4004
         AG_DENS = 1.3                                                    4004
         AG_TITLE = 'EPOXY'                                               4004
         AG_EXNAME = 'MIXTURE'                                            4004
         AG_PARLIST = 'DENS'                                              4004
         CALL AXMIXTURE                                                   4004
C    *                                                                    4004
C    Geant SHAPE : BOX ===> DX=ISGB_W/2.0 DY=ISGB_THK/2.0 DZ = ISGB_H/2.  4008
C    0 <===                                                               4008
         CALL AGSRESET                                                    4008
         AG_DX = ISGB_W/2.0                                               4008
         AG_DY = ISGB_THK/2.0                                             4008
         AG_DZ = ISGB_H/2.0                                               4008
         AG_TITLE = 'BOX'                                                 4008
         AG_EXNAME = 'SHAPE'                                              4008
         AG_PARLIST = 'DX_DY_DZ'                                          4008
         CALL AXSHAPE                                                     4008
C    *                                                                    4008
5341  CALL AGSPOPB                                                        4010
      GO TO BLOCK_ISLB, (5340 ,5350)                                      4010
C End of Local Procedure                                                  4010
* -----------------------------------------------------------------------------
C Begin Local Procedure ISRI                                              4013
C ISRI IS THE SUPPORT RING FOR THE LAYERS                                 4013
5130  CONTINUE                                                            4013
         AG_TITLE='ISRI'                                                  4013
         AG_MODULE=MODULE                                                 4013
         AG_MARK='V00'                                                    4013
         CALL AGSPUSH                                                     4013
         AG_MODULE=MODULE                                                 4013
C    *                                                                    4013
C    Geant ATTRIBUTE : ISRA ===> SEEN=1 COLO=13 <===                      4014
         CALL AGSRESET                                                    4014
         AG_SEEN = 1                                                      4014
         AG_COLO = 13                                                     4014
         AG_TITLE = 'ISRA'                                                4014
         AG_EXNAME = 'ATTRIBUTE'                                          4014
         AG_PARLIST = 'SEEN_COLO'                                         4014
         CALL AXATTRIBUTE                                                 4014
C    *                                                                    4014
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        4016
         CALL AGSRESET                                                    4016
         AG_A = 12                                                        4016
         AG_Z = 6                                                         4016
         AG_W = 0.05                                                      4016
         AG_TITLE = 'C'                                                   4016
         AG_EXNAME = 'COMPONENT'                                          4016
         AG_PARLIST = 'A_Z_W'                                             4016
         CALL AXCOMPONENT                                                 4016
C    *                                                                    4016
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        4016
         CALL AGSRESET                                                    4017
         AG_A = 14                                                        4017
         AG_Z = 7                                                         4017
         AG_W = 0.95                                                      4017
         AG_TITLE = 'N'                                                   4017
         AG_EXNAME = 'COMPONENT'                                          4017
         AG_PARLIST = 'A_Z_W'                                             4017
         CALL AXCOMPONENT                                                 4017
C    *                                                                    4017
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            4017
         CALL AGSRESET                                                    4018
         AG_DENS = 0.10                                                   4018
         AG_TITLE = 'CFOAM'                                               4018
         AG_EXNAME = 'MIXTURE'                                            4018
         AG_PARLIST = 'DENS'                                              4018
         CALL AXMIXTURE                                                   4018
C    *                                                                    4018
C    Geant SHAPE : TUBE ===> RMIN=ISRR_RIN RMAX=ISRR_ROUT DZ = ISRR_LENG  4022
C    TH/2.0 <===                                                          4022
         CALL AGSRESET                                                    4022
         AG_RMIN = ISRR_RIN                                               4022
         AG_RMAX = ISRR_ROUT                                              4022
         AG_DZ = ISRR_LENGTH/2.0                                          4022
         AG_TITLE = 'TUBE'                                                4022
         AG_EXNAME = 'SHAPE'                                              4022
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      4022
         CALL AXSHAPE                                                     4022
C    *                                                                    4022
5131  CALL AGSPOPB                                                        4024
      GO TO BLOCK_ISRI, (5130 ,5140)                                      4024
C End of Local Procedure                                                  4024
* -----------------------------------------------------------------------------
C Begin Local Procedure ISCO                                              4027
C ISCO IS THE INTERCONNECT BETWEEN THE SUPPORT RINGS                      4027
5150  CONTINUE                                                            4027
         AG_TITLE='ISCO'                                                  4027
         AG_MODULE=MODULE                                                 4027
         AG_MARK='V00'                                                    4027
         CALL AGSPUSH                                                     4027
         AG_MODULE=MODULE                                                 4027
C    *                                                                    4027
C    Geant ATTRIBUTE : ISCO ===> SEEN=1 COLO=13 <===                      4028
         CALL AGSRESET                                                    4028
         AG_SEEN = 1                                                      4028
         AG_COLO = 13                                                     4028
         AG_TITLE = 'ISCO'                                                4028
         AG_EXNAME = 'ATTRIBUTE'                                          4028
         AG_PARLIST = 'SEEN_COLO'                                         4028
         CALL AXATTRIBUTE                                                 4028
C    *                                                                    4028
C    Geant COMPONENT : C ===> A=12 Z=6 W=0.05 <===                        4030
         CALL AGSRESET                                                    4030
         AG_A = 12                                                        4030
         AG_Z = 6                                                         4030
         AG_W = 0.05                                                      4030
         AG_TITLE = 'C'                                                   4030
         AG_EXNAME = 'COMPONENT'                                          4030
         AG_PARLIST = 'A_Z_W'                                             4030
         CALL AXCOMPONENT                                                 4030
C    *                                                                    4030
C    Geant COMPONENT : N ===> A=14 Z=7 W=0.95 <===                        4030
         CALL AGSRESET                                                    4031
         AG_A = 14                                                        4031
         AG_Z = 7                                                         4031
         AG_W = 0.95                                                      4031
         AG_TITLE = 'N'                                                   4031
         AG_EXNAME = 'COMPONENT'                                          4031
         AG_PARLIST = 'A_Z_W'                                             4031
         CALL AXCOMPONENT                                                 4031
C    *                                                                    4031
C    Geant MIXTURE : CFOAM ===> DENS=0.10 <===                            4031
         CALL AGSRESET                                                    4032
         AG_DENS = 0.10                                                   4032
         AG_TITLE = 'CFOAM'                                               4032
         AG_EXNAME = 'MIXTURE'                                            4032
         AG_PARLIST = 'DENS'                                              4032
         CALL AXMIXTURE                                                   4032
C    *                                                                    4032
C    Geant SHAPE : CONE ===> RMN1=ISCC_RIN1 RMX1=ISCC_ROUT1 RMN2 = ISCC_  4038
C    RIN2 RMX2 = ISCC_ROUT2 DZ = ISCC_LENGTH/2.0 <===                     4038
         CALL AGSRESET                                                    4038
         AG_RMN1 = ISCC_RIN1                                              4038
         AG_RMX1 = ISCC_ROUT1                                             4038
         AG_RMN2 = ISCC_RIN2                                              4038
         AG_RMX2 = ISCC_ROUT2                                             4038
         AG_DZ = ISCC_LENGTH/2.0                                          4038
         AG_TITLE = 'CONE'                                                4038
         AG_EXNAME = 'SHAPE'                                              4038
         AG_PARLIST = 'RMN1_RMX1_RMN2_RMX2_DZ'                            4038
         CALL AXSHAPE                                                     4038
C    *                                                                    4038
5151  CALL AGSPOPB                                                        4040
      GO TO BLOCK_ISCO, (5150 ,5160,5170)                                 4040
C End of Local Procedure                                                  4040
* -------------------------------------------------------
      END                                                                 4044
*
* ***************************************************************
* March 10,    2008: Gerrit van Nieuwenhuizen
* Very simple post CD0 geometry
* 24 ladders with 12 sensors each at Radius=14cm
* Just active silicon filling up the whole circle at R=14
* Added some inactive material to mimic total material budget
* Also 'fixed' some things with versioning (ISVR removed)
*
*
*****************************************************************
      SUBROUTINE ISTBGEO00                                                4056
C ISTBGEO00 IS THE SIMPLIFIED GEOMETRY OF THE INNER SILICON TRACKER       4056
      IMPLICIT NONE                                                       4056
      CHARACTER MODULE*20,MCOMMENT*80,BANK_TITLE*60                       4056
      DATA MODULE/'ISTBGEO00'/, BANK_TITLE/'*'/                           4056
      DATA MCOMMENT/'IS THE SIMPLIFIED GEOMETRY OF THE INNER SILICON TRA  4056
     *CKER'/                                                              4056
      LOGICAL FIRST                                                       4056
      DATA FIRST/.TRUE./                                                  4056
      SAVE FIRST                                                          4056
      INTEGER JUMPAD                                                      4056
      EXTERNAL JUMPAD                                                     4056
      INTEGER OK                                                          4056
      PARAMETER (OK=0)                                                    4056
      INTEGER AG_I,AG_J                                                   4056
      SAVE AG_I,AG_J                                                      4056
C CREATED 10 MAR 2008                                                     4056
      DATA AG_I/0/,AG_J/0/                                                4057
      CHARACTER*40 CREATED /'10 MAR 2008'/                                4057
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  4057
C AUTHOR GERRIT VAN NIEUWENHUIZEN                                         4057
      CHARACTER*40 AUTHOR /'GERRIT VAN NIEUWENHUIZEN'/                    4058
C * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .*  4058
*****************************************************************
C - Advanced Geant interface                                              4060
      CHARACTER*20 AG_MODULE,AG_TITLE,AG_EXNAME,AG_PARLIST,AG_CHDIR,      4060
     *AG_MATERIAL,AG_MIXTURE,AG_COMPONENT,AG_MEDIUM                       4060
      CHARACTER*4 AG_VOLUME,AG_MOTHER,AG_SHAPE,AG_CNICK,AG_KONLY,         4060
     *AG_OPTION,AG_ORT,AG_MARK                                            4060
      INTEGER AG_BEGCOM,AG_IVOLUME,AG_IMOTHER,AG_IGNUM,AG_ISHAPE,         4060
     *AG_IMED,AG_IMAT,AG_IFIELD, AG_NLMAT,AG_IERROR,AG_NWBUF,AG_NPAR,     4060
     *AG_ISTATUS,AG_IROT,AG_NBITS,AG_SERIAL, AG_ATTRIBUTE(6),AG_WORK,     4060
     *AG_SEEN,AG_LSTY,AG_LWID,AG_COLO,AG_FILL,AG_JDU,AG_ORTI, AG_NDIV,    4060
     *AG_IAXIS,AG_NDVMAX,AG_IPRIN,AG_RESET1,AG_RESET2,AG_BEGSCR,          4060
     *AG_ENDSCR, AG_IDTYPE,AG_ISET,AG_IDET,AG_ISVOL,AG_LEVEL,AG_IRESER,   4060
     *AG_IGEOM,AG_STANDALONE, AG_LSTACK,AG_NWUHIT,AG_NWUVOL,AG_MAGIC,     4060
     *AG_LDETU,AG_NPDIV,AG_NPDV,AG_NZ,AG_NCOPY, AG_IDEBU,AG_IGRAP,        4060
     *AG_IHIST,AG_IMFLD,AG_ISIMU,AG_ENDSAVE,AG_CODE,AG_TRKTYP, AG_MODE,   4060
     *AG_ECODE,AG_PDG,IPRIN, AG_ALPHAN,AG_ALPHAK(10),IGOR                 4060
      REAL AG_FIELDM,AG_TMAXFD,AG_STEMAX,AG_DEEMAX,AG_EPSIL,AG_STMIN,     4060
     *AG_DENS,AG_RADL,AG_ABSL, AG_THETAX,AG_PHIX,AG_THETAY,AG_PHIY,       4060
     *AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,AG_ALFAZ, AG_ALPHAL(10),        4060
     *AG_ALPHAX,AG_ALPHAY,AG_ALPHAZ,AG_TYPE, AG_DX, AG_DX1, AG_DX2,       4060
     *AG_DY, AG_DY1, AG_DY2, AG_DMAXMS, AG_TWIST, AG_THET, AG_THE1,       4060
     *AG_THE2, AG_PHI, AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2,       4060
     *AG_RMIN, AG_RMAX, AG_RMN, AG_RMX, AG_ZI , AG_RMN1, AG_RMN2,         4060
     *AG_RMX1, AG_RMX2, AG_H1, AG_H2, AG_BL1, AG_BL2, AG_TL1, AG_TL2,     4060
     *AG_DPHI, AG_DZ, AG_TWIS, AG_X, AG_Y, AG_Z, AG_A, AG_ZA, AG_W,       4060
     *AG_STEP, AG_C0, AG_PAR, AG_AA, AG_ZZ, AG_WW, AG_LX, AG_LY, AG_LZ,   4060
     *AG_HX, AG_HY, AG_HZ, AG_P1, AG_P2, AG_STACK,AG_UBUF,AG_XHMAX,       4060
     *AG_YHMAX,AG_ZHMAX,AG_RHMAX,AG_FHMAX,AG_FHMIN,AG_BIN, AG_CHARGE,     4060
     *AG_MASS,AG_TLIFE,AG_BRATIO                                          4060
      PARAMETER (AG_LSTACK=130,AG_NWUHIT=10,AG_NWUVOL=3,AG_MAGIC=         4060
     *-696969,AG_LDETU=250)                                               4060
      COMMON/AGCGLOB/ AG_MODULE,AG_CHDIR,AG_LEVEL,AG_IDTYPE,AG_IERROR,    4060
     *AG_STANDALONE,IPRIN, AG_IPRIN,AG_IGEOM,AG_IDEBU,AG_IGRAP,AG_IHIST,  4060
     *AG_IMFLD,AG_ISIMU                                                   4060
C Inherited variables a: saved during internal calls                      4060
C b: reset at the entry in a block and then saved                         4060
      COMMON/AGCPARA/ AG_BEGCOM, AG_IVOLUME, AG_IMOTHER, AG_IGNUM,        4060
     *AG_ISHAPE, AG_IMED, AG_IMAT, AG_IFIELD, AG_FIELDM, AG_TMAXFD,       4060
     *AG_STEMAX, AG_DEEMAX, AG_EPSIL, AG_STMIN, AG_DENS, AG_RADL,         4060
     *AG_ABSL, AG_DX, AG_DX1, AG_DX2, AG_DY, AG_DY1, AG_DY2, AG_RMN1,     4060
     *AG_RMN2, AG_RMX1, AG_RMX2, AG_THET, AG_THE1, AG_THE2, AG_PHI,       4060
     *AG_PHI1, AG_PHI2, AG_ALPH, AG_ALP1, AG_ALP2, AG_H1, AG_BL1,         4060
     *AG_TL1, AG_H2, AG_BL2, AG_TL2, AG_RMIN, AG_RMAX, AG_DPHI,           4060
     *AG_NPDIV, AG_NZ, AG_DZ, AG_TWIS, AG_LX, AG_LY, AG_LZ, AG_HX,        4060
     *AG_HY, AG_HZ, AG_A, AG_ZA, AG_W, AG_NLMAT, AG_WORK, AG_SEEN,        4060
     *AG_LSTY, AG_LWID, AG_COLO, AG_FILL, AG_SERIAL, AG_ISVOL,            4060
     *AG_ISTATUS, AG_ZI(16), AG_RMN(16), AG_RMX(16), AG_VOLUME,           4060
     *AG_MOTHER, AG_SHAPE, AG_CNICK, AG_ENDSAVE, AG_RESET1, AG_THETAX,    4060
     *AG_PHIX,AG_THETAY,AG_PHIY,AG_THETAZ,AG_PHIZ,AG_ALFAX,AG_ALFAY,      4060
     *AG_ALFAZ, AG_X,AG_Y,AG_Z, AG_STEP,AG_C0,AG_NDIV,AG_IAXIS,           4060
     *AG_NDVMAX,AG_ORTI,AG_NCOPY, AG_ALPHAN,AG_ALPHAK,AG_ALPHAL,          4060
     *AG_RESET2, AG_KONLY, AG_ORT, AG_MARK                                4060
C local variables valid inside same block                                 4060
      COMMON/AGCLOCA/ AG_BEGSCR,AG_UBUF(100),AG_PAR(100),AG_AA(20),       4060
     *AG_ZZ(20),AG_WW(20),AG_NWBUF, AG_XHMAX,AG_YHMAX,AG_ZHMAX,AG_RHMAX,  4060
     *AG_FHMAX,AG_FHMIN,AG_NBITS,AG_BIN,AG_TYPE, AG_IROT,AG_NPAR,         4060
     *AG_ISET,AG_IDET,AG_JDU,AG_IRESER, AG_ENDSCR, AG_TITLE,AG_EXNAME,    4060
     *AG_PARLIST,AG_MATERIAL,AG_MIXTURE, AG_COMPONENT,AG_MEDIUM,          4060
     *AG_OPTION                                                           4060
      COMMON/AGCPART/AG_CODE,AG_TRKTYP,AG_MASS,AG_CHARGE,AG_TLIFE,        4060
     *AG_BRATIO(6),AG_MODE(6),AG_PDG,AG_ECODE                             4060
      COMMON/AGCSTAC/ AG_STACK(AG_LSTACK,15)                              4060
C temporarly                                                              4060
      EQUIVALENCE (AG_ATTRIBUTE,AG_WORK),(AG_STEMAX,AG_DMAXMS),           4060
     *(AG_ALPHAX,AG_ALFAX), (AG_ALPHAY,AG_ALFAY),(AG_ALPHAZ,AG_ALFAZ),    4060
     *(AG_TWIST,AG_TWIS),(AG_NPDIV,AG_NPDV),  (AG_P1,AG_HX),(AG_P2,       4060
     *AG_HY)                                                              4060
      REAL MIL_P,INCH_P                                                   4060
      PARAMETER (INCH_P=2.54,MIL_P=0.00254)                               4060
C - GEANT description of logical units                                    4060
      COMMON/GCUNIT/ LIN,LOUT,NUNITS,LUNITS(5)                            4060
      INTEGER LIN,LOUT,NUNITS,LUNITS                                      4060
      COMMON/GCMAIL/ CHMAIL                                               4060
      CHARACTER*132 CHMAIL                                                4060
* ---
C LOCAL VARIABLES                                                         4062
      REAL AANGLE, BANGLE, RADDEG                                         4063
      REAL INIX,INIY                                                      4064
      INTEGER NL, LY, NU, CABLE, ISTLAYER                                 4065
      REAL MODULE_THK, LADDER_THK, LADDER_WIDTH, LADDER_LENGTH            4066
      REAL MODULERADIUS                                                   4067
* ---
C GLOBAL STUFF                                                            4070
      INTEGER BLOCK_IBMO                                                  4071
      INTEGER BLOCK_IBMY                                                  4071
      INTEGER BLOCK_IBAM                                                  4071
      INTEGER BLOCK_IBLM                                                  4071
      INTEGER BLOCK_IBSS                                                  4071
      INTEGER BLOCK_IBSP                                                  4071
      INTEGER BLOCK_ISMB                                                  4071
C -                                                                       4072
      REAL ISMG_VERSION                                                   4072
      EQUIVALENCE (BANK_ISMG(3),ISMG_VERSION,RE_ISMG_VERSION),            4072
     *(NAMES_ISMG(1),NISMG_VERSION)                                       4072
      EQUIVALENCE (COMMEN_ISMG(1),CISMG_VERSION),(MAP_ISMG(1,1),          4072
     *MISMG_VERSION)                                                      4072
      CHARACTER CISMG_VERSION*40/' '/                                     4072
      CHARACTER NISMG_VERSION*12/'R.VERSION'/                             4072
      INTEGER MISMG_VERSION(2)/1,1/                                       4072
      REAL RE_ISMG_VERSION                                                4072
C -                                                                       4072
      REAL ISMG_SUBVERSION                                                4072
      EQUIVALENCE (BANK_ISMG(4),ISMG_SUBVERSION,RE_ISMG_SUBVERSION),      4072
     *(NAMES_ISMG(2),NISMG_SUBVERSION)                                    4072
      EQUIVALENCE (COMMEN_ISMG(2),CISMG_SUBVERSION),(MAP_ISMG(1,2),       4072
     *MISMG_SUBVERSION)                                                   4072
      CHARACTER CISMG_SUBVERSION*40/' '/                                  4072
      CHARACTER NISMG_SUBVERSION*12/'R.SUBVERSION'/                       4072
      INTEGER MISMG_SUBVERSION(2)/1,1/                                    4072
      REAL RE_ISMG_SUBVERSION                                             4072
C -                                                                       4072
      REAL ISMG_RIN                                                       4072
      EQUIVALENCE (BANK_ISMG(5),ISMG_RIN,RE_ISMG_RIN),(NAMES_ISMG(3),     4072
     *NISMG_RIN)                                                          4072
      EQUIVALENCE (COMMEN_ISMG(3),CISMG_RIN),(MAP_ISMG(1,3),MISMG_RIN)    4072
      CHARACTER CISMG_RIN*40/' '/                                         4072
      CHARACTER NISMG_RIN*12/'R.RIN'/                                     4072
      INTEGER MISMG_RIN(2)/1,1/                                           4072
      REAL RE_ISMG_RIN                                                    4072
C -                                                                       4072
      REAL ISMG_ROUT                                                      4072
      EQUIVALENCE (BANK_ISMG(6),ISMG_ROUT,RE_ISMG_ROUT),(NAMES_ISMG(4),   4072
     *NISMG_ROUT)                                                         4072
      EQUIVALENCE (COMMEN_ISMG(4),CISMG_ROUT),(MAP_ISMG(1,4),             4072
     *MISMG_ROUT)                                                         4072
      CHARACTER CISMG_ROUT*40/' '/                                        4072
      CHARACTER NISMG_ROUT*12/'R.ROUT'/                                   4072
      INTEGER MISMG_ROUT(2)/1,1/                                          4072
      REAL RE_ISMG_ROUT                                                   4072
C -                                                                       4072
      INTEGER LEN_ISMG,LLEN_ISMG,LINK_ISMG                                4072
      PARAMETER (LEN_ISMG=6)                                              4072
      PARAMETER (LLEN_ISMG=4)                                             4072
      INTEGER FLAG_ISMG/0/,MAP_ISMG(2,LLEN_ISMG),IDNUM_ISMG(10)           4072
      CHARACTER NAMES_ISMG(LLEN_ISMG)*12,COMMEN_ISMG(LLEN_ISMG)*40        4072
      DATA IDNUM_ISMG/10*0/                                               4072
      REAL BANK_ISMG(LEN_ISMG)                                            4072
      CHARACTER*60 BPATH_ISMG/' '/                                        4072
      SAVE FLAG_ISMG,MAP_ISMG,IDNUM_ISMG,NAMES_ISMG,COMMEN_ISMG,          4072
     *BPATH_ISMG                                                          4072
      DATA LINK_ISMG/0/,BANK_ISMG/LEN_ISMG*0/                             4072
C *                                                                       4072
C -                                                                       4073
      REAL ISBG_LAYER                                                     4073
      EQUIVALENCE (BANK_ISBG(3),ISBG_LAYER,RE_ISBG_LAYER),                4073
     *(NAMES_ISBG(1),NISBG_LAYER)                                         4073
      EQUIVALENCE (COMMEN_ISBG(1),CISBG_LAYER),(MAP_ISBG(1,1),            4073
     *MISBG_LAYER)                                                        4073
      CHARACTER CISBG_LAYER*40/' '/                                       4073
      CHARACTER NISBG_LAYER*12/'R.LAYER'/                                 4073
      INTEGER MISBG_LAYER(2)/1,1/                                         4073
      REAL RE_ISBG_LAYER                                                  4073
C -                                                                       4073
      REAL ISBG_NLADDER                                                   4073
      EQUIVALENCE (BANK_ISBG(4),ISBG_NLADDER,RE_ISBG_NLADDER),            4073
     *(NAMES_ISBG(2),NISBG_NLADDER)                                       4073
      EQUIVALENCE (COMMEN_ISBG(2),CISBG_NLADDER),(MAP_ISBG(1,2),          4073
     *MISBG_NLADDER)                                                      4073
      CHARACTER CISBG_NLADDER*40/' '/                                     4073
      CHARACTER NISBG_NLADDER*12/'R.NLADDER'/                             4073
      INTEGER MISBG_NLADDER(2)/1,1/                                       4073
      REAL RE_ISBG_NLADDER                                                4073
C -                                                                       4073
      REAL ISBG_NUNIT                                                     4073
      EQUIVALENCE (BANK_ISBG(5),ISBG_NUNIT,RE_ISBG_NUNIT),                4073
     *(NAMES_ISBG(3),NISBG_NUNIT)                                         4073
      EQUIVALENCE (COMMEN_ISBG(3),CISBG_NUNIT),(MAP_ISBG(1,3),            4073
     *MISBG_NUNIT)                                                        4073
      CHARACTER CISBG_NUNIT*40/' '/                                       4073
      CHARACTER NISBG_NUNIT*12/'R.NUNIT'/                                 4073
      INTEGER MISBG_NUNIT(2)/1,1/                                         4073
      REAL RE_ISBG_NUNIT                                                  4073
C -                                                                       4073
      REAL ISBG_RADIUS                                                    4073
      EQUIVALENCE (BANK_ISBG(6),ISBG_RADIUS,RE_ISBG_RADIUS),              4073
     *(NAMES_ISBG(4),NISBG_RADIUS)                                        4073
      EQUIVALENCE (COMMEN_ISBG(4),CISBG_RADIUS),(MAP_ISBG(1,4),           4073
     *MISBG_RADIUS)                                                       4073
      CHARACTER CISBG_RADIUS*40/' '/                                      4073
      CHARACTER NISBG_RADIUS*12/'R.RADIUS'/                               4073
      INTEGER MISBG_RADIUS(2)/1,1/                                        4073
      REAL RE_ISBG_RADIUS                                                 4073
C -                                                                       4073
      REAL ISBG_TILT                                                      4073
      EQUIVALENCE (BANK_ISBG(7),ISBG_TILT,RE_ISBG_TILT),(NAMES_ISBG(5),   4073
     *NISBG_TILT)                                                         4073
      EQUIVALENCE (COMMEN_ISBG(5),CISBG_TILT),(MAP_ISBG(1,5),             4073
     *MISBG_TILT)                                                         4073
      CHARACTER CISBG_TILT*40/' '/                                        4073
      CHARACTER NISBG_TILT*12/'R.TILT'/                                   4073
      INTEGER MISBG_TILT(2)/1,1/                                          4073
      REAL RE_ISBG_TILT                                                   4073
C -                                                                       4073
      REAL ISBG_GAP                                                       4073
      EQUIVALENCE (BANK_ISBG(8),ISBG_GAP,RE_ISBG_GAP),(NAMES_ISBG(6),     4073
     *NISBG_GAP)                                                          4073
      EQUIVALENCE (COMMEN_ISBG(6),CISBG_GAP),(MAP_ISBG(1,6),MISBG_GAP)    4073
      CHARACTER CISBG_GAP*40/' '/                                         4073
      CHARACTER NISBG_GAP*12/'R.GAP'/                                     4073
      INTEGER MISBG_GAP(2)/1,1/                                           4073
      REAL RE_ISBG_GAP                                                    4073
C -                                                                       4073
      INTEGER LEN_ISBG,LLEN_ISBG,LINK_ISBG                                4073
      PARAMETER (LEN_ISBG=8)                                              4073
      PARAMETER (LLEN_ISBG=6)                                             4073
      INTEGER FLAG_ISBG/0/,MAP_ISBG(2,LLEN_ISBG),IDNUM_ISBG(10)           4073
      CHARACTER NAMES_ISBG(LLEN_ISBG)*12,COMMEN_ISBG(LLEN_ISBG)*40        4073
      DATA IDNUM_ISBG/10*0/                                               4073
      REAL BANK_ISBG(LEN_ISBG)                                            4073
      CHARACTER*60 BPATH_ISBG/' '/                                        4073
      SAVE FLAG_ISBG,MAP_ISBG,IDNUM_ISBG,NAMES_ISBG,COMMEN_ISBG,          4073
     *BPATH_ISBG                                                          4073
      DATA LINK_ISBG/0/,BANK_ISBG/LEN_ISBG*0/                             4073
C *                                                                       4073
C -                                                                       4074
      REAL ISAN_VERSION                                                   4074
      EQUIVALENCE (BANK_ISAN(3),ISAN_VERSION,RE_ISAN_VERSION),            4074
     *(NAMES_ISAN(1),NISAN_VERSION)                                       4074
      EQUIVALENCE (COMMEN_ISAN(1),CISAN_VERSION),(MAP_ISAN(1,1),          4074
     *MISAN_VERSION)                                                      4074
      CHARACTER CISAN_VERSION*40/' '/                                     4074
      CHARACTER NISAN_VERSION*12/'R.VERSION'/                             4074
      INTEGER MISAN_VERSION(2)/1,1/                                       4074
      REAL RE_ISAN_VERSION                                                4074
C -                                                                       4074
      REAL ISAN_RMIN                                                      4074
      EQUIVALENCE (BANK_ISAN(4),ISAN_RMIN,RE_ISAN_RMIN),(NAMES_ISAN(2),   4074
     *NISAN_RMIN)                                                         4074
      EQUIVALENCE (COMMEN_ISAN(2),CISAN_RMIN),(MAP_ISAN(1,2),             4074
     *MISAN_RMIN)                                                         4074
      CHARACTER CISAN_RMIN*40/' '/                                        4074
      CHARACTER NISAN_RMIN*12/'R.RMIN'/                                   4074
      INTEGER MISAN_RMIN(2)/1,1/                                          4074
      REAL RE_ISAN_RMIN                                                   4074
C -                                                                       4074
      REAL ISAN_LENGTH                                                    4074
      EQUIVALENCE (BANK_ISAN(5),ISAN_LENGTH,RE_ISAN_LENGTH),              4074
     *(NAMES_ISAN(3),NISAN_LENGTH)                                        4074
      EQUIVALENCE (COMMEN_ISAN(3),CISAN_LENGTH),(MAP_ISAN(1,3),           4074
     *MISAN_LENGTH)                                                       4074
      CHARACTER CISAN_LENGTH*40/' '/                                      4074
      CHARACTER NISAN_LENGTH*12/'R.LENGTH'/                               4074
      INTEGER MISAN_LENGTH(2)/1,1/                                        4074
      REAL RE_ISAN_LENGTH                                                 4074
C -                                                                       4074
      REAL ISAN_THK                                                       4074
      EQUIVALENCE (BANK_ISAN(6),ISAN_THK,RE_ISAN_THK),(NAMES_ISAN(4),     4074
     *NISAN_THK)                                                          4074
      EQUIVALENCE (COMMEN_ISAN(4),CISAN_THK),(MAP_ISAN(1,4),MISAN_THK)    4074
      CHARACTER CISAN_THK*40/' '/                                         4074
      CHARACTER NISAN_THK*12/'R.THK'/                                     4074
      INTEGER MISAN_THK(2)/1,1/                                           4074
      REAL RE_ISAN_THK                                                    4074
C -                                                                       4074
      INTEGER LEN_ISAN,LLEN_ISAN,LINK_ISAN                                4074
      PARAMETER (LEN_ISAN=6)                                              4074
      PARAMETER (LLEN_ISAN=4)                                             4074
      INTEGER FLAG_ISAN/0/,MAP_ISAN(2,LLEN_ISAN),IDNUM_ISAN(10)           4074
      CHARACTER NAMES_ISAN(LLEN_ISAN)*12,COMMEN_ISAN(LLEN_ISAN)*40        4074
      DATA IDNUM_ISAN/10*0/                                               4074
      REAL BANK_ISAN(LEN_ISAN)                                            4074
      CHARACTER*60 BPATH_ISAN/' '/                                        4074
      SAVE FLAG_ISAN,MAP_ISAN,IDNUM_ISAN,NAMES_ISAN,COMMEN_ISAN,          4074
     *BPATH_ISAN                                                          4074
      DATA LINK_ISAN/0/,BANK_ISAN/LEN_ISAN*0/                             4074
C *                                                                       4074
C -                                                                       4075
      REAL ISSS_VERSION                                                   4075
      EQUIVALENCE (BANK_ISSS(3),ISSS_VERSION,RE_ISSS_VERSION),            4075
     *(NAMES_ISSS(1),NISSS_VERSION)                                       4075
      EQUIVALENCE (COMMEN_ISSS(1),CISSS_VERSION),(MAP_ISSS(1,1),          4075
     *MISSS_VERSION)                                                      4075
      CHARACTER CISSS_VERSION*40/' '/                                     4075
      CHARACTER NISSS_VERSION*12/'R.VERSION'/                             4075
      INTEGER MISSS_VERSION(2)/1,1/                                       4075
      REAL RE_ISSS_VERSION                                                4075
C -                                                                       4075
      REAL ISSS_ACTIVEW                                                   4075
      EQUIVALENCE (BANK_ISSS(4),ISSS_ACTIVEW,RE_ISSS_ACTIVEW),            4075
     *(NAMES_ISSS(2),NISSS_ACTIVEW)                                       4075
      EQUIVALENCE (COMMEN_ISSS(2),CISSS_ACTIVEW),(MAP_ISSS(1,2),          4075
     *MISSS_ACTIVEW)                                                      4075
      CHARACTER CISSS_ACTIVEW*40/' '/                                     4075
      CHARACTER NISSS_ACTIVEW*12/'R.ACTIVEW'/                             4075
      INTEGER MISSS_ACTIVEW(2)/1,1/                                       4075
      REAL RE_ISSS_ACTIVEW                                                4075
C -                                                                       4075
      REAL ISSS_ACTIVEH                                                   4075
      EQUIVALENCE (BANK_ISSS(5),ISSS_ACTIVEH,RE_ISSS_ACTIVEH),            4075
     *(NAMES_ISSS(3),NISSS_ACTIVEH)                                       4075
      EQUIVALENCE (COMMEN_ISSS(3),CISSS_ACTIVEH),(MAP_ISSS(1,3),          4075
     *MISSS_ACTIVEH)                                                      4075
      CHARACTER CISSS_ACTIVEH*40/' '/                                     4075
      CHARACTER NISSS_ACTIVEH*12/'R.ACTIVEH'/                             4075
      INTEGER MISSS_ACTIVEH(2)/1,1/                                       4075
      REAL RE_ISSS_ACTIVEH                                                4075
C -                                                                       4075
      REAL ISSS_ACTIVETHK                                                 4075
      EQUIVALENCE (BANK_ISSS(6),ISSS_ACTIVETHK,RE_ISSS_ACTIVETHK),        4075
     *(NAMES_ISSS(4),NISSS_ACTIVETHK)                                     4075
      EQUIVALENCE (COMMEN_ISSS(4),CISSS_ACTIVETHK),(MAP_ISSS(1,4),        4075
     *MISSS_ACTIVETHK)                                                    4075
      CHARACTER CISSS_ACTIVETHK*40/' '/                                   4075
      CHARACTER NISSS_ACTIVETHK*12/'R.ACTIVETHK'/                         4075
      INTEGER MISSS_ACTIVETHK(2)/1,1/                                     4075
      REAL RE_ISSS_ACTIVETHK                                              4075
C -                                                                       4075
      REAL ISSS_PASSIVETHK                                                4075
      EQUIVALENCE (BANK_ISSS(7),ISSS_PASSIVETHK,RE_ISSS_PASSIVETHK),      4075
     *(NAMES_ISSS(5),NISSS_PASSIVETHK)                                    4075
      EQUIVALENCE (COMMEN_ISSS(5),CISSS_PASSIVETHK),(MAP_ISSS(1,5),       4075
     *MISSS_PASSIVETHK)                                                   4075
      CHARACTER CISSS_PASSIVETHK*40/' '/                                  4075
      CHARACTER NISSS_PASSIVETHK*12/'R.PASSIVETHK'/                       4075
      INTEGER MISSS_PASSIVETHK(2)/1,1/                                    4075
      REAL RE_ISSS_PASSIVETHK                                             4075
C -                                                                       4075
      INTEGER LEN_ISSS,LLEN_ISSS,LINK_ISSS                                4075
      PARAMETER (LEN_ISSS=7)                                              4075
      PARAMETER (LLEN_ISSS=5)                                             4075
      INTEGER FLAG_ISSS/0/,MAP_ISSS(2,LLEN_ISSS),IDNUM_ISSS(10)           4075
      CHARACTER NAMES_ISSS(LLEN_ISSS)*12,COMMEN_ISSS(LLEN_ISSS)*40        4075
      DATA IDNUM_ISSS/10*0/                                               4075
      REAL BANK_ISSS(LEN_ISSS)                                            4075
      CHARACTER*60 BPATH_ISSS/' '/                                        4075
      SAVE FLAG_ISSS,MAP_ISSS,IDNUM_ISSS,NAMES_ISSS,COMMEN_ISSS,          4075
     *BPATH_ISSS                                                          4075
      DATA LINK_ISSS/0/,BANK_ISSS/LEN_ISSS*0/                             4075
C *                                                                       4075
* -------------------------------------------------------
C *                                                                       4078
      CALL AGSBEGM(MODULE,IPRIN)                                          4078
      IF (IPRIN.LT.0) RETURN                                              4078
C Filling bank ISMG - MOTHER VOLUME WHOLE DETECTOR                        4078
      BANK_TITLE='MOTHER VOLUME WHOLE DETECTOR'                           4078
      BPATH_ISMG='ISMG*'                                                  4078
      IDNUM_ISMG(1)=0                                                     4079
C VERSION, THIS GOES TO G2T_VOLUME_ID.G!!!                                4079
      ISMG_VERSION=1                                                      4079
      CISMG_VERSION='VERSION, THIS GOES TO G2T_VOLUME_ID.G!!!'            4079
C FOR FUTURE USE WITH G2T_VOLUME_ID.G                                     4080
      ISMG_SUBVERSION=0                                                   4080
      CISMG_SUBVERSION='FOR FUTURE USE WITH G2T_VOLUME_ID.G'              4080
C INNER RADIUS                                                            4081
      ISMG_RIN=13.50                                                      4081
      CISMG_RIN='INNER RADIUS'                                            4081
C OUTER RADIUS (LENGTH = LADDER LENGTH)                                   4082
      ISMG_ROUT=15.00                                                     4082
      CISMG_ROUT='OUTER RADIUS (LENGTH = LADDER LENGTH)'                  4082
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    4083
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           4083
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   4083
C *                                                                       4083
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISMG',    4083
     *BPATH_ISMG,IDNUM_ISMG,1, MAP_ISMG,NAMES_ISMG,COMMEN_ISMG,           4083
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   4083
*--------------------------------------------------------
C *                                                                       4085
      CALL AGSBEGM(MODULE,IPRIN)                                          4085
      IF (IPRIN.LT.0) RETURN                                              4085
C Filling bank ISBG - INNER SILICON TRACKER PARAMETERS                    4085
      BANK_TITLE='INNER SILICON TRACKER PARAMETERS'                       4085
      BPATH_ISBG='ISBG*'                                                  4085
      IDNUM_ISBG(1)=0                                                     4086
C LAYER INDEX, JUST ONE LAYER LEFT                                        4086
      ISBG_LAYER=1                                                        4086
      CISBG_LAYER='LAYER INDEX, JUST ONE LAYER LEFT'                      4086
C NUMBER OF LADDERS IN THIS LAYER                                         4087
      ISBG_NLADDER=24                                                     4087
      CISBG_NLADDER='NUMBER OF LADDERS IN THIS LAYER'                     4087
C NUMBER OF SENSORS PER LADDER IN THIS LAYER                              4088
      ISBG_NUNIT=12                                                       4088
      CISBG_NUNIT='NUMBER OF SENSORS PER LADDER IN THIS LAYER'            4088
C RADIUS CENTERS OF ACTIVE SILICON SENSORS                                4089
      ISBG_RADIUS=14.0                                                    4089
      CISBG_RADIUS='RADIUS CENTERS OF ACTIVE SILICON SENSORS'             4089
C TILT ANGLE OF THE LADDERS                                               4090
      ISBG_TILT=-90.0                                                     4090
      CISBG_TILT='TILT ANGLE OF THE LADDERS'                              4090
C GAPS BETWEEN THE SENSORS                                                4091
      ISBG_GAP=0.0000                                                     4091
      CISBG_GAP='GAPS BETWEEN THE SENSORS'                                4091
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    4092
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           4092
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   4092
C *                                                                       4092
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISBG',    4092
     *BPATH_ISBG,IDNUM_ISBG,1, MAP_ISBG,NAMES_ISBG,COMMEN_ISBG,           4092
     *BANK_ISBG,LEN_ISBG,LLEN_ISBG,LINK_ISBG,FLAG_ISBG)                   4092
*--------------------------------------------------------
C *                                                                       4094
      CALL AGSBEGM(MODULE,IPRIN)                                          4094
      IF (IPRIN.LT.0) RETURN                                              4094
C Filling bank ISAN - RADIATION LENGTH EQUIVALENT TUBE                    4094
      BANK_TITLE='RADIATION LENGTH EQUIVALENT TUBE'                       4094
      BPATH_ISAN='ISAN*'                                                  4094
      IDNUM_ISAN(1)=0                                                     4095
C VERSION                                                                 4095
      ISAN_VERSION=1                                                      4095
      CISAN_VERSION='VERSION'                                             4095
C INNER RADIUS (LENGTH = LADDER LENGTH)                                   4096
      ISAN_RMIN=14.200                                                    4096
      CISAN_RMIN='INNER RADIUS (LENGTH = LADDER LENGTH)'                  4096
C THICKNESS (1% RL SILICON)                                               4097
      ISAN_THK=0.0636                                                     4097
      CISAN_THK='THICKNESS (1% RL SILICON)'                               4097
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    4098
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           4098
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   4098
C *                                                                       4098
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISAN',    4098
     *BPATH_ISAN,IDNUM_ISAN,1, MAP_ISAN,NAMES_ISAN,COMMEN_ISAN,           4098
     *BANK_ISAN,LEN_ISAN,LLEN_ISAN,LINK_ISAN,FLAG_ISAN)                   4098
*--------------------------------------------------------
C *                                                                       4100
      CALL AGSBEGM(MODULE,IPRIN)                                          4100
      IF (IPRIN.LT.0) RETURN                                              4100
C Filling bank ISSS - SILICON SENSOR                                      4100
      BANK_TITLE='SILICON SENSOR'                                         4100
      BPATH_ISSS='ISSS*'                                                  4100
      IDNUM_ISSS(1)=0                                                     4101
C VERSION                                                                 4101
      ISSS_VERSION=1                                                      4101
      CISSS_VERSION='VERSION'                                             4101
C ACTIVE AREA WIDTH                                                       4102
      ISSS_ACTIVEW=3.6823                                                 4102
      CISSS_ACTIVEW='ACTIVE AREA WIDTH'                                   4102
C ACTIVE AREA HEIGHT                                                      4103
      ISSS_ACTIVEH=4.0400                                                 4103
      CISSS_ACTIVEH='ACTIVE AREA HEIGHT'                                  4103
C ACTIVE AREA THICKNESS                                                   4104
      ISSS_ACTIVETHK=0.0300                                               4104
      CISSS_ACTIVETHK='ACTIVE AREA THICKNESS'                             4104
C PASSIVE AREA THICKNESS                                                  4105
      ISSS_PASSIVETHK=0.0936                                              4105
      CISSS_PASSIVETHK='PASSIVE AREA THICKNESS'                           4105
      CALL AGDOCUM (MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISSS',    4106
     *BPATH_ISSS,IDNUM_ISSS,1, MAP_ISSS,NAMES_ISSS,COMMEN_ISSS,           4106
     *BANK_ISSS,LEN_ISSS,LLEN_ISSS,LINK_ISSS,FLAG_ISSS)                   4106
C *                                                                       4106
      CALL AGDOCUME(MODULE, MCOMMENT,AUTHOR,CREATED,BANK_TITLE,'ISSS',    4106
     *BPATH_ISSS,IDNUM_ISSS,1, MAP_ISSS,NAMES_ISSS,COMMEN_ISSS,           4106
     *BANK_ISSS,LEN_ISSS,LLEN_ISSS,LINK_ISSS,FLAG_ISSS)                   4106
* -------------------------------------------------------
      RADDEG = 3.14159265/180.0                                           4108
* -------------------------------------------------------
C use ISMG bank                                                           4110
      BPATH_ISMG='ISMG*'                                                  4110
      IDNUM_ISMG(1)=0                                                     4110
      ISMG_VERSION=1                                                      4110
      CALL AGDGETP('ISTBGEO00','*',-999,'ISMG',NISMG_VERSION,             4110
     *RE_ISMG_VERSION,BPATH_ISMG,IDNUM_ISMG,1,MAP_ISMG,NAMES_ISMG,        4110
     *BANK_ISMG,LEN_ISMG,LLEN_ISMG,LINK_ISMG,FLAG_ISMG)                   4110
C CALCULATE THICKNESS OF MODULES AND LADDERS                              4112
C TO PROPERLY SET THE SIZE OF THE MOTHERVOLUMES                           4113
      MODULE_THK = ISSS_ACTIVETHK+ISSS_PASSIVETHK                         4114
C LADDER THICKNESS                                                        4115
      LADDER_THK = MODULE_THK                                             4116
C LADDER WIDTH                                                            4117
      LADDER_WIDTH = ISSS_ACTIVEW                                         4118
C LADDER LENGTH, NO. MODULE * MODULE WIDTH                                4119
      LADDER_LENGTH = ISBG_NUNIT*ISSS_ACTIVEH                             4120
      CALL AGSBEGM(MODULE,IPRIN)                                          4122
C Check IPRIN<0                                                           4122
      IF (IPRIN.LT.0) RETURN                                              4122
C Create IBMO :                                                           4122
C Call To Local Procedure IBMO                                            4122
      ASSIGN 5020 TO BLOCK_IBMO                                           4122
      GO TO  5010                                                         4122
5020  CONTINUE                                                            4122
C *                                                                       4122
C Geant POSITION : IBMO ===> MOTHER='CAVE' <===                           4123
      CALL AGSRESET                                                       4123
      AG_MOTHER = 'CAVE'                                                  4123
      AG_TITLE = 'IBMO'                                                   4123
      AG_EXNAME = 'POSITION'                                              4123
      AG_PARLIST = 'MOTHER'                                               4123
      CALL AXPOSITION                                                     4123
C *                                                                       4123
      WRITE (*,*) '===>GEOINFO/istbgeo00 SIMPLE VERSION of IST!!! - IBMO  4125
     * - created'                                                         4125
* -------------------------------------------------------
      CALL AGSENDM                                                        4127
      RETURN                                                              4127
C Begin Local Procedure IBMO                                              4127
C IBMO IS THE MOTHER OF THE ISTB DETECTOR                                 4127
5010  CONTINUE                                                            4127
         AG_TITLE='IBMO'                                                  4127
         AG_MODULE=MODULE                                                 4127
         AG_MARK='V00'                                                    4127
         CALL AGSPUSH                                                     4127
         AG_MODULE=MODULE                                                 4127
C    *                                                                    4127
C    Geant MATERIAL : AIR ===> inherited arguments used <===              4128
         CALL AGSRESET                                                    4128
         AG_TITLE = 'AIR'                                                 4128
         AG_EXNAME = 'MATERIAL'                                           4128
         AG_PARLIST = 'NONE'                                              4128
         CALL AXMATERIAL                                                  4128
C    *                                                                    4128
C    Geant ATTRIBUTE : IBMO ===> SEEN=0 COLO=1 <===                       4128
         CALL AGSRESET                                                    4129
         AG_SEEN = 0                                                      4129
         AG_COLO = 1                                                      4129
         AG_TITLE = 'IBMO'                                                4129
         AG_EXNAME = 'ATTRIBUTE'                                          4129
         AG_PARLIST = 'SEEN_COLO'                                         4129
         CALL AXATTRIBUTE                                                 4129
C    *                                                                    4129
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISMG_ROUT DZ = LADDER_LE  4129
C    NGTH/2.0 <===                                                        4129
         CALL AGSRESET                                                    4132
         AG_RMIN = ISMG_RIN                                               4132
         AG_RMAX = ISMG_ROUT                                              4132
         AG_DZ = LADDER_LENGTH/2.0                                        4132
         AG_TITLE = 'TUBE'                                                4132
         AG_EXNAME = 'SHAPE'                                              4132
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      4132
         CALL AXSHAPE                                                     4132
C    *                                                                    4132
*     Make one IST layer
C    Create IBMY :                                                        4135
C    Call To Local Procedure IBMY                                         4135
         ASSIGN 5040 TO BLOCK_IBMY                                        4135
         GO TO  5030                                                      4135
5040     CONTINUE                                                         4135
C    *                                                                    4135
C    Geant POSITION : IBMY ===> inherited arguments used <===             4136
         CALL AGSRESET                                                    4136
         AG_TITLE = 'IBMY'                                                4136
         AG_EXNAME = 'POSITION'                                           4136
         AG_PARLIST = 'NONE'                                              4136
         CALL AXPOSITION                                                  4136
C    *                                                                    4136
*     Make the radiation length equivalent tube
*      Create   ISMB
*      Position ISMB
5011  CALL AGSPOPB                                                        4142
      GO TO BLOCK_IBMO, (5010 ,5020)                                      4142
C End of Local Procedure                                                  4142
* -------------------------------------------------------
C Begin Local Procedure IBMY                                              4145
C IBMY IS THE MOTHER OF THE IST LAYER                                     4145
5030  CONTINUE                                                            4145
         AG_TITLE='IBMY'                                                  4145
         AG_MODULE=MODULE                                                 4145
         AG_MARK='V00'                                                    4145
         CALL AGSPUSH                                                     4145
         AG_MODULE=MODULE                                                 4145
C    *                                                                    4145
C    Geant MATERIAL : AIR ===> inherited arguments used <===              4146
         CALL AGSRESET                                                    4146
         AG_TITLE = 'AIR'                                                 4146
         AG_EXNAME = 'MATERIAL'                                           4146
         AG_PARLIST = 'NONE'                                              4146
         CALL AXMATERIAL                                                  4146
C    *                                                                    4146
C    Geant ATTRIBUTE : IBMY ===> SEEN=0 COLO=1 SERIAL=ISTLAYER <===       4146
         CALL AGSRESET                                                    4147
         AG_SEEN = 0                                                      4147
         AG_COLO = 1                                                      4147
         AG_SERIAL = ISTLAYER                                             4147
         AG_TITLE = 'IBMY'                                                4147
         AG_EXNAME = 'ATTRIBUTE'                                          4147
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  4147
         CALL AXATTRIBUTE                                                 4147
C    *                                                                    4147
C    Geant SHAPE : TUBE ===> RMIN=ISMG_RIN RMAX=ISAN_RMIN DZ = LADDER_LE  4151
C    NGTH/2.0 <===                                                        4151
         CALL AGSRESET                                                    4151
         AG_RMIN = ISMG_RIN                                               4151
         AG_RMAX = ISAN_RMIN                                              4151
         AG_DZ = LADDER_LENGTH/2.0                                        4151
         AG_TITLE = 'TUBE'                                                4151
         AG_EXNAME = 'SHAPE'                                              4151
         AG_PARLIST = 'RMIN_RMAX_DZ'                                      4151
         CALL AXSHAPE                                                     4151
C    *                                                                    4151
*    Radius at which the module has to end up to have the active volume
*    at the IST Radius
         MODULERADIUS = ISBG_RADIUS+MODULE_THK/2.0-ISSS_ACTIVETHK/2.0     4155
C    *                                                                    4157
         NL=1                                                             4157
            GO TO 5053                                                    4157
5051        NL=NL+1                                                       4157
5053        IF(NL-(ISBG_NLADDER).GT.0) GO TO 5052                         4157
C       INNER LOOP OVER LADDERS (WHICH CONSIST OF SENSORS)                4157
C       ROTATE LADDERS SO THAT THEY NICELY COVER THE LAYER                4159
            AANGLE = (360.0/ISBG_NLADDER)*NL                              4160
C       AND TILT A BIT SO THAT THEY CAN BE TILED                          4161
            BANGLE = (AANGLE+ISBG_TILT)*RADDEG                            4162
C       VECTOR FROM CENTER OF SILICON SENSOR TO CENTER LADDER VOLUME      4163
            INIX = 0.0                                                    4164
            INIY = 0.0                                                    4165
C       Create IBAM :                                                     4166
C       Call To Local Procedure IBAM                                      4166
            ASSIGN 5070 TO BLOCK_IBAM                                     4166
            GO TO  5060                                                   4166
5070        CONTINUE                                                      4166
C       *                                                                 4166
C       Geant POSITION : IBAM ===> X=MODULERADIUS*COS(AANGLE*RADDEG)+(IN  4170
C       IX*COS(BANGLE)-INIY*SIN(BANGLE)) Y=MODULERADIUS*SIN(AANGLE*RADDE  4170
C       G)+(INIX*SIN(BANGLE)+INIY*COS(BANGLE)) Z = 0.0 ALPHAZ = AANGLE+I  4170
C       SBG_TILT <===                                                     4170
            CALL AGSRESET                                                 4170
            AG_X =                                                        4170
     *      MODULERADIUS*COS(AANGLE*RADDEG)+(INIX*COS(BANGLE)-INIY*SIN(   4170
     *      BANGLE))                                                      4170
            AG_Y =                                                        4170
     *      MODULERADIUS*SIN(AANGLE*RADDEG)+(INIX*SIN(BANGLE)+INIY*COS(   4170
     *      BANGLE))                                                      4170
            AG_Z = 0.0                                                    4170
            AG_ALPHAN=AG_ALPHAN+1                                         4170
            AG_ALPHAK(AG_ALPHAN)=3                                        4170
            AG_ALPHAL(AG_ALPHAN)=AANGLE+ISBG_TILT                         4170
            AG_TITLE = 'IBAM'                                             4170
            AG_EXNAME = 'POSITION'                                        4170
            AG_PARLIST = 'X_Y_Z_ALPHAZ'                                   4170
            CALL AXPOSITION                                               4170
C       *                                                                 4170
         GO TO 5051                                                       4171
5052     CONTINUE                                                         4171
5031  CALL AGSPOPB                                                        4173
      GO TO BLOCK_IBMY, (5030 ,5040)                                      4173
C End of Local Procedure                                                  4173
* -----------------------------------------------------------------------------
C Begin Local Procedure IBAM                                              4176
C IBAM IS THE MOTHER OF THE WHOLE LONG LADDER                             4176
5060  CONTINUE                                                            4176
         AG_TITLE='IBAM'                                                  4176
         AG_MODULE=MODULE                                                 4176
         AG_MARK='V00'                                                    4176
         CALL AGSPUSH                                                     4176
         AG_MODULE=MODULE                                                 4176
C    *                                                                    4176
C    Geant ATTRIBUTE : IBAM ===> SEEN=0 COLO=1 <===                       4177
         CALL AGSRESET                                                    4177
         AG_SEEN = 0                                                      4177
         AG_COLO = 1                                                      4177
         AG_TITLE = 'IBAM'                                                4177
         AG_EXNAME = 'ATTRIBUTE'                                          4177
         AG_PARLIST = 'SEEN_COLO'                                         4177
         CALL AXATTRIBUTE                                                 4177
C    *                                                                    4177
C    Geant SHAPE : BOX ===> DX=LADDER_WIDTH/2.0 DY=LADDER_THK/2.0 DZ = L  4181
C    ADDER_LENGTH/2.0 <===                                                4181
         CALL AGSRESET                                                    4181
         AG_DX = LADDER_WIDTH/2.0                                         4181
         AG_DY = LADDER_THK/2.0                                           4181
         AG_DZ = LADDER_LENGTH/2.0                                        4181
         AG_TITLE = 'BOX'                                                 4181
         AG_EXNAME = 'SHAPE'                                              4181
         AG_PARLIST = 'DX_DY_DZ'                                          4181
         CALL AXSHAPE                                                     4181
C    *                                                                    4181
C    Create IBLM :                                                        4183
C    Call To Local Procedure IBLM                                         4183
         ASSIGN 5090 TO BLOCK_IBLM                                        4183
         GO TO  5080                                                      4183
5090     CONTINUE                                                         4183
C    *                                                                    4183
C    *                                                                    4184
         NU=1                                                             4184
            GO TO 5103                                                    4184
5101        NU=NU+1                                                       4184
5103        IF(NU-(ISBG_NUNIT).GT.0) GO TO 5102                           4184
C       Geant POSITION : IBLM ===> X=0.0 Y=0.0 Z = -1.0*LADDER_LENGTH/2.  4187
C       0+ISSS_ACTIVEH*(NU-0.5) <===                                      4187
            CALL AGSRESET                                                 4187
            AG_X = 0.0                                                    4187
            AG_Y = 0.0                                                    4187
            AG_Z = -1.0*LADDER_LENGTH/2.0+ISSS_ACTIVEH*(NU-0.5)           4187
            AG_TITLE = 'IBLM'                                             4187
            AG_EXNAME = 'POSITION'                                        4187
            AG_PARLIST = 'X_Y_Z'                                          4187
            CALL AXPOSITION                                               4187
C       *                                                                 4187
         GO TO 5101                                                       4188
5102     CONTINUE                                                         4188
5061  CALL AGSPOPB                                                        4190
      GO TO BLOCK_IBAM, (5060 ,5070)                                      4190
C End of Local Procedure                                                  4190
* -----------------------------------------------------------------------------
C Begin Local Procedure IBLM                                              4193
C IBLM IS THE MOTHER OF THE SENSOR ASSEMBLY                               4193
5080  CONTINUE                                                            4193
         AG_TITLE='IBLM'                                                  4193
         AG_MODULE=MODULE                                                 4193
         AG_MARK='V00'                                                    4193
         CALL AGSPUSH                                                     4193
         AG_MODULE=MODULE                                                 4193
C    *                                                                    4193
C    Geant ATTRIBUTE : IBLM ===> SEEN=0 COLO=1 SERIAL=ISTLAYER <===       4194
         CALL AGSRESET                                                    4194
         AG_SEEN = 0                                                      4194
         AG_COLO = 1                                                      4194
         AG_SERIAL = ISTLAYER                                             4194
         AG_TITLE = 'IBLM'                                                4194
         AG_EXNAME = 'ATTRIBUTE'                                          4194
         AG_PARLIST = 'SEEN_COLO_SERIAL'                                  4194
         CALL AXATTRIBUTE                                                 4194
C    *                                                                    4194
C    Geant SHAPE : BOX ===> DX=LADDER_WIDTH/2.0 DY=MODULE_THK/2.0 DZ = I  4198
C    SSS_ACTIVEH/2.0 <===                                                 4198
         CALL AGSRESET                                                    4198
         AG_DX = LADDER_WIDTH/2.0                                         4198
         AG_DY = MODULE_THK/2.0                                           4198
         AG_DZ = ISSS_ACTIVEH/2.0                                         4198
         AG_TITLE = 'BOX'                                                 4198
         AG_EXNAME = 'SHAPE'                                              4198
         AG_PARLIST = 'DX_DY_DZ'                                          4198
         CALL AXSHAPE                                                     4198
C    *                                                                    4198
* --  Silicon Sensors
C    Create IBSS :                                                        4202
C    Call To Local Procedure IBSS                                         4202
         ASSIGN 5120 TO BLOCK_IBSS                                        4202
         GO TO  5110                                                      4202
5120     CONTINUE                                                         4202
C    *                                                                    4202
C    Geant POSITION : IBSS ===> X=0.0 Y=-1.0*MODULE_THK/2.0+ISSS_ACTIVET  4205
C    HK/2.0 Z = 0.0 <===                                                  4205
         CALL AGSRESET                                                    4205
         AG_X = 0.0                                                       4205
         AG_Y = -1.0*MODULE_THK/2.0+ISSS_ACTIVETHK/2.0                    4205
         AG_Z = 0.0                                                       4205
         AG_TITLE = 'IBSS'                                                4205
         AG_EXNAME = 'POSITION'                                           4205
         AG_PARLIST = 'X_Y_Z'                                             4205
         CALL AXPOSITION                                                  4205
C    *                                                                    4205
C    Create IBSP :                                                        4206
C    Call To Local Procedure IBSP                                         4206
         ASSIGN 5140 TO BLOCK_IBSP                                        4206
         GO TO  5130                                                      4206
5140     CONTINUE                                                         4206
C    *                                                                    4206
C    Geant POSITION : IBSP ===> X=0.0 Y=+1.0*MODULE_THK/2.0-ISSS_PASSIVE  4209
C    THK/2.0 Z = 0.0 <===                                                 4209
         CALL AGSRESET                                                    4209
         AG_X = 0.0                                                       4209
         AG_Y = +1.0*MODULE_THK/2.0-ISSS_PASSIVETHK/2.0                   4209
         AG_Z = 0.0                                                       4209
         AG_TITLE = 'IBSP'                                                4209
         AG_EXNAME = 'POSITION'                                           4209
         AG_PARLIST = 'X_Y_Z'                                             4209
         CALL AXPOSITION                                                  4209
C    *                                                                    4209
5081  CALL AGSPOPB                                                        4211
      GO TO BLOCK_IBLM, (5080 ,5090)                                      4211
C End of Local Procedure                                                  4211
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSP                                              4214
C IBSP IS THE SILICON SENSOR PASSIVE AREA                                 4214
5130  CONTINUE                                                            4214
         AG_TITLE='IBSP'                                                  4214
         AG_MODULE=MODULE                                                 4214
         AG_MARK='V00'                                                    4214
         CALL AGSPUSH                                                     4214
         AG_MODULE=MODULE                                                 4214
C    *                                                                    4214
C    Geant ATTRIBUTE : IBSP ===> SEEN=1 COLO=4 <===                       4215
         CALL AGSRESET                                                    4215
         AG_SEEN = 1                                                      4215
         AG_COLO = 4                                                      4215
         AG_TITLE = 'IBSP'                                                4215
         AG_EXNAME = 'ATTRIBUTE'                                          4215
         AG_PARLIST = 'SEEN_COLO'                                         4215
         CALL AXATTRIBUTE                                                 4215
C    *                                                                    4215
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          4215
         CALL AGSRESET                                                    4216
         AG_TITLE = 'SILICON'                                             4216
         AG_EXNAME = 'MATERIAL'                                           4216
         AG_PARLIST = 'NONE'                                              4216
         CALL AXMATERIAL                                                  4216
C    *                                                                    4216
C    Geant SHAPE : BOX ===> DX=ISSS_ACTIVEW/2.0 DY=ISSS_PASSIVETHK/2.0 D  4220
C    Z = ISSS_ACTIVEH/2.0 <===                                            4220
         CALL AGSRESET                                                    4220
         AG_DX = ISSS_ACTIVEW/2.0                                         4220
         AG_DY = ISSS_PASSIVETHK/2.0                                      4220
         AG_DZ = ISSS_ACTIVEH/2.0                                         4220
         AG_TITLE = 'BOX'                                                 4220
         AG_EXNAME = 'SHAPE'                                              4220
         AG_PARLIST = 'DX_DY_DZ'                                          4220
         CALL AXSHAPE                                                     4220
C    *                                                                    4220
5131  CALL AGSPOPB                                                        4222
      GO TO BLOCK_IBSP, (5130 ,5140)                                      4222
C End of Local Procedure                                                  4222
* -----------------------------------------------------------------------------
C Begin Local Procedure IBSS                                              4225
C IBSS IS THE SILICON SENSOR ACTIVE AREA                                  4225
5110  CONTINUE                                                            4225
         AG_TITLE='IBSS'                                                  4225
         AG_MODULE=MODULE                                                 4225
         AG_MARK='V00'                                                    4225
         CALL AGSPUSH                                                     4225
         AG_MODULE=MODULE                                                 4225
C    *                                                                    4225
C    Geant ATTRIBUTE : IBSS ===> SEEN=1 COLO=2 <===                       4226
         CALL AGSRESET                                                    4226
         AG_SEEN = 1                                                      4226
         AG_COLO = 2                                                      4226
         AG_TITLE = 'IBSS'                                                4226
         AG_EXNAME = 'ATTRIBUTE'                                          4226
         AG_PARLIST = 'SEEN_COLO'                                         4226
         CALL AXATTRIBUTE                                                 4226
C    *                                                                    4226
C    Geant MATERIAL : SILICON ===> inherited arguments used <===          4226
         CALL AGSRESET                                                    4227
         AG_TITLE = 'SILICON'                                             4227
         AG_EXNAME = 'MATERIAL'                                           4227
         AG_PARLIST = 'NONE'                                              4227
         CALL AXMATERIAL                                                  4227
C    *                                                                    4227
C    Geant MATERIAL : SENSITIVE ===> ISVOL=1 <===                         4227
         CALL AGSRESET                                                    4228
         AG_ISVOL = 1                                                     4228
         AG_TITLE = 'SENSITIVE'                                           4228
         AG_EXNAME = 'MATERIAL'                                           4228
         AG_PARLIST = 'ISVOL'                                             4228
         CALL AXMATERIAL                                                  4228
C    *                                                                    4228
C    Geant SHAPE : BOX ===> DX=ISSS_ACTIVEW/2.0 DY=ISSS_ACTIVETHK/2.0 DZ  4232
C     = ISSS_ACTIVEH/2.0 <===                                             4232
         CALL AGSRESET                                                    4232
         AG_DX = ISSS_ACTIVEW/2.0                                         4232
         AG_DY = ISSS_ACTIVETHK/2.0                                       4232
         AG_DZ = ISSS_ACTIVEH/2.0                                         4232
         AG_TITLE = 'BOX'                                                 4232
         AG_EXNAME = 'SHAPE'                                              4232
         AG_PARLIST = 'DX_DY_DZ'                                          4232
         CALL AXSHAPE                                                     4232
C    *                                                                    4232
C    Defining Hits: Z:.001:S Y:.001: X:.001: PTOT:16:(0,100), CX:10: CY:  4236
C    10: CZ:10: SLENG:16:(0,500), TOF:16:(0,1.E-6) STEP:.01: ELOSS:16:(0  4236
C    ,0.001)                                                              4236
         AG_TITLE = 'IBSS'                                                4236
         AG_EXNAME = 'HITS'                                               4236
         AG_TYPE=AG_MAGIC                                                 4236
         CALL AGSDETV('IBSS')                                             4236
C    *                                                                    4236
         AG_PARLIST='Z'                                                   4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = AG_MAGIC                                              4236
         AG_BIN=.001                                                      4236
         AG_OPTION='S'                                                    4236
         AG_FHMIN = AG_MAGIC                                              4236
         AG_FHMAX = AG_MAGIC                                              4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='Y'                                                   4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = AG_MAGIC                                              4236
         AG_BIN=.001                                                      4236
         AG_FHMIN=AG_MAGIC                                                4236
         AG_FHMAX=AG_MAGIC                                                4236
         AG_OPTION='*'                                                    4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='X'                                                   4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = AG_MAGIC                                              4236
         AG_BIN=.001                                                      4236
         AG_FHMIN=AG_MAGIC                                                4236
         AG_FHMAX=AG_MAGIC                                                4236
         AG_OPTION='*'                                                    4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='PTOT'                                                4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = 16                                                    4236
         AG_BIN=AG_MAGIC                                                  4236
         AG_OPTION='*'                                                    4236
         AG_FHMIN = 0                                                     4236
         AG_FHMAX = 100                                                   4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='CX'                                                  4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = 10                                                    4236
         AG_BIN=AG_MAGIC                                                  4236
         AG_FHMIN=AG_MAGIC                                                4236
         AG_FHMAX=AG_MAGIC                                                4236
         AG_OPTION='*'                                                    4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='CY'                                                  4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = 10                                                    4236
         AG_BIN=AG_MAGIC                                                  4236
         AG_FHMIN=AG_MAGIC                                                4236
         AG_FHMAX=AG_MAGIC                                                4236
         AG_OPTION='*'                                                    4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='CZ'                                                  4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = 10                                                    4236
         AG_BIN=AG_MAGIC                                                  4236
         AG_FHMIN=AG_MAGIC                                                4236
         AG_FHMAX=AG_MAGIC                                                4236
         AG_OPTION='*'                                                    4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='SLENG'                                               4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = 16                                                    4236
         AG_BIN=AG_MAGIC                                                  4236
         AG_OPTION='*'                                                    4236
         AG_FHMIN = 0                                                     4236
         AG_FHMAX = 500                                                   4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='TOF'                                                 4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = 16                                                    4236
         AG_BIN=AG_MAGIC                                                  4236
         AG_OPTION='*'                                                    4236
         AG_FHMIN = 0                                                     4236
         AG_FHMAX = 1.E-6                                                 4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='STEP'                                                4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = AG_MAGIC                                              4236
         AG_BIN=.01                                                       4236
         AG_FHMIN=AG_MAGIC                                                4236
         AG_FHMAX=AG_MAGIC                                                4236
         AG_OPTION='*'                                                    4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         AG_PARLIST='ELOSS'                                               4236
         AG_TITLE = 'DETH'                                                4236
         AG_NBITS = 16                                                    4236
         AG_BIN=AG_MAGIC                                                  4236
         AG_OPTION='*'                                                    4236
         AG_FHMIN = 0                                                     4236
         AG_FHMAX = 0.001                                                 4236
         CALL AGSDETH (0)                                                 4236
C    *                                                                    4236
         CALL AGSDETU('IBSS')                                             4236
C    *                                                                    4236
5111  CALL AGSPOPB                                                        4237
      GO TO BLOCK_IBSS, (5110 ,5120)                                      4237
C End of Local Procedure                                                  4237
* -----------------------------------------------------------------------------
*Block ISMB is the material budget equivalent tube
*      Attribute ISMB Seen=1  colo=4
*      Material Silicon
*
*      Shape TUBE Rmin = ISAN_Rmin          _
*                 Rmax = ISAN_Rmin+ISAN_Thk _
*                 Dz   = Ladder_Length/2.0
*
*endblock
*
* -----------------------------------------------------------------------------
      END                                                                 4253
